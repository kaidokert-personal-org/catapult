{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e9cfcb74_c88a1929",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2024-03-20T18:21:00Z",
      "side": 1,
      "message": "lgtm with suggestion",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "044e20f4_8f834adf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-03-20T18:26:32Z",
      "side": 1,
      "message": "While this change lgtm, it seems the current logic should have tried to filtered out the improvements already:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/models/alert_group_workflow.py;l\u003d885\n\nThe _GetRegressions() here should only return those are not improvement. Any idea why this does not work\u003e",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a78cb6de_424766b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2024-03-20T18:38:07Z",
      "side": 1,
      "message": "can +1 again after nits are resolved.",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5c4e2b3_674fa4dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2024-03-20T18:38:07Z",
      "side": 1,
      "message": "My guess is that the anomaly is a false positive and only after regression verification do we determine there may actually be an improvement.",
      "parentUuid": "044e20f4_8f834adf",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2581eafc_a5ae9540",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-03-20T18:26:32Z",
      "side": 1,
      "message": "nit: improvement_direction \u003d request_json.get(\u0027anomaly\u0027, {}).get(\u0027improvement_dir\u0027)",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 23
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55fdfe69_a89d01fb",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2024-03-20T18:47:13Z",
      "side": 1,
      "message": "Thank you for the suggestion, done.",
      "parentUuid": "2581eafc_a5ae9540",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 23
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb6d5f6f_b0efe3d5",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 203,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2024-03-20T18:21:00Z",
      "side": 1,
      "message": "suggestion, turn these if statements into a helper function:\n\n```\ndef IsAlignedWithImprovementDir(control, treatment, dir)\n  if blah blah\n     return true\n  return false\n```",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1f59581_84998f6d",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 203,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2024-03-20T18:47:13Z",
      "side": 1,
      "message": "Thank you for the suggestion, done.",
      "parentUuid": "cb6d5f6f_b0efe3d5",
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64227e5a_39251b1b",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2024-03-20T18:30:23Z",
      "side": 1,
      "message": "nit: Could also control_media.lower() !\u003d \"infinity\" to make check case insensitive.",
      "range": {
        "startLine": 204,
        "startChar": 10,
        "endLine": 204,
        "endChar": 37
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8543ed7_4c518604",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2024-03-20T18:47:13Z",
      "side": 1,
      "message": "thank you for the suggestion, done.",
      "parentUuid": "64227e5a_39251b1b",
      "range": {
        "startLine": 204,
        "startChar": 10,
        "endLine": 204,
        "endChar": 37
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88b2df4e_3a7d6951",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2024-03-20T18:29:28Z",
      "side": 1,
      "message": "Does this mean that treatment_median and control_median can be both string and non-string?",
      "range": {
        "startLine": 204,
        "startChar": 6,
        "endLine": 206,
        "endChar": 41
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cee43a8c_a2b293e2",
        "filename": "dashboard/sandwich_verification/main.py",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2024-03-20T18:47:13Z",
      "side": 1,
      "message": "CABE return the statistic as a JSON string, it\u0027s better to check it has valid value here.",
      "parentUuid": "88b2df4e_3a7d6951",
      "range": {
        "startLine": 204,
        "startChar": 6,
        "endLine": 206,
        "endChar": 41
      },
      "revId": "41ca2cb6b45e871db32996ed7e8246c61eccffcf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}