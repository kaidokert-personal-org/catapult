{
  "comments": [
    {
      "key": {
        "uuid": "672393f9_9da17e75",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "Can we make this return (string, error) and pass through the errors?",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d6d3c3_1feb6a0a",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "Please avoid deep nesting if blks.\nheaderDateTime, err :\u003d time.Parse(..)\nif err !\u003d nil {\n  return headerDate;\n}\n\n...",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12e18855_6509875a",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "can we use time.Now() instead?",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f4b0226_1d205676",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1240549
      },
      "writtenOn": "2017-11-01T07:54:53Z",
      "side": 1,
      "message": "Get(\"Date\") here is to get the original date from the response header, rather than the current date. shiftHeaderDate \u003d headerDate + (now - originalDate), and this is implemented in line #45.",
      "parentUuid": "12e18855_6509875a",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e092e1c_08476001",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T12:47:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3f4b0226_1d205676",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f700b4ae_c185ad96",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1247140
      },
      "writtenOn": "2017-11-01T18:32:26Z",
      "side": 1,
      "message": "Use http.ParseTime.\nhttps://golang.org/pkg/net/http/#ParseTime",
      "range": {
        "startLine": 42,
        "startChar": 36,
        "endLine": 42,
        "endChar": 46
      },
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76e2c4d6_8e1cf915",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1240549
      },
      "writtenOn": "2017-11-02T06:08:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f700b4ae_c185ad96",
      "range": {
        "startLine": 42,
        "startChar": 36,
        "endLine": 42,
        "endChar": 46
      },
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01eea824_14db2101",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "I think this should be \"for k, _\". net/http.Header looks like it deserves to be accessed via its Get() func.",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c424222_af82d56b",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1240549
      },
      "writtenOn": "2017-11-01T07:54:53Z",
      "side": 1,
      "message": "Maybe use Get() func can\u0027t satisfy header copying in line#133, would you please elaborate more on why we should use \"for k, _\" instead of \"for k, v\"?",
      "parentUuid": "01eea824_14db2101",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7362cfe6_4b382745",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1240549
      },
      "writtenOn": "2017-11-01T08:56:12Z",
      "side": 1,
      "message": "I understood what you addressed here, and should we also use storedResp.Header[k] instead of v in line #133?",
      "parentUuid": "8c424222_af82d56b",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e45dfce3_84887849",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T12:47:09Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "7362cfe6_4b382745",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bf4d529_6e474acf",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "Let\u0027s a comment that this will make http.ResponseWriter fill in current time for \"Date\" header.",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5298d739_9cc7fac3",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1247140
      },
      "writtenOn": "2017-11-01T18:32:26Z",
      "side": 1,
      "message": "I think the following would be simpler:\n\nupdateDates(storedResp.Header)\nfor k, v :\u003d range storedResp.Header {\n  w.Header()[k] \u003d append([]string{}, v...)\n}\nw.WriteHeader(storedResp.StatusCode)\n\n\nfunc updateDate(h http.Header, name string, now, oldNow time.Time) {\n  val :\u003d h.Get(name)\n  if val \u003d\u003d \"\" {\n    return\n  }\n  oldTime, err :\u003d http.ParseTime(val)\n  if err !\u003d nil {\n    return\n  }\n  newTime :\u003d now.Add(oldTime.Sub(oldNow))\n  h.Set(name, newTime.UTC().Format(http.TimeFormat))\n}\n\nfunc updateDates(h http.Header) {\n  now :\u003d time.Now()\n  oldNow, err :\u003d http.ParseTime(h.Get(\"Date\"))\n  h.Set(\"Date\", now.UTC().Format(http.TimeFormat))\n  if err !\u003d nil {\n    return\n  }\n  updateDate(h, \"Last-Modified\", now, oldNow)\n  updateDate(h, \"Expires\", now, oldNow)\n}",
      "parentUuid": "4bf4d529_6e474acf",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d418961_3e78f3c9",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-02T00:26:55Z",
      "side": 1,
      "message": "+1. Also, maybe we should utilize proxy.transformers mechanism instead of doing this here ad-hoc.",
      "parentUuid": "5298d739_9cc7fac3",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85104574_deccc47b",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1240549
      },
      "writtenOn": "2017-11-02T06:08:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d418961_3e78f3c9",
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "124a6f51_10d9b08d",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "Let\u0027s add a comment that we are adjusting Last-Modified/Expires relative to current time.",
      "range": {
        "startLine": 130,
        "startChar": 29,
        "endLine": 130,
        "endChar": 30
      },
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef990df6_0f41aca4",
        "filename": "web_page_replay_go/src/webpagereplay/proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 131,
      "author": {
        "id": 1115949
      },
      "writtenOn": "2017-11-01T06:50:15Z",
      "side": 1,
      "message": "we should pass storedResp.Header.Get(k) instead of v",
      "range": {
        "startLine": 131,
        "startChar": 66,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "626aca685334aa8a21ba3d0fac768177458dd546",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}