{
  "comments": [
    {
      "key": {
        "uuid": "291b6df9_21dd11c2",
        "filename": "telemetry/telemetry/internal/backends/android_browser_backend_settings.py",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-12-06T15:41:09Z",
      "side": 1,
      "message": "At this point this also doesn\u0027t have much to do with android browsers (it\u0027s now more general), maybe move to telemetry.core.util itself?\n\n+Ned, what do you think?",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8728798_72fe0614",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-12-06T15:41:09Z",
      "side": 1,
      "message": "I think this decorators.Cache is misleading: the function will often get called on different instances of the class, so nothing gets \"really\" cached; and the low-level function in device_utils that ultimately does the installing also implements a bit of caching there. So let\u0027s just remove the decorator.",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc4ab3ee_cf10bbed",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-12-06T16:45:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8728798_72fe0614",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75aea7a6_9d567903",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-12-06T15:41:09Z",
      "side": 1,
      "message": "Now I\u0027m thinking, this also doesn\u0027t quite belong here.\n\nWhat about defining a platform.InstallHostApks(chrome_root, apk_names) which the shared story can call directly?",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763ed3c2_1d3870b8",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-12-06T16:45:18Z",
      "side": 1,
      "message": "The FindLocalApk and FindEmbedderApk in AndroidBrowserBackendSettings are using this method as well. They cannot be easily moved to platform. We can split into:\nplatform.InstallApk(some_util_place.FindLatestApkOnHost(chrome_root, apk))\n\nThis is a more verbose API, so I\u0027d want to ask before doing it.",
      "parentUuid": "75aea7a6_9d567903",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5882f4c8_feda973e",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-12-06T17:02:49Z",
      "side": 1,
      "message": "My thought is to keep FindEmbedderApk as is, possibly move FindLocalApk to telemetry.core.util (or keep as is), and just implement InstallHostApks in platform (with an implementation quite similar to the one you have here).",
      "parentUuid": "763ed3c2_1d3870b8",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bf7683c_5cde2204",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-12-06T17:04:20Z",
      "side": 1,
      "message": "s/FindLocalApk/FindLatestApkOnHost/",
      "parentUuid": "5882f4c8_feda973e",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c122e78_ace688f2",
        "filename": "telemetry/telemetry/internal/backends/chrome/android_browser_finder.py",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-12-10T14:16:03Z",
      "side": 1,
      "message": "Something is Done here, not 100% what you asked, but there is platform.InstallApk() as Ned wanted and an utility function in telemetry.core.util to facilitate it. PTAL.",
      "parentUuid": "8bf7683c_5cde2204",
      "revId": "ea960fe6e02824edd8f796c679d325962202fedf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}