{
  "comments": [
    {
      "key": {
        "uuid": "dc84a84e_7718380f",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "Should we make these argparse options?",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fb051eb_42953efa",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "dc84a84e_7718380f",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ae5a88b_e2ca55f8",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 219,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "nit: two blank lines between top level functions.",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a277f9_b7bbc610",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 219,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ae5a88b_e2ca55f8",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3982b757_7243f3a4",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 222,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "nit: Docstring title should fit in one line. You could rephrase to just\n\n    Returns the closest chromium snapshot available in cloud storage.\n\nThen spell out the details in the rest of the docstring.",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ec7907_418acfc4",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 222,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3982b757_7243f3a4",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11ffbc8b_b671b9c5",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "would it be too terrible if we get just 1234* ?",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2313c62_b90c7019",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "It just doesn\u0027t guarantee getting the closest chromium snapshot (e.g. if 12399 and  123404 are available, then the closet snapshot for 123401 is 12399, not 123404 which would be the result of looking at 1234**). Not the end of the world but it bothered me enough that I decided to properly implement closest search, but if you think this is too much complexity I can opt for 1234**.",
      "parentUuid": "11ffbc8b_b671b9c5",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ffb789e_c4fb7bbd",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-02T08:53:47Z",
      "side": 1,
      "message": "Ack. I see, that is fine then.",
      "parentUuid": "a2313c62_b90c7019",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "672c5814_c65fd688",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 265,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "nit: space after \u003d",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e4e7bf0_a839e27d",
        "filename": "common/bin/update_chrome_reference_binaries",
        "patchSetId": 11
      },
      "lineNbr": 265,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "672c5814_c65fd688",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9a30c4a_6612a36a",
        "filename": "common/py_utils/py_utils/cloud_storage.py",
        "patchSetId": 11
      },
      "lineNbr": 195,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "nit: \" -\u003e \u0027",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d181db87_0290bb36",
        "filename": "common/py_utils/py_utils/cloud_storage.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-26T13:15:30Z",
      "side": 1,
      "message": "this simple parsing of the results does not seem to work if you don\u0027t pass the \"-d\". Maybe always pass the -d is a subquery (call it sub_dir) is provided?",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4729fc5b_b975f1ed",
        "filename": "common/py_utils/py_utils/cloud_storage.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-01T21:59:31Z",
      "side": 1,
      "message": "Hm good catch. Currently it doesn\u0027t work because there are empty lines in the output. I\u0027m filtering them out now. \n\nCalling it a sub_dir may be confusing because we can do prefix search like foo/123*. I\u0027m changed it to \u0027path\u0027 now, which should be more obvious. Added some comments that the returned results are always relative to the bucket root directory.",
      "parentUuid": "d181db87_0290bb36",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf3c378e_e9c66a9c",
        "filename": "common/py_utils/py_utils/cloud_storage.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-02T08:53:47Z",
      "side": 1,
      "message": "Even if you strip empty lines, it looks like some of the paths have a trailing \u0027:\u0027 that you would need to strip. E.g. I get:\n\n$ gsutil ls gs://chromium-browser-snapshots/Linux_x64/1234*\ngs://chromium-browser-snapshots/Linux_x64/123403/:\ngs://chromium-browser-snapshots/Linux_x64/123403/REVISIONS\ngs://chromium-browser-snapshots/Linux_x64/123403/changelog.xml\ngs://chromium-browser-snapshots/Linux_x64/123403/chrome-linux.zip\ngs://chromium-browser-snapshots/Linux_x64/123403/devtools_frontend.zip\ngs://chromium-browser-snapshots/Linux_x64/123403/remoting-webapp.zip\ngs://chromium-browser-snapshots/Linux_x64/123403/chrome-linux.test/\n\ngs://chromium-browser-snapshots/Linux_x64/123407/:\ngs://chromium-browser-snapshots/Linux_x64/123407/REVISIONS\ngs://chromium-browser-snapshots/Linux_x64/123407/changelog.xml\ngs://chromium-browser-snapshots/Linux_x64/123407/chrome-linux.zip\n[...]\n\nMaybe just stripping a trailing \u0027:\u0027 from the strings would be fine? Anyway, also please add some tests for these new behaviors (possibly using mock gsutil outputs).",
      "parentUuid": "4729fc5b_b975f1ed",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "811824cd_64c389ec",
        "filename": "common/py_utils/py_utils/cloud_storage.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2019-10-03T02:46:23Z",
      "side": 1,
      "message": "I did not notice the last \u0027:\u0027. Thanks so much for pointing this out! \n\nI think we should not try to parse the output of ls foo* without -d: the grouping is too weird and people might be surprised. I left the old List command as it is (which doesn\u0027t accept a path argument so will never perform a query with a wildcard) and added a separate ListDirs command instead (which always adds \u0027-d\u0027, so only has to deal with flat lists and therefore no strange parsing necessary.)\n\nI also misunderstood how \u0027-d\u0027 works. The \u0027-d\u0027 argument prevents ls for recursing into directories but it still lists all non-directory files in the current directory (i.e. ls -d foo* will include foo-file.txt, so -d doesn\u0027t mean directory only). I\u0027m now checking for trailing slash for directory.\n\nAdded a test for the new ListDirs.",
      "parentUuid": "cf3c378e_e9c66a9c",
      "revId": "60bf85400b75f49b876a7a1b6feace980b938ca0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}