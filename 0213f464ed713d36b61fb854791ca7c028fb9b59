{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5db1c600_8c818ead",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "Looks mostly good. A couple suggestions and a couple questions in-line.",
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a40aa7d_ce94c9ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T20:46:19Z",
      "side": 1,
      "message": "Did you forget to push a new patchset? I don\u0027t see code changes addressing the comments you marked as resolved.",
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87832905_b59b9a82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T22:01:15Z",
      "side": 1,
      "message": "Right I did not push a new patchset yet, (but not because I forget). I meant to reply to your comments first to let know my thoughts.\n\nSo for those I said \"accepted\", I should not mark it as Resolved, and only mark it as resolved after I push the code, right?",
      "parentUuid": "4a40aa7d_ce94c9ba",
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f55eef70_91cb2fda",
        "filename": "devil/devil/android/logcat_monitor_test.py",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "nit: factor this out as a separate function. This will make it more obvious that we can remove the pylint suppression if we later remove py2 support.",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 78
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf386161_cca0cf4a",
        "filename": "devil/devil/android/logcat_monitor_test.py",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T05:15:19Z",
      "side": 1,
      "message": "Accepted",
      "parentUuid": "f55eef70_91cb2fda",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 78
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57df06be_2dc5932d",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "Does this need to be py3-only? My understanding is the goal right now is to leave py2 behavior untouched with respect to bytes vs. unicode, but let me know if something changed.",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73aa8229_d2638bf9",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T05:15:19Z",
      "side": 1,
      "message": "I mostly meant the py2 behavior untouched policy only applies to cmd_helper.py (or similar situations). In cmd_helper.py the str/bytes are directly returned to caller, so we want to continue return bytes to caller in py2, and return str to caller in py3.\nHere the return value is the md5 sum of the data, not the data itself. So it is possible we get different md5 sum for same data when running this under py2 or py3, but the return type is not changed for py2, due to we did not make change at line 59.\nI can see one potential issue here: The caller side try to call this function (or the one at line 65) once in py2, and another time in py3, and try to compare the two results. I would say this is not a scenario we plan to support. The caller side need to fix this issue.",
      "parentUuid": "57df06be_2dc5932d",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ec2dfa1_f4a094d4",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T20:46:19Z",
      "side": 1,
      "message": "Ah, makes sense. Thanks for explaining.\n\n\u003e I can see one potential issue here: The caller side try to call this function (or the one at line 65) once in py2, and another time in py3, and try to compare the two results.\n\nI know we do compare the results across runs (because the md5sum is used to invalidate a cache). Would it be hard to make the results match in both py2 and py3 to be safe?",
      "parentUuid": "73aa8229_d2638bf9",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01a59ab_2d49fc3c",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T22:01:15Z",
      "side": 1,
      "message": "Let me check. I later realized that I used a bad example. I meant to say md5sum result could change after this CL lands, and caller side should not try to compare results it get before and after this change.\nWith what you said, let me check if we can have a better way.",
      "parentUuid": "8ec2dfa1_f4a094d4",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc464cae_8daa623b",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-02T16:39:30Z",
      "side": 1,
      "message": "Nate: after some thinking, I revert back to treat py2 and py3 differently. Reason is that even though we won\u0027t have issue at return side, for the input, path could be a bytestring, and calling encode on it could met encode error and exception be thrown (https://stackoverflow.com/questions/56418305/python-2-byte-string-that-are-not-encoded-in-utf-8).\n\nFor the call to \u0027encode\u0027 in py3, I would say we can not avoid that, unless we want \u0027paths\u0027 to be \u0027bytes\u0027 (which probably is not what we want). But as the strings are paths, I would say in most case they will be just in ascii encoding, so for most case calling encode on them does not make any change.\n\nWith that said, do we even want to differentiate between py2 and py3. Pls let me know your opinion.",
      "parentUuid": "a01a59ab_2d49fc3c",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "684090fc_d414c125",
        "filename": "devil/devil/android/md5sum.py",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-03T00:46:52Z",
      "side": 1,
      "message": "I think it\u0027s probably reasonable to let py2 stick with bytes and let py3 use unicode.",
      "parentUuid": "bc464cae_8daa623b",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 38
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "068cb57e_b3e7b1ec",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "suggestion: should this be six.PY3 for consistency?",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79153f91_ee02567b",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T05:15:19Z",
      "side": 1,
      "message": "I used six.PY3 at first place. It will then complain six imported before system lib. Then I will need to add one pylint line to disable such complain.",
      "parentUuid": "068cb57e_b3e7b1ec",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "696f85e3_1716d041",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T20:46:19Z",
      "side": 1,
      "message": "I think this is a case where it makes sense to import six earlier and just suppress the pylint warning.",
      "parentUuid": "79153f91_ee02567b",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f69e098_472e043e",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T22:01:15Z",
      "side": 1,
      "message": "Let me check",
      "parentUuid": "696f85e3_1716d041",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53e9c0b3_51521684",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-02T16:39:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f69e098_472e043e",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "855144f7_cec8eb47",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "suggestion: maybe this logic should be a wrapper function\n\n  def to_long_int(val):\n    \"\"\"Cast val to a long int type.\"\"\"\n    return long(val) if six.PY2 else int(val)\n\nI think then you can remove the pylint warning.",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 36
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ed2ddae_9fe272ed",
        "filename": "devil/devil/android/perf/surface_stats_collector.py",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T05:16:43Z",
      "side": 1,
      "message": "Accepted",
      "parentUuid": "855144f7_cec8eb47",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 36
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33a5b6b8_45e781c9",
        "filename": "devil/devil/android/sdk/shared_prefs_test.py",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-04-01T01:10:04Z",
      "side": 1,
      "message": "It\u0027s not clear to me how this is related to the other changes.",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 136,
        "endChar": 48
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23e690aa_657dbd7a",
        "filename": "devil/devil/android/sdk/shared_prefs_test.py",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-04-01T05:15:19Z",
      "side": 1,
      "message": "This is copied from line 103. Without this the case can not pass under py3. But I don\u0027t understand why we don\u0027t need this line in py2.",
      "parentUuid": "33a5b6b8_45e781c9",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 136,
        "endChar": 48
      },
      "revId": "0213f464ed713d36b61fb854791ca7c028fb9b59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}