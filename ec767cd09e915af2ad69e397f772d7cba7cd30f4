{
  "comments": [
    {
      "key": {
        "uuid": "9a996580_f6f25468",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 978,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-03T07:21:00Z",
      "side": 1,
      "message": "None of the changes here are necessary. Passing the timeout to RunShellCommand down in atrace should be sufficient. If you\u0027re seeing something that makes you believe that\u0027s not the case, I\u0027d like to hear about it.",
      "revId": "ec767cd09e915af2ad69e397f772d7cba7cd30f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "512dec6a_7a087ad1",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 978,
      "author": {
        "id": 1245231
      },
      "writtenOn": "2017-10-03T18:50:31Z",
      "side": 1,
      "message": "RunShellCommand timeout doesn\u0027t work without my patch because handle_large_command doesn\u0027t accept a timeout parameter. I put prints with/without patch and timeout is not propagated to adb.Shell. \n\nI see default timeout of instead of the 300 I passed.\nargs [\u0027shell\u0027, \u0027( ( atrace -z -t 10 -b 30000 critical sched --async_stop )\u003e/data/local/tmp/temp_file-d196279a14f45 2\u003e\u00261 );echo %$?\u0027] , timeout 30",
      "parentUuid": "9a996580_f6f25468",
      "revId": "ec767cd09e915af2ad69e397f772d7cba7cd30f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9f4c48b_a1f1f026",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 978,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2017-10-04T00:48:05Z",
      "side": 1,
      "message": "Sorry about the delay -- plane internet took a nosedive shortly after we spoke :(\n\nThis is a weird answer and I\u0027d be happy to explain it in more detail, but that doesn\u0027t actually matter. We don\u0027t spawn inner timeout threads, so only the outermost timeout value -- here, the one you\u0027re passing to RunShellCommand -- matters.",
      "parentUuid": "512dec6a_7a087ad1",
      "revId": "ec767cd09e915af2ad69e397f772d7cba7cd30f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f9615a_5fd4741d",
        "filename": "systrace/systrace/tracing_agents/atrace_agent.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1212364
      },
      "writtenOn": "2017-10-02T16:35:24Z",
      "side": 1,
      "message": "how large of an output needs 5 minutes?\n\nIs this something we could compute dynamically from buffer size? Would prefer not to have to wait 5 minutes if the command fails when capturing a regular ~20mb trace.",
      "revId": "ec767cd09e915af2ad69e397f772d7cba7cd30f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0042a7f2_4cf1851d",
        "filename": "systrace/systrace/tracing_agents/atrace_agent.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1245231
      },
      "writtenOn": "2017-10-02T16:42:21Z",
      "side": 1,
      "message": "I don\u0027t think its meaningful to calculate it dynamically as it depends on the USB transfer speed, device etc. I also don\u0027t think there\u0027s a way to know apriori about the utilized size of the trace buffer.",
      "parentUuid": "15f9615a_5fd4741d",
      "revId": "ec767cd09e915af2ad69e397f772d7cba7cd30f4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}