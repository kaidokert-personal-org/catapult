{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bcf97cf4_27ce40ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1512169
      },
      "writtenOn": "2021-11-10T14:33:49Z",
      "side": 1,
      "message": "PTAL",
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "965e9a73_d2be7753",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-12T22:27:56Z",
      "side": 1,
      "message": "Thanks! This looks pretty reasonable, just a few comments",
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "451bb21f_d6c30a7b",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2441,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-12T22:27:56Z",
      "side": 1,
      "message": "Would it be possible to add a test case for the utf8 behavior? Maybe we can return a non-unicode bytes sequence and verify the characters are encoded as \u0027?\u0027 instead of crashing?",
      "range": {
        "startLine": 2441,
        "startChar": 42,
        "endLine": 2441,
        "endChar": 76
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dbedd93_3bbc3bda",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2441,
      "author": {
        "id": 1512169
      },
      "writtenOn": "2021-11-13T06:06:50Z",
      "side": 1,
      "message": "Yes, it is possible while we use bytes-mode |open| and decode (with |six.ensure_str| or |bytes.decode|). But we can test this only on Python3, on Python2 this parameters is meaningless (I wrote more detailed comment below).\nAlso, changing implementation with using |io.open| would be more difficult for test this case.",
      "parentUuid": "451bb21f_d6c30a7b",
      "range": {
        "startLine": 2441,
        "startChar": 42,
        "endLine": 2441,
        "endChar": 76
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c814688e_5a134e1d",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2441,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-16T02:04:14Z",
      "side": 1,
      "message": "If it\u0027s straightforward to return early from the test case when `six.PY2 \u003d\u003d True` then I would be OK with that. However if it\u0027s too much complexity to add a test case, then that\u0027s OK with me too.",
      "parentUuid": "4dbedd93_3bbc3bda",
      "range": {
        "startLine": 2441,
        "startChar": 42,
        "endLine": 2441,
        "endChar": 76
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8bbc7a2_41ccc748",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2474,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-12T22:27:56Z",
      "side": 1,
      "message": "Can you briefly summarize the default behavior with respect to non-unicode byte sequences? Either here or maybe in a second sentence near the top of the docstring.",
      "range": {
        "startLine": 2473,
        "startChar": 0,
        "endLine": 2474,
        "endChar": 38
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5ddb4b2_3b865cf0",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2474,
      "author": {
        "id": 1512169
      },
      "writtenOn": "2021-11-13T06:06:50Z",
      "side": 1,
      "message": "Sure, but one little note.\nThis parameters is meaningless on Python2, because |str| and |bytes| are the same type. On Python3 we return |str| value, not |bytes| and need specify encoding. This, on Python3 this implementation don\u0027t allow to read file as bytes. Maybe add special case for allowing this? For example, if |encoding| is |None|, return bytes instead of string?",
      "parentUuid": "f8bbc7a2_41ccc748",
      "range": {
        "startLine": 2473,
        "startChar": 0,
        "endLine": 2474,
        "endChar": 38
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "646a6ca4_d45c2438",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 2474,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-16T02:04:14Z",
      "side": 1,
      "message": "\u003e This parameters is meaningless on Python2\n\nAck. Could you briefly mention these are python3-only in the docstring?\n\n\u003e Maybe add special case for allowing this? For example, if |encoding| is |None|, return bytes instead of string?\n\nThat sounds good to me.",
      "parentUuid": "f5ddb4b2_3b865cf0",
      "range": {
        "startLine": 2473,
        "startChar": 0,
        "endLine": 2474,
        "endChar": 38
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e1e565_a21fa0c3",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 1
      },
      "lineNbr": 2495,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-12T22:27:56Z",
      "side": 1,
      "message": "nit: do we need to add these args if they\u0027re optional?",
      "range": {
        "startLine": 2495,
        "startChar": 60,
        "endLine": 2495,
        "endChar": 79
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042edfc8_b42ab957",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 1
      },
      "lineNbr": 2495,
      "author": {
        "id": 1512169
      },
      "writtenOn": "2021-11-13T06:06:50Z",
      "side": 1,
      "message": "Oops, don\u0027t need, thanks!",
      "parentUuid": "17e1e565_a21fa0c3",
      "range": {
        "startLine": 2495,
        "startChar": 60,
        "endLine": 2495,
        "endChar": 79
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ca40305_498e4297",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 1
      },
      "lineNbr": 2511,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2021-11-12T22:27:56Z",
      "side": 1,
      "message": "Same question here: is it necessary to state this was called with the default args?",
      "range": {
        "startLine": 2511,
        "startChar": 44,
        "endLine": 2511,
        "endChar": 61
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96be25c7_93427f2e",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 1
      },
      "lineNbr": 2511,
      "author": {
        "id": 1512169
      },
      "writtenOn": "2021-11-13T06:06:50Z",
      "side": 1,
      "message": "No, thanks",
      "parentUuid": "4ca40305_498e4297",
      "range": {
        "startLine": 2511,
        "startChar": 44,
        "endLine": 2511,
        "endChar": 61
      },
      "revId": "db11a008b7efd9a08495ca8336be8fc2aeb8c1f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}