{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e1eb48a0_3614f174",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T18:53:00Z",
      "side": 1,
      "message": "I tested this via a manual roll CL (https://chromium-review.googlesource.com/c/chromium/src/+/3858320). There are some minor failures with the comments due to the removal of the trailing newline character. I was planning to fix those in the manual roll CL and submit that after this is LGTMed.",
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fde0be6b_87e9d65b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2022-09-08T19:27:40Z",
      "side": 1,
      "message": "Please add definitions of \"attribute\" and \"result\" in the CL description and code comments. I have used these terms in discussions, but I don\u0027t think they were formally defined.",
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28bf8db7_0ba98481",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002481
      },
      "writtenOn": "2022-09-08T19:28:55Z",
      "side": 1,
      "message": "The above comment just applies to CL description.\n\nThe code comments already have good definitions of them.",
      "parentUuid": "fde0be6b_87e9d65b",
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22b1cf35_340bf501",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Made an initial pass, will do another once this is shown to work properly on the GPU bots and existing comments are addressed.\n\nPlease also wait for rmhasan\u0027s approval since they\u0027re actually a typ owner.\n\nThis seems like a fairly major change to how expectations work, so we need to be careful about what we land - things could end up breaking in subtle ways.",
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4684615_70f0c040",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Can you also test this against the GPU optional bots (*_optional_gpu_tests_rel)?",
      "parentUuid": "e1eb48a0_3614f174",
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bd65892_ab10aafe",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Should these be put into an `ATTRIBUTE_TAGS` set similar to `RESULT_TAGS` since you\u0027re making that distinction now?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 38,
        "endChar": 40
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d10f685f_71ccd051",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Added a comment for now. We can consider a map for them later, but atm there isn\u0027t an enum or anything for these immediately so leaving as is for now.",
      "parentUuid": "9bd65892_ab10aafe",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 38,
        "endChar": 40
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "675e48c7_131516a5",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2022-09-08T21:38:35Z",
      "side": 1,
      "message": "What should be the semantics of this variable? If the intention is to allow union of attributes , is it correct to totally disable check of conflicts?",
      "range": {
        "startLine": 455,
        "startChar": 13,
        "endLine": 455,
        "endChar": 31
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62fc8df9_e5abef66",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "This is separate from attributes. This is specifically for what `typ` currently defines as conflicts, i.e. exact query matches. I am adding this so that the presubmit unittests don\u0027t check for conflicts if the expectation file specifically allows them.",
      "parentUuid": "675e48c7_131516a5",
      "range": {
        "startLine": 455,
        "startChar": 13,
        "endLine": 455,
        "endChar": 31
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3cbca78_79327c44",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2022-09-09T00:00:06Z",
      "side": 1,
      "message": "Thanks. I realized this is essentially an existing variable. We are always accessing this variable after the assignment at line 518. In this case I suggest we don\u0027t add this member variable.\n\nWhy this would make a difference to the presubmit unittests? I see there is no functional change around this.",
      "parentUuid": "62fc8df9_e5abef66",
      "range": {
        "startLine": 455,
        "startChar": 13,
        "endLine": 455,
        "endChar": 31
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cf9266d_40f968e5",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-09T06:50:33Z",
      "side": 1,
      "message": "There is a usage of it in line 679. The `check_test_expectations_patterns_for_conflicts` function is used in a unit test here: content/test/gpu/gpu_tests/test_expectations_unittest.py",
      "parentUuid": "f3cbca78_79327c44",
      "range": {
        "startLine": 455,
        "startChar": 13,
        "endLine": 455,
        "endChar": 31
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c53de301_6fc1ffc0",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Not directly relevant to your CL, but can you define this member variable in `__init__` ? All member variables should be defined there.",
      "range": {
        "startLine": 460,
        "startChar": 8,
        "endLine": 460,
        "endChar": 18
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecff24f4_909ee186",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c53de301_6fc1ffc0",
      "range": {
        "startLine": 460,
        "startChar": 8,
        "endLine": 460,
        "endChar": 18
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af4205ad_b8c96755",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "These seem like they should be local variables, not member variables.",
      "range": {
        "startLine": 584,
        "startChar": 8,
        "endLine": 590,
        "endChar": 29
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac6c55de_9a4caddc",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "I agree and I initially tried to change this already, but the way that the helpers are set up it doesn\u0027t work because the helpers (`_update_expected_attributes`, and `_update_expected_results` need to have the `self` scope to find and modify the variables. This can probably be reworked so that these helpers either return like an updated set of information or something, but I would prefer to leave this as is for now since it would be a more involved change.",
      "parentUuid": "af4205ad_b8c96755",
      "range": {
        "startLine": 584,
        "startChar": 8,
        "endLine": 590,
        "endChar": 29
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66cace73_8c00d0fc",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-09T18:37:32Z",
      "side": 1,
      "message": "\u003e the helpers ( _update_expected_attributes , and  _update_expected_results  need to have the  self  scope to find and modify the variables\n\nThat shouldn\u0027t be the case. Toy example from an interactive Python prompt:\n\n```\n\u003e\u003e\u003e def outer():\n...   a \u003d \u0027a string\u0027\n...   def inner():\n...     print(a)\n...   inner()\n... \n\u003e\u003e\u003e outer()\na string\n```",
      "parentUuid": "ac6c55de_9a4caddc",
      "range": {
        "startLine": 584,
        "startChar": 8,
        "endLine": 590,
        "endChar": 29
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38075ea2_2ce00045",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 602,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Here and below, you should be able to use `.add(x)` instead of `.update([x])`",
      "range": {
        "startLine": 602,
        "startChar": 44,
        "endLine": 602,
        "endChar": 50
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4ff6a6e_f1efe3df",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 602,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38075ea2_2ce00045",
      "range": {
        "startLine": 602,
        "startChar": 44,
        "endLine": 602,
        "endChar": 50
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c7cf436_762deb98",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 621,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "`set([exp.trailing_comments])` seems better.",
      "range": {
        "startLine": 619,
        "startChar": 46,
        "endLine": 621,
        "endChar": 21
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22373a02_efd903bc",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 621,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c7cf436_762deb98",
      "range": {
        "startLine": 619,
        "startChar": 46,
        "endLine": 621,
        "endChar": 21
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042b3376_c5434994",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 622,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-09-08T20:25:08Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 622,
        "startChar": 36,
        "endLine": 622,
        "endChar": 48
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d2cd8ce_26e40fc6",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 622,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "042b3376_c5434994",
      "range": {
        "startLine": 622,
        "startChar": 36,
        "endLine": 622,
        "endChar": 48
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "709ba5af_43b772d0",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2022-09-08T21:38:35Z",
      "side": 1,
      "message": "left over debug info?",
      "range": {
        "startLine": 520,
        "startChar": 8,
        "endLine": 520,
        "endChar": 62
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8dbb61e_ef160dfa",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1524993
      },
      "writtenOn": "2022-09-08T23:09:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "709ba5af_43b772d0",
      "range": {
        "startLine": 520,
        "startChar": 8,
        "endLine": 520,
        "endChar": 62
      },
      "revId": "74d132b11624843a49a4499112519bbfd4cf4220",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}