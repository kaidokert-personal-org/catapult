{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "96b329bb_165760a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2021-05-03T21:51:57Z",
      "side": 1,
      "message": "Updated using python version as the import condition. The reason is that the io.open().write() expects unicode (as string in python 3), and the current usages of write() will fail on python 2. ",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57a7cff9_a43229e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-05-03T22:04:38Z",
      "side": 1,
      "message": "That really makes this CL a no-op, since in Python 3, io.open is identical to open. The reason for \"from io import open\" is to force using Python 3 version of open on Python 2, in order to maintain consistency after upgrade.",
      "parentUuid": "96b329bb_165760a7",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae303b23_38b7b261",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2021-05-04T15:55:42Z",
      "side": 1,
      "message": "I see. It seems like in python 2 we need to manually convert the string into unicode before writing it to the files opened by io.open().",
      "parentUuid": "57a7cff9_a43229e7",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}