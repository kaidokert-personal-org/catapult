{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "96b329bb_165760a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2021-05-03T21:51:57Z",
      "side": 1,
      "message": "Updated using python version as the import condition. The reason is that the io.open().write() expects unicode (as string in python 3), and the current usages of write() will fail on python 2. ",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57a7cff9_a43229e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-05-03T22:04:38Z",
      "side": 1,
      "message": "That really makes this CL a no-op, since in Python 3, io.open is identical to open. The reason for \"from io import open\" is to force using Python 3 version of open on Python 2, in order to maintain consistency after upgrade.",
      "parentUuid": "96b329bb_165760a7",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae303b23_38b7b261",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2021-05-04T15:55:42Z",
      "side": 1,
      "message": "I see. It seems like in python 2 we need to manually convert the string into unicode before writing it to the files opened by io.open().",
      "parentUuid": "57a7cff9_a43229e7",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3af7bd07_d5c9fd70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-05-04T16:17:07Z",
      "side": 1,
      "message": "The \"long way\" would be replacing all instances of \u0027foo\u0027 with u\u0027foo\u0027, and then use io.open(). But I think that\u0027s too tedious and of doubtful value. In my opinion, io.open is primarily useful for people who writes non-ASCII characters into files. Since virtually all our files are for logging purposes and contain only ASCII, I think we can just keep the calls to open() as is, and open fix specific Python 3 issue when we notice them.",
      "parentUuid": "ae303b23_38b7b261",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5f956b_819bbb43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2021-05-05T22:34:59Z",
      "side": 1,
      "message": "SGTM. I\u0027ll make this WIP for now.",
      "parentUuid": "3af7bd07_d5c9fd70",
      "revId": "7683bd0d07dd39ebcd2bdfab0948d86dc31caea1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}