{
  "comments": [
    {
      "key": {
        "uuid": "240e63b2_da51f527",
        "filename": "dashboard/dashboard/pinpoint/handlers/task_updates.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2019-12-09T02:55:58Z",
      "side": 1,
      "message": "Typo: “message”",
      "range": {
        "startLine": 40,
        "startChar": 49,
        "endLine": 40,
        "endChar": 55
      },
      "revId": "3883e729fc9f6dfe55418c478ed0f5ceebe6db3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e595c57f_000bf951",
        "filename": "dashboard/dashboard/pinpoint/handlers/task_updates.py",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2019-12-09T02:55:58Z",
      "side": 1,
      "message": "This `error` variable is unused.",
      "range": {
        "startLine": 44,
        "startChar": 26,
        "endLine": 44,
        "endChar": 31
      },
      "revId": "3883e729fc9f6dfe55418c478ed0f5ceebe6db3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e80c5e1_b9d32ed7",
        "filename": "dashboard/dashboard/pinpoint/handlers/task_updates.py",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2019-12-09T02:55:58Z",
      "side": 1,
      "message": "Trailing comma needed to make this a tuple literal.",
      "range": {
        "startLine": 46,
        "startChar": 26,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "3883e729fc9f6dfe55418c478ed0f5ceebe6db3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1257c92_20d92229",
        "filename": "dashboard/dashboard/pinpoint/handlers/task_updates_test.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2019-12-09T02:55:58Z",
      "side": 1,
      "message": "I think if you replace this dict element with\n\n  \u0027data\u0027: \u0027non-base64 garbage!\u0027,\n\nthis test will still pass, because the try-except will ensure almost every input receives a 204 reply.\n\nSo `testPostWorks` probably needs to be changed too, because it currently doesn\u0027t verify what it appears to intend to.  (Perhaps obviously bad inputs like that should respond with HTTP 400 Bad Request rather than a 204, which would make this testing a little bit easier.)",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 23
      },
      "revId": "3883e729fc9f6dfe55418c478ed0f5ceebe6db3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}