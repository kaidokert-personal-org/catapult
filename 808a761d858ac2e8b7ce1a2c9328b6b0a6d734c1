{
  "comments": [
    {
      "key": {
        "uuid": "466360f3_59f1313e",
        "filename": "tracing/tracing/value/ui/histogram_importer_test.html",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-10-17T16:59:30Z",
      "side": 1,
      "message": "Could you use async/await instead?\ntest(\u0027importZeroHistograms\u0027, async() \u003d\u003e {\n  setup...\n  await importer.importHistograms(histogramData, view);\n  assert...\n});",
      "revId": "808a761d858ac2e8b7ce1a2c9328b6b0a6d734c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c891838_0fbb4fa2",
        "filename": "tracing/tracing/value/ui/histogram_importer_test.html",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2018-10-18T12:17:39Z",
      "side": 1,
      "message": "üëç much nicer that way.\nI\u0027ll use \"async function() {..\" because of the this.AddHTMLOutput which doesn\u0027t work otherwise.",
      "parentUuid": "466360f3_59f1313e",
      "revId": "808a761d858ac2e8b7ce1a2c9328b6b0a6d734c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e878afc5_1c9888ba",
        "filename": "tracing/tracing_build/render_histograms_viewer.py",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-10-04T18:46:28Z",
      "side": 1,
      "message": "Would it not be simpler to find the start tag, find the end tag, take the data in between, and split on newlines, like HistogramImporter?\nUsing the \u0027^\u0027 in the pattern regex allows it to support the pathological case where the string \u0027--!\u003e\u003c/div\u003e\u0027 is embedded in the data, but the browser isn\u0027t going to support that, so we should either prevent that from happening or not worry about it at all.",
      "revId": "808a761d858ac2e8b7ce1a2c9328b6b0a6d734c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d834281_e78a34f4",
        "filename": "tracing/tracing_build/render_histograms_viewer.py",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2018-10-17T09:15:35Z",
      "side": 1,
      "message": "I prefer not walking over the data twice.\nAlso, I think with the \u0027^\u0027 we only match at the line start combined with newlines being escaped I don\u0027t think we can match anything in between (maybe I missed something).\nThis can only happen in the case where we embed custom html anyway.",
      "parentUuid": "e878afc5_1c9888ba",
      "revId": "808a761d858ac2e8b7ce1a2c9328b6b0a6d734c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "696cc9cb_09a8ad1a",
        "filename": "tracing/tracing_build/render_histograms_viewer.py",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-10-17T16:59:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2d834281_e78a34f4",
      "revId": "808a761d858ac2e8b7ce1a2c9328b6b0a6d734c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}