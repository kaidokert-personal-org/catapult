{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7dbd73fb_33ad7ae3",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2024-10-31T18:40:16Z",
      "side": 1,
      "message": "why is this in the \"except\" block? I\u0027d assume you want this check regardless?",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 129,
        "endChar": 29
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7e83f2_aa6d3236",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2024-11-01T17:27:15Z",
      "side": 1,
      "message": "+1, doesn\u0027t make sense to validate on error. also would prefer it being its own helper with tests.",
      "parentUuid": "7dbd73fb_33ad7ae3",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 129,
        "endChar": 29
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b751045_0338d0d9",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-04T22:48:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff7e83f2_aa6d3236",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 129,
        "endChar": 29
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6292e77_5de355d5",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2024-10-31T18:40:16Z",
      "side": 1,
      "message": "You can simply reuse data_str",
      "range": {
        "startLine": 131,
        "startChar": 29,
        "endLine": 131,
        "endChar": 47
      },
      "fixSuggestions": [
        {
          "fixId": "4d4ec7c1_8623a4b2",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "dashboard/dashboard/add_histograms.py",
              "range": {
                "startLine": 131,
                "startChar": 0,
                "endLine": 132,
                "endChar": 0
              },
              "replacement": "      for item in json.loads(data_str):\n"
            }
          ]
        }
      ],
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37d02204_d68cfe34",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-10-31T20:38:42Z",
      "side": 1,
      "message": "I feel like we can call FindSuiteLevelSparseDiagnostics() with only the \u0027histograms\u0027 parameter: we only want to throw as needed, but do not expect any returns.",
      "range": {
        "startLine": 131,
        "startChar": 6,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fea642a8_8967eefb",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-04T22:48:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37d02204_d68cfe34",
      "range": {
        "startLine": 131,
        "startChar": 6,
        "endLine": 131,
        "endChar": 65
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03e69d73_05adf87d",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-04T22:48:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6292e77_5de355d5",
      "range": {
        "startLine": 131,
        "startChar": 29,
        "endLine": 131,
        "endChar": 47
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d64f0f8_00a0f181",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2024-10-31T18:40:16Z",
      "side": 1,
      "message": "Can you give a sample of the json that is sent as input?",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 40
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d342add2_7666c485",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-04T22:48:23Z",
      "side": 1,
      "message": "https://paste.googleplex.com/4849360474210304",
      "parentUuid": "8d64f0f8_00a0f181",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 40
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "498ec26d_79e60690",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-05T20:34:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d342add2_7666c485",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 40
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b86923f2_93579e05",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2024-11-01T17:27:15Z",
      "side": 1,
      "message": "error message is misleading. are you trying to say that the value must be the same for every unique key, or keys must be unique and cannot be re-used?",
      "range": {
        "startLine": 138,
        "startChar": 24,
        "endLine": 138,
        "endChar": 63
      },
      "fixSuggestions": [
        {
          "fixId": "54b20750_42df9018",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "dashboard/dashboard/add_histograms.py",
              "range": {
                "startLine": 138,
                "startChar": 0,
                "endLine": 139,
                "endChar": 0
              },
              "replacement": "              err_msg \u003d k + \" must be same for all histograms\"\n"
            }
          ]
        }
      ],
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c779678a_0ed75f4c",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-04T22:48:23Z",
      "side": 1,
      "message": "Letting the FindSuiteLevelSparseDiagnostics method to handle errors",
      "parentUuid": "b86923f2_93579e05",
      "range": {
        "startLine": 138,
        "startChar": 24,
        "endLine": 138,
        "endChar": 63
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80db7970_312412c1",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1545038
      },
      "writtenOn": "2024-11-05T20:34:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c779678a_0ed75f4c",
      "range": {
        "startLine": 138,
        "startChar": 24,
        "endLine": 138,
        "endChar": 63
      },
      "revId": "e860820be06166a0d667d92987cfe61915ee036f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}