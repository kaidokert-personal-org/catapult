{
  "comments": [
    {
      "key": {
        "uuid": "3d97c54c_b5a86c16",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 12
      },
      "lineNbr": 227,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "can you file a bug and link to it here?",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "207e9804_40b82939",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 12
      },
      "lineNbr": 227,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d97c54c_b5a86c16",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d335e53f_9d44e86b",
        "filename": "telemetry/telemetry/internal/story_runner_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 1226,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "I have to say I also didn\u0027t like this mocking that much, and preferred the version where we pass a snippet of the expectation file contents.\n\nBut I also see your point regarding making these tests more \"unit\" and less \"integration\", which seems fair as the tests are already using a fake benchmark and a fake browser.\n\nStill, I think things would be clearer and concise if instead of creating ad hoc \"StoryFilter\" classes for each test, you have a single customizable \"TestStoryFilter\" class (which maybe just takes a list of story names to disable) to be reused by all.\n\nThis same class (or class factory), could probably be reused by story_filter_unittest.py below.",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b707ad13_455c50b6",
        "filename": "telemetry/telemetry/internal/story_runner_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 1226,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "Done.\n\nI refactored StoryFilter such that we could have decoupling between what a StoryFilter does and the fact that our current system likes to gather all the configuration for them when it parses arguments. This means that in the future we can create story filters any way we want. This also allowed me to mock the StoryFilterFactory and have it provide a fake story filter. It also made it easy to write a new testOneStoryFilteredOneNot() test.",
      "parentUuid": "d335e53f_9d44e86b",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c139bcf0_c0a47a52",
        "filename": "telemetry/telemetry/internal/story_runner_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 1226,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-15T10:57:21Z",
      "side": 1,
      "message": "Nice!",
      "parentUuid": "b707ad13_455c50b6",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f44f852_e7a14ede",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "Maybe not something to fix in this CL. But it would be great if we make this no longer a @classmethod. If we create many instances (specially during testing), it\u0027s really strange that calling this will method would suddenly change what existing instances would filter out or not (e.g. they may now point to a different expectations file.)\n\nThe fact that FilterStories is a class method, while ShouldSkip is not is also pretty confusing.\n\nAnyway, if not easily doable in this CL, could you leave a TODO?",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef80062_f75b1d2b",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "Done.\n\nStoryFilter before this changelist is being mostly configured when flags and other static configuration is passed in. It is beyond this changelist to change the fact that that is how we pull in configuration, and honestly it seems like a reasonable way for things to work.\n\nHowever, it is possible to pull the logic of StoryFilter out from the code that parses flags. That makes it more straightforward to test StoryFilter and means that two tests will not interact (so long as you configure them to skip the problematic global state storage that I moved to StoryFilterFactory).\n\nSo I did that.",
      "parentUuid": "0f44f852_e7a14ede",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bf658c3_9e060253",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-15T10:57:21Z",
      "side": 1,
      "message": "Neat. Thanks!",
      "parentUuid": "2ef80062_f75b1d2b",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5629b7f9_4118cb6c",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "I\u0027m wondering if, instead of passing the entire environment it would be enough to pass just the (single) path to an expectations file. Will also make things simpler for GetRunOptions and testing in general.",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0079be99_9e2b36e7",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "I see environment as similar to the parsed flags in that it is global configuration. There is some benefit to being able to mindlessly pass this configuration forward to the next class. So long as the configuration stays constant (none of the classes mutate it), we don\u0027t really run into any issues that I can think of. The benefit is that if we decide that we need some new configuration to be passes from Chromium to Telemetry classes, we can easily just add that configuration to ProjectConfig and then any of the classes down the line can access it without a ton of plumbing.",
      "parentUuid": "5629b7f9_4118cb6c",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b87d305_ea56224e",
        "filename": "telemetry/telemetry/story/story_filter.py",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-15T10:57:21Z",
      "side": 1,
      "message": "I also worry a bit about passing blobs of stuff around, it makes it harder to figure out what depends on what (i.e. why are we passing this? which bits of information are needed by which parts of the code?).\n\nBut also not a deal breaker. And as you say as long as the environment is not mutated, that should be reasonably fine.",
      "parentUuid": "0079be99_9e2b36e7",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c499696_fe9b4c29",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 159,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "Instead of having all these classes, I think it\u0027s more concise and often more readable if you have a single \"customizable\" class (or a function returning the customized class) which can be reused by multiple tests.\n\nFor example one such a class can be implemented by passing a list of story names to disable.",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "798f4513_d84a389c",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 12
      },
      "lineNbr": 159,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c499696_fe9b4c29",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a496e50f_b2eff6f3",
        "filename": "telemetry/telemetry/testing/options_for_unittests.py",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-11T12:05:23Z",
      "side": 1,
      "message": "As noted above, I think this would be better if callers just need to pass the path to the expectations file.",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c4736be_b477db0e",
        "filename": "telemetry/telemetry/testing/options_for_unittests.py",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-14T22:24:32Z",
      "side": 1,
      "message": "I disagree, and I explained in my response to the other comment.",
      "parentUuid": "a496e50f_b2eff6f3",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10402897_7266046c",
        "filename": "telemetry/telemetry/testing/options_for_unittests.py",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-15T10:57:21Z",
      "side": 1,
      "message": "Ack. Can you just add a comment to state that we need this for the story filter to get info about expectations?",
      "parentUuid": "7c4736be_b477db0e",
      "revId": "3d4f22f06aac2df5d50e3a0ff600dc70dfbb371e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}