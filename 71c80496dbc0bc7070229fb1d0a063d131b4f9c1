{
  "comments": [
    {
      "key": {
        "uuid": "69959605_099bd9d3",
        "filename": "telemetry/telemetry/internal/backends/chrome/desktop_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-06-06T12:24:20Z",
      "side": 1,
      "message": "can you switch this to subprocess.Popen(..) \u0026 upon return_code \u003d 1, log the stderr/stdout of the command instead?",
      "revId": "71c80496dbc0bc7070229fb1d0a063d131b4f9c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31910f1b_e7ad783a",
        "filename": "telemetry/telemetry/internal/backends/chrome/desktop_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-06-06T12:39:30Z",
      "side": 1,
      "message": "Why?",
      "parentUuid": "69959605_099bd9d3",
      "revId": "71c80496dbc0bc7070229fb1d0a063d131b4f9c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f73ab32a_2eb75bf1",
        "filename": "telemetry/telemetry/internal/backends/chrome/desktop_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-06-06T12:44:28Z",
      "side": 1,
      "message": "That would make the log easier to consume (as the output from this subprocess and Telemetry log are not mixed together).\n\nAnother benefit is I find stdout from the subprocess also reveal useful information for debugging sometime.",
      "parentUuid": "31910f1b_e7ad783a",
      "revId": "71c80496dbc0bc7070229fb1d0a063d131b4f9c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1bb6b1f_588b08ae",
        "filename": "telemetry/telemetry/internal/backends/chrome/desktop_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-06-06T12:46:13Z",
      "side": 1,
      "message": "stdout is currently not suppressed, so it\u0027s currently just logged, like stderr will be after this change.\n\nThe subprocess call is synchronous, so why would there be mixing?",
      "parentUuid": "f73ab32a_2eb75bf1",
      "revId": "71c80496dbc0bc7070229fb1d0a063d131b4f9c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4866c03_93e61869",
        "filename": "telemetry/telemetry/internal/backends/chrome/desktop_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-06-06T12:53:34Z",
      "side": 1,
      "message": "Ah ok. I think I remember it wrong then. \n\nAnother benefit with this approach is we won\u0027t add log unless there is something wrong with the subprocess call. \n\nIt also ensure that all the log output are captured by Telemetry\u0027s per-test log artifact which is implemented by capture logging handler (see https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/story_runner.py?rcl\u003dba9d017c9e77b3e6bcd2bfa7dceeedc9f1de2414\u0026l\u003d115)",
      "parentUuid": "a1bb6b1f_588b08ae",
      "revId": "71c80496dbc0bc7070229fb1d0a063d131b4f9c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}