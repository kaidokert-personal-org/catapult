{
  "comments": [
    {
      "key": {
        "uuid": "36ece63d_7651f9a1",
        "filename": "telemetry/telemetry/core/memory_cache_http_server.py",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "nit: unclear what \"inherited before use\" means.",
      "range": {
        "startLine": 312,
        "startChar": 24,
        "endLine": 312,
        "endChar": 54
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a057f34f_82321bc8",
        "filename": "telemetry/telemetry/core/memory_cache_http_server.py",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "nit: say \"Override\" instead of \"Overrides\". \"Override\" is an instruction, i.e. \"Please override this method\". \"Overrides\" is a description, i.e. \"This function overrides blah blah\".",
      "range": {
        "startLine": 316,
        "startChar": 15,
        "endLine": 316,
        "endChar": 16
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b35b7ab_5a9c3592",
        "filename": "telemetry/telemetry/core/memory_cache_http_server.py",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "Do we need to duplicate this particular code? Could we instead call\n\nsuper(self, MemoryCacheDynamicHTTPServerBackend).StartAndGetNamedPorts(args, handler_class\n\nWe could add an optional argument to MemoryCacheHTTPServerBackend\u0027s StartAndGetNamedPorts to do dependency injection of the handler_class",
      "range": {
        "startLine": 350,
        "startChar": 4,
        "endLine": 355,
        "endChar": 0
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3140ec3_bb6db0d0",
        "filename": "telemetry/telemetry/core/memory_cache_http_server.py",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "why can\u0027t we pass in the actual module and class instead of their names? That would mean that we wouldn\u0027t need to use __import__ which seems magical and scary.",
      "range": {
        "startLine": 356,
        "startChar": 4,
        "endLine": 356,
        "endChar": 23
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8938de0_799b2c75",
        "filename": "telemetry/telemetry/core/memory_cache_http_server.py",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "You can actually move this code to the unit test module.",
      "range": {
        "startLine": 394,
        "startChar": 0,
        "endLine": 398,
        "endChar": 57
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb2b560_060cdc37",
        "filename": "telemetry/telemetry/core/memory_cache_http_server_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "We try to follow the standard to import modules, not classes.\n\nfrom telemetry.core import memory_cache_http_server\n\n...\n\n\nmemory_cache_http_server.RequestHandlerForTest(...)",
      "range": {
        "startLine": 8,
        "startChar": 38,
        "endLine": 8,
        "endChar": 73
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad47843_045b6ccc",
        "filename": "telemetry/telemetry/core/memory_cache_http_server_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-09T23:38:07Z",
      "side": 1,
      "message": "RequestHandlerForTest can be defined inline here or elsewhere in this module.",
      "range": {
        "startLine": 85,
        "startChar": 45,
        "endLine": 85,
        "endChar": 66
      },
      "revId": "bffb5b237b396a7427d112baeb3e0c69f0eb295f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}