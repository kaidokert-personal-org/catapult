{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f42d1f_9390e3ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-07-13T10:16:54Z",
      "side": 1,
      "message": "ptal",
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fecf8a7_2184fb1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-07-14T16:12:23Z",
      "side": 1,
      "message": "Noticed another CL for the same issue: https://chromium-review.googlesource.com/c/catapult/+/4684769",
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5ce8f9e_ead76dc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-07-14T18:33:22Z",
      "side": 1,
      "message": "Even better, thanks for letting me know. I would have not gotten to this before next week.",
      "parentUuid": "1fecf8a7_2184fb1e",
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fc2b912_f97ed749",
        "filename": "telemetry/telemetry/internal/platform/linux_platform_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-07-13T16:51:11Z",
      "side": 1,
      "message": "The change of the first line LGTM. However, I don\u0027t believe the second line should be changed. When used as a string, OSVersion only includes the codename part, and the version part isn\u0027t visible.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4b82010_493ac2cc",
        "filename": "telemetry/telemetry/internal/platform/linux_platform_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-07-14T09:16:34Z",
      "side": 1,
      "message": "`_GetOSVersion` returns a float and that didn\u0027t concat with `codename + \u0027 \u0027 + version` locally. So I guess I need to fix that up manually?",
      "parentUuid": "9fc2b912_f97ed749",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0d43d83_3c911fc6",
        "filename": "telemetry/telemetry/internal/platform/linux_platform_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-07-14T15:27:41Z",
      "side": 1,
      "message": "Upon further look, calling _GetOSVersion is problematic, as the version does not always parse as float. For example, on the perf waterfall, os_release.get(\u0027VERSION\u0027) actually returns \"18.04.6 LTS (Bionic Beaver)\". This causes _GetOSVersion to return 0.0, an entire loss of meaningful version info.\n\nMy suggestion is don\u0027t call _GetOSVersion. When version is None, simply return code. Only do string concatenation when version is present.",
      "parentUuid": "c4b82010_493ac2cc",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "706dde853b54f2d26f64dcc4e08738a127202878",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}