{
  "comments": [
    {
      "key": {
        "uuid": "430ebcca_566c1138",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-05T21:35:33Z",
      "side": 1,
      "message": "I know you\u0027re following the pattern that already exists here, but I don\u0027t really like these tests. See this best practices doc for background: https://engdoc.corp.google.com/eng/doc/tott/episodes/598.md?cl\u003dhead\n\nI think that you should try to avoid used complicated logic in unit tests because we don\u0027t write unit tests for unit tests so we don\u0027t really know if they are working or not. Why not just do a simple string comparison here so we don\u0027t need to split the argument pieces?",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fdf8151_80ccda9d",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1363998
      },
      "writtenOn": "2019-12-05T22:05:44Z",
      "side": 1,
      "message": "The intention here was to try and avoid testing implementation details (i.e. not testing the order of the fieldtrials), but I see your point about complexity.\n\nI\u0027ve switched it to a clearer test (albeit one that assumes the pairs in each argument aren\u0027t split).",
      "parentUuid": "430ebcca_566c1138",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "522ed327_cbf2799a",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-05T22:41:54Z",
      "side": 1,
      "message": "ah, I guess the issue is that the function is not deterministic because the underlying storage for the arguments is an unordered set. I think you should consider switching us to a deterministic data structure so that you can do a straight string comparison here... I think it is important that Telemetry is completely deterministic about how it orders arguments and pieces of arguments... I think that we should consider blocking this changelist until we fix this.\n\nhttps://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/browser/browser_options.py?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d390 \nself._extra_browser_args should not be a set().",
      "parentUuid": "7fdf8151_80ccda9d",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b5971be_c9d586ee",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-12-05T22:43:35Z",
      "side": 1,
      "message": "Would you be able to make self._extra_browser_args a list instead? You can do that as a prerequisite to landing this changelist.",
      "parentUuid": "522ed327_cbf2799a",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f16256_962cc61b",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1363998
      },
      "writtenOn": "2019-12-06T15:46:38Z",
      "side": 1,
      "message": "I imagine the reason for making it a set rather than a list was to easily dedupe repeated flags (but we can wait on Juan to explain). If that\u0027s the case and we make it a list, we\u0027d then probably want to handle duplicates in chrome_startup_args.py.\n\nHowever, this would still not make the merging deterministic as we also use sets in chrome_startup_args.py. (Hence, the existing unit tests splitting the strings and checking for set equality.) Ideally, we\u0027d probably want \u0027OrderedSets\u0027, but python doesn\u0027t provide that type. Perhaps the easiest way would be to use OrderedDicts in chrome_startup_args.py (and ignore the values in the dictionary).\n\nGiven that the existing merging logic is non-deterministic, I think it\u0027d also make sense for me to make these changes in a follow-up CL rather than waiting.",
      "parentUuid": "2b5971be_c9d586ee",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3da7157_53699312",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-12-06T16:14:15Z",
      "side": 1,
      "message": "Yes, the reason for using set\u0027s is to easily remove duplicates. To gain determinism in other places we usually sort the entries from the set when serializing them, e.g. here into the command line args. Would that work here?\n\nAs noted in the TODO(crbug.com/799411) - It\u0027s probably worth thinking about implementing a class to handle these options with more understanding about what each of them mean and deal e.g. not only with duplicated but also conflicting option values.",
      "parentUuid": "87f16256_962cc61b",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f47cc2ed_c20e9d92",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_startup_args_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1363998
      },
      "writtenOn": "2019-12-06T16:33:32Z",
      "side": 1,
      "message": "Yes, sorting would work perfectly. I\u0027ve added that logic to the most recent patchset.",
      "parentUuid": "c3da7157_53699312",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 63,
        "endChar": 79
      },
      "revId": "de24b27c003caea40c9c93da1c5930e91b98dbe2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}