{
  "comments": [
    {
      "key": {
        "uuid": "5924d77c_b9a4c223",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-06-10T20:37:15Z",
      "side": 1,
      "message": "Who sets this variable? I\u0027m trying to understand whether this is set typ-client-side (i.e., the thing that calls runner.run()) or whether this is set somehow inside a test case?",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cc442e_98e887bf",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-06-10T20:50:55Z",
      "side": 1,
      "message": "Looks like this is set client-side by the test runner script https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/testing/run_browser_tests.py?q\u003d_typ_runner\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d274",
      "parentUuid": "5924d77c_b9a4c223",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e24d5731_c97cffe0",
        "filename": "third_party/typ/typ/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-06-07T20:45:24Z",
      "side": 1,
      "message": "The plan is to have recipes output links to any artifacts a test produces, but do additional work for certain artifact types. In the case of a link type, the plan was to have the recipe also output a direct link to what the artifact is pointing to in order to remove an unnecessary click for the user.",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 42,
        "endChar": 56
      },
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "365385e4_e1e87f05",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-10T09:44:02Z",
      "side": 1,
      "message": "This is a \"mistake\" I\u0027m trying to correct now in the new Telemetry implementation. Currently, like you do here, the \"artifact_results\" has a global view of all the artifacts for the entire test suite grouped by test name. But if you ran some test multiple times, you can\u0027t easily tell which artifacts belong to which test run. [And, for the future go/luci-test-results-design you do want to be able to make that distinction.]\n\nMaybe instead you want to keep a set of artifacts for each individual \"result\" [1], and then let the aggregation happen (in case of multiple test runs) at [2].\n\n[1]: https://cs.chromium.org/chromium/src/third_party/catapult/third_party/typ/typ/json_results.py?rcl\u003d93cd912aa60ef771f5aef978e3ba7f886c02bf9b\u0026l\u003d31\n[2]: https://cs.chromium.org/chromium/src/third_party/catapult/third_party/typ/typ/json_results.py?rcl\u003d93cd912aa60ef771f5aef978e3ba7f886c02bf9b\u0026l\u003d159",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c68e7ee_63b115be",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-06-10T20:26:22Z",
      "side": 1,
      "message": "Unfortunately, due to the way that typ runs tests (via a process pool), it doesn\u0027t look like a test would be able to easily report artifacts only for use in the one Results object for that run.\n\nAs a workaround, I made the ArtifactResults object have an internal counter for the current iteration so that its map is now:\n\ntest_name: {\n  iteration: {\n    artifact_type: [filepaths]\n  }\n}\n\nand the artifact retrieval only retrieves the results for the current iteration. The typ runner increments this counter on every retry. So while the ArtifactResults technically has a global view of all artifacts, they\u0027re only accessible on a per run basis.",
      "parentUuid": "365385e4_e1e87f05",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8653cc91_02132440",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-06-10T20:37:15Z",
      "side": 1,
      "message": "I tend to agree w/ perezju@ that we don\u0027t want to implement this via a global dict if we can avoid it. \n\nIt\u0027s not actually true that you can\u0027t report results back, but we might have to tweak the way test cases are declared to do so. TYP supports a form of instance-probing, where if your testcase object derives from typ.test_case.TestCase, it has methods to point at the child and context vars. We could do something similar to define a protocol where the testcase object could specify additional ways to pass links to artifacts back.",
      "parentUuid": "7c68e7ee_63b115be",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67ce2004_fbc8f506",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-06-10T20:50:55Z",
      "side": 1,
      "message": "Ack, I\u0027ll take a look into making SeriallyExecutedBrowserTestCase inherit from typ.test_case.TestCase instead of unittest.TestCase.",
      "parentUuid": "8653cc91_02132440",
      "revId": "ad1164f9b50b9bd99d3cfe96bbed5a142adbdeda",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}