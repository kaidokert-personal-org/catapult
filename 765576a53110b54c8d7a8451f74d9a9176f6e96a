{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f5700474_c53a407c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-23T20:36:37Z",
      "side": 1,
      "message": "Is there a way I can test this on Pinpoint before submitting? I don\u0027t want to break it again and create another hole where we can\u0027t bisect anything.",
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24d5a5dd_a03de19d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2021-06-24T06:09:28Z",
      "side": 1,
      "message": "Not really.  We don\u0027t yet have a dev or test deployment that would facilitate that.  Obviously for this kind of change it would be useful to be able to perform more end-to-end tests than we have now üòû\n\nPinpoint does push-on-green, so committing a revert will at least get automatically rolled out relatively promptly, if that\u0027s any comfort.",
      "parentUuid": "f5700474_c53a407c",
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a280119d_494d1ced",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-28T15:44:41Z",
      "side": 1,
      "message": "Ping on this",
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d286c2d4_f8e7df05",
        "filename": "dashboard/dashboard/pinpoint/handlers/new_test.py",
        "patchSetId": 4
      },
      "lineNbr": 380,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-23T20:36:37Z",
      "side": 1,
      "message": "Not seeing a good way to confirm that the fallback target was actually passed in/used, but at least this should give us coverage of the new code?",
      "range": {
        "startLine": 380,
        "startChar": 6,
        "endLine": 380,
        "endChar": 24
      },
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3ef232d_e61436ce",
        "filename": "dashboard/dashboard/pinpoint/handlers/new_test.py",
        "patchSetId": 4
      },
      "lineNbr": 380,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2021-06-24T06:09:28Z",
      "side": 1,
      "message": "Something like this maybe?\n\n    response \u003d self.Post(\u0027/api/new\u0027, request, status\u003d200)\n    job \u003d job_module.JobFromId(json.loads(response.body)[\u0027jobId\u0027])\n    self.assertEqual(\n        job.arguments.get(\u0027fallback_target\u0027), \u0027performance_test_suite\u0027)",
      "parentUuid": "d286c2d4_f8e7df05",
      "range": {
        "startLine": 380,
        "startChar": 6,
        "endLine": 380,
        "endChar": 24
      },
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7608b8e7_047ffcc9",
        "filename": "dashboard/dashboard/pinpoint/handlers/new_test.py",
        "patchSetId": 4
      },
      "lineNbr": 380,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-24T18:20:11Z",
      "side": 1,
      "message": "It seems that fallback_target isn\u0027t sent as part of the job, only target (which is still performance_test_suite_android_chrome). Not sure if that implies that this fallback approach doesn\u0027t work in its current implementation or just that this method of testing can\u0027t verify that we eventually use the fallback target.\n\nI think I\u0027m leaning towards the latter since we should only be changing the target after a build is complete, which I believe comes after the job request\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/pinpoint/models/quest/find_isolate.py;l\u003d135?q\u003dfallback_target%20file:pinpoint",
      "parentUuid": "d3ef232d_e61436ce",
      "range": {
        "startLine": 380,
        "startChar": 6,
        "endLine": 380,
        "endChar": 24
      },
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e543c57_cb8e3d5a",
        "filename": "dashboard/dashboard/pinpoint/handlers/new_test.py",
        "patchSetId": 4
      },
      "lineNbr": 380,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2021-06-29T07:54:22Z",
      "side": 1,
      "message": "Ah hmm.  _GenerateQuests modifies \u0027arguments\u0027, but Job.New is called with \u0027original_arguments\u0027, so the synthesized \u0027fallback_target\u0027 isn\u0027t reflected in Job.arguments.\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/pinpoint/handlers/new.py;l\u003d58,69,115\n\nI think that\u0027s actually correct, in that the Job.arguments property is meant to capture the original arguments from the request.\n\nBut I think it means your test would need to inspect job.quests rather than job.arguments instead.  Something like this would perhaps work, but is pretty ugly:\n\n  self.assertEqual([\u0027performance_test_suite\u0027], [q._fallback_target for q in  job.quests if hasattr(q, \u0027_fallback_target\u0027)])\n\nIt\u0027d be possible to add a helper make extracting a particular quest type from job.quests a little nicer, which would help.\n\nArguably this is digging through too many abstraction layers for test suite.  Whether and how a quest chooses to infer a missing argument based on other arguments is a matter for that quest (and its unit tests) rather than in unit tests for new job requests.  I\u0027m not sure we have good integration tests that should cover this.\n\n\u003e I think I\u0027m leaning towards the latter since we should only be changing the target after a build is complete, which I believe comes after the job request\n\nFrom the perspective of this test, I agree we don\u0027t want to be testing ‚Äúchanging the target‚Äù.  It would be nice to test ‚Äúthe fallback is correctly configured‚Äù at job creation time, though, but will require some inelegant piercing of abstraction layers.\n\nI think on balance I\u0027d be in favour of adding sort of test for that, even though it\u0027s a bit ugly, because the coverage is worth it.  But I don\u0027t feel very strongly about it, so I\u0027ll leave this up to your judgement.",
      "parentUuid": "7608b8e7_047ffcc9",
      "range": {
        "startLine": 380,
        "startChar": 6,
        "endLine": 380,
        "endChar": 24
      },
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2eb3d195_e3bb548f",
        "filename": "dashboard/dashboard/pinpoint/handlers/new_test.py",
        "patchSetId": 4
      },
      "lineNbr": 380,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-29T23:32:27Z",
      "side": 1,
      "message": "Agreed - I updated the test to check the quests.",
      "parentUuid": "8e543c57_cb8e3d5a",
      "range": {
        "startLine": 380,
        "startChar": 6,
        "endLine": 380,
        "endChar": 24
      },
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1708c382_9b1b0b78",
        "filename": "dashboard/dashboard/pinpoint/models/tasks/performance_bisection.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2021-06-23T20:36:37Z",
      "side": 1,
      "message": "It seems like the targets in this file are just to determine if extra runtime args need to be added, so we shouldn\u0027t need any fallback stuff here?",
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d14c531_5834c590",
        "filename": "dashboard/dashboard/pinpoint/models/tasks/performance_bisection.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1284623
      },
      "writtenOn": "2021-06-24T06:09:28Z",
      "side": 1,
      "message": "I think that\u0027s probably correct.",
      "parentUuid": "1708c382_9b1b0b78",
      "revId": "765576a53110b54c8d7a8451f74d9a9176f6e96a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}