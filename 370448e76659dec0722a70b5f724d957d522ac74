{
  "comments": [
    {
      "key": {
        "uuid": "bd7baad2_8a1f4496",
        "filename": "dashboard/dashboard/pinpoint/dispatcher.py",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "results2\u0027s GET is part of the public API and open to users, but POST is only to be used internally. They will have to be separate endpoints, so we can set `login: admin` in pinpoint.yaml.\n\nAlternatively, we can run the POST part as part of the job\u0027s execution, as mentioned in the comment on job.py. Then we\u0027d only have the public endpoint.",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0b6753_bc4746ea",
        "filename": "dashboard/dashboard/pinpoint/dispatcher.py",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Sure, I can collapse the post part into the job\u0027s execution, but that means that if we try to access an older results2 later (after we cron remove them), we won\u0027t regenerate them anymore like it\u0027s setup to do now. Maybe that\u0027s fine? I don\u0027t have a strong opinion on this.",
      "parentUuid": "bd7baad2_8a1f4496",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68db2906_8f128c6e",
        "filename": "dashboard/dashboard/pinpoint/dispatcher.py",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-07T07:45:22Z",
      "side": 1,
      "message": "Oh, that\u0027s true... Okay, seems fine as-is. We don\u0027t really know yet what the plan is for expiration, maybe we\u0027d even expire the Job and the results2 together.",
      "parentUuid": "8b0b6753_bc4746ea",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f4aed44_8bf8c4f7",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "What\u0027s the purpose of this model? Just to track when the results2 was generated?",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea449e17_b8b515d7",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Yeah, we spoke offline about this briefly. I said I\u0027d just store the metadata about when it was generated for now, and leave cron\u0027ing over them for later.",
      "parentUuid": "2f4aed44_8bf8c4f7",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a43b36e_19a0febb",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "nit: self._gcs_file",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "273b61b6_9b355804",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a43b36e_19a0febb",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c83419d6_78074df6",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "It still looks like this doesn\u0027t need to be a class.",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c161279_361e533a",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "My python isn\u0027t that strong, got some tips on a nicer way to do this? This gets fed into render_hsitograms_viewer.RenderHistogramsViewer, which expects an iterable list of histograms.",
      "parentUuid": "c83419d6_78074df6",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ecd75d8_5f070d63",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-07T00:21:39Z",
      "side": 1,
      "message": "Essentially using the __iter__ method as the entire function:\n\ndef _FetchHistogramsDataFromJobData(job_id):\n  for isolate_hash in _GetAllIsolateHashesForJob(job_id):\n    hs \u003d _FetchHistogramFromIsolate(isolate_hash)\n    for h in hs:\n      yield h\n    del hs",
      "parentUuid": "7c161279_361e533a",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1feb34f5_aba17946",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-07T01:07:07Z",
      "side": 1,
      "message": "Nice, done.",
      "parentUuid": "9ecd75d8_5f070d63",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9934b92a_7cdae0e9",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "nit: Can you add a comment about memory usage?",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6087ee39_50a0ad35",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2.py",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9934b92a_7cdae0e9",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f61e136a_cf28bbe8",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2_test.py",
        "patchSetId": 9
      },
      "lineNbr": 163,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "nit: unused.",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33153f21_cf19305b",
        "filename": "dashboard/dashboard/pinpoint/handlers/results2_test.py",
        "patchSetId": 9
      },
      "lineNbr": 163,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f61e136a_cf28bbe8",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1e8a834_dc71e5c0",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "nit: would you mind putting it at the beginning of the method? I feel like we should handle all the internal affairs before external communication.",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b785643f_06770378",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1e8a834_dc71e5c0",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a9b9827_26094ba4",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 9
      },
      "lineNbr": 169,
      "author": {
        "id": 1000093
      },
      "writtenOn": "2018-03-06T01:53:30Z",
      "side": 1,
      "message": "Since we\u0027re already running on a task queue, do we need to queue up another task to do it? Maybe we should just do it as part of the Job run.",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f768ac_982ec4cd",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 9
      },
      "lineNbr": 169,
      "author": {
        "id": 1116018
      },
      "writtenOn": "2018-03-06T17:59:27Z",
      "side": 1,
      "message": "Could, I did it this way so that both complete and the results2 endpoint could just call the same schedule function. Lemme know how you want to proceed here.",
      "parentUuid": "9a9b9827_26094ba4",
      "revId": "370448e76659dec0722a70b5f724d957d522ac74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}