{
  "comments": [
    {
      "key": {
        "uuid": "1efc8f2b_e0cf7699",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "nit: no (c)",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b96751a_bb0802b1",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1efc8f2b_e0cf7699",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5251b61_de6a829d",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "Please write this as an ES6 class: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aab6c6d9_a6ba61a0",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5251b61_de6a829d",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85f4e8a7_a00d66b2",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "It seems like this logic is going to wait for the first one to finish before making a new request. Is that what you want? What if the second one finishes first? Should you use Promise.race here instead?",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c600c850_dce63e8c",
        "filename": "tracing/tracing/ui/extras/about_tracing/devtools_stream.html",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "We make two requests immediately, then process one before making the 3rd, and in general process the k\u0027th request before making the (k+2)\u0027th .\n\nPromise.race() won\u0027t help here. Both sides are processing the RPC calls in order, over a single web socket. The goal is not to allow RPCs to complete out of order, but rather just to get a bit more concurrency - once the service responds to the first read() call, it can immediately begin working on the following one instead of having to wait for the client to receive the response before making the next request.",
      "parentUuid": "85f4e8a7_a00d66b2",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5eb2c2ef_be9660de",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client.html",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "Sorry the linter didn\u0027t catch this, but this.conn_ should go on the next line.",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84063c9b_d212d9d8",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client.html",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Done. Is there a formatter for this? I am normally spoiled by clang-format.",
      "parentUuid": "5eb2c2ef_be9660de",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33c14e0a_078494d2",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "Why this name? Maybe you can explain a little bit about the landscape here? What\u0027s DevToolsHost and how does it relate to InspectorTraingControllerClient? Where is it defined?",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9822514_e9135316",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Wrote a bunch of text here. This is all very boring code to allow tests to get promises for arguments to incoming calls on the remote debugging messaging interface, as well as respond to those messages. The messaging interface is normally injected by chrome://inspect, but we can\u0027t get a real instance of that API in the test environment.",
      "parentUuid": "33c14e0a_078494d2",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6097035c_8308d720",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "I\u0027m sort of uncomfortable with this idea of modifying globals to make these tests work. We don\u0027t really have tests in trace-viewer that do that right now and I think needing to do that in order to get test coverage is maybe a smell. Could we refactor InspectorTracingControllerClient to take a optional connection instead, to make it easier to test without modifying globals?",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024ee35a_84cf6a6b",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Done. Please check it. I suspect that moving the DevToolsAPI patching is safe, but I am not sure why it was done as early as it was do it\u0027s possible I\u0027m missing something. It was actually done at import time before...",
      "parentUuid": "6097035c_8308d720",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b86ea9f2_d9dc22ec",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "What\u0027s this doing? Could we maybe put a comment here?\n\nAlso, nit, you don\u0027t need braces or a semicolon. You can just write () \u003d\u003e handlersToRemove.push(handler).",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43320c38_1001314a",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b86ea9f2_d9dc22ec",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "457bf829_b936d598",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1116849
      },
      "writtenOn": "2017-12-14T16:48:49Z",
      "side": 1,
      "message": "Please use await instead of then.",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af513d41_b22bc311",
        "filename": "tracing/tracing/ui/extras/about_tracing/inspector_tracing_controller_client_test.html",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2017-12-14T20:36:42Z",
      "side": 1,
      "message": "Banished all then() calls.",
      "parentUuid": "457bf829_b936d598",
      "revId": "bc0258d098af83628360adb7ad9b4463f2e31cd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}