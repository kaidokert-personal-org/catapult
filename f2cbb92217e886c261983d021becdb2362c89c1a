{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1704c973_a4743393",
        "filename": "dashboard/dashboard/sheriff_config/service/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-02-01T23:07:24Z",
      "side": 1,
      "message": "nit: I believe 200 is the default and we can ignore it here.",
      "range": {
        "startLine": 198,
        "startChar": 26,
        "endLine": 198,
        "endChar": 29
      },
      "revId": "f2cbb92217e886c261983d021becdb2362c89c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b59e8d34_edfa398c",
        "filename": "dashboard/dashboard/sheriff_config_client.py",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-02-01T23:19:01Z",
      "side": 1,
      "message": "It makes me feel uncomfortable to parse the json and then discard the results. If the content isn\u0027t empty, self._json_format.Parse would be parsing the text again.\n\nDoes self._json_format.Parse fail when presented with empty result? If it can handle it property, and return an empty list of subscriptions, I\u0027d say just don\u0027t check for empty results before calling self._json_format.Parse. If it can\u0027t handle empty result, you can save the dict generated by json.loads, and use self._json_format.ParseDict instead of self._json_format.Parse.",
      "range": {
        "startLine": 96,
        "startChar": 24,
        "endLine": 96,
        "endChar": 49
      },
      "revId": "f2cbb92217e886c261983d021becdb2362c89c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29249985_cc465a38",
        "filename": "dashboard/dashboard/sheriff_config_client.py",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-02-01T23:23:52Z",
      "side": 1,
      "message": "Another possibility might be using HTTP status code 204 (https://httpwg.org/specs/rfc9110.html#status.204) to indicate no matching subscriptions. That is still a successful status, and I hope it won\u0027t show up as errors in the log.",
      "parentUuid": "b59e8d34_edfa398c",
      "range": {
        "startLine": 96,
        "startChar": 24,
        "endLine": 96,
        "endChar": 49
      },
      "revId": "f2cbb92217e886c261983d021becdb2362c89c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cba2afb_7d10d083",
        "filename": "dashboard/dashboard/sheriff_config_client.py",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-02-01T23:07:24Z",
      "side": 1,
      "message": "After the handler change in __init__.py, the future 404 will no longer mean \u0027no subscription matched\u0027.",
      "range": {
        "startLine": 108,
        "startChar": 31,
        "endLine": 108,
        "endChar": 34
      },
      "revId": "f2cbb92217e886c261983d021becdb2362c89c1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}