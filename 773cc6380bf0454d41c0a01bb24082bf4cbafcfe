{
  "comments": [
    {
      "key": {
        "uuid": "18f74556_7381682a",
        "filename": "third_party/typ/typ/arg_parser.py",
        "patchSetId": 13
      },
      "lineNbr": 143,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-03T01:38:47Z",
      "side": 1,
      "message": "This is just re-sorting the args.",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07a83091_d370c64e",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-03T19:24:38Z",
      "side": 1,
      "message": "Hi Dirk\n\nI was looking at the if statement\u0027s condition in the for loop of the \nexpected_results_for function in runner.py. It seems like you are trying to \ntest if the set of exp.tags is equal to the set of child tags before \nupdating the results set. If that is true then before the for loop you\nshould precompute the set of child tags and store it in a variable, and maybe\ncall it child_tags. And then put child_tags\u003d\u003dset(exp.tags) as the condition \nof the if statement. Also when updating results set, you can just call\nresults.update(exp.results) instead of computing a set of exp.results and\nthen passing that as an argument to results.update(). It will have the same \noutcome and there will be no duplicates in the results set. \n\nRakib",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf0449e2_321c851a",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-04T17:30:38Z",
      "side": 1,
      "message": "I\u0027m not sure if I follow your suggestion, but you want to make sure that exp.tags is a subset of child.tags, not equal to it. For example, if child.tags is {Debug, Mac, Mac10.12}, then lines that contain {Debug}, {Debug, Mac}, or {Mac} should all match. I\u0027ll rewrite the comment to make this clearer.\n\nYou\u0027re right that I can get rid of the set() constructors, though; this code was written before we changed exp.tags and exp.results to be sets.\n\nAlso, I just realized that there\u0027s actually an issubset() method on sets, too.\n\nSo this can be simplified to:\n\n    results \u003d set()\n    for exp in child.expectations.get(test, []):\n        if exp.tags.issubset(child.tags):\n            results.update(exp.results)\n\nDid I understand you correctly, and does this make sense?",
      "parentUuid": "07a83091_d370c64e",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e5626c_70903197",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-05T17:52:55Z",
      "side": 1,
      "message": "Your right I misunderstood the purpose of the if statements condition. Yes this makes sense to me now. Thank you.",
      "parentUuid": "cf0449e2_321c851a",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bc96c43_ae4d4aa5",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-05T18:35:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05e5626c_70903197",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}