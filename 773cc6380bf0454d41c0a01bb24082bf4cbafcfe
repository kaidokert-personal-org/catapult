{
  "comments": [
    {
      "key": {
        "uuid": "18f74556_7381682a",
        "filename": "third_party/typ/typ/arg_parser.py",
        "patchSetId": 13
      },
      "lineNbr": 143,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-03T01:38:47Z",
      "side": 1,
      "message": "This is just re-sorting the args.",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cca96316_cd0ed829",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 899,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-11-05T19:57:39Z",
      "side": 1,
      "message": "shouldn\u0027t we add the skipped tests to tests_to_skip list instead? I think the benefit is we can make sure tests_to_skip is the single source of truth to know which tests are meant to be skipped \u0026 it will be easier to later implement --also-run-disabled-tests flag.",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6cac85d_8ca3352b",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 899,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-05T20:15:11Z",
      "side": 1,
      "message": "In order to do that we\u0027d have to either evaluate expected_results_for() twice (once up in run() and once here) or pass the results of the call down as part of the test input. Plus that would mean that we\u0027d be modifying an input parameter, which I\u0027m not usually wild about. Either way, that\u0027d end up being a much more invasive patch.\n\nHow about we leave this as-is and add a TODO for now to look at it in a follow-up patch?\n\nI\u0027m not sure what you mean by --also-run-disabled-tests, but there is already an --all flag that should do that (and which should be handled correctly here).",
      "parentUuid": "cca96316_cd0ed829",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5a71e6c_61e3493f",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 899,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-11-05T20:18:58Z",
      "side": 1,
      "message": "leave a TODO sgtm",
      "parentUuid": "e6cac85d_8ca3352b",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc383681_6d4700a1",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 899,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-05T22:15:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5a71e6c_61e3493f",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07a83091_d370c64e",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-03T19:24:38Z",
      "side": 1,
      "message": "Hi Dirk\n\nI was looking at the if statement\u0027s condition in the for loop of the \nexpected_results_for function in runner.py. It seems like you are trying to \ntest if the set of exp.tags is equal to the set of child tags before \nupdating the results set. If that is true then before the for loop you\nshould precompute the set of child tags and store it in a variable, and maybe\ncall it child_tags. And then put child_tags\u003d\u003dset(exp.tags) as the condition \nof the if statement. Also when updating results set, you can just call\nresults.update(exp.results) instead of computing a set of exp.results and\nthen passing that as an argument to results.update(). It will have the same \noutcome and there will be no duplicates in the results set. \n\nRakib",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf0449e2_321c851a",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-04T17:30:38Z",
      "side": 1,
      "message": "I\u0027m not sure if I follow your suggestion, but you want to make sure that exp.tags is a subset of child.tags, not equal to it. For example, if child.tags is {Debug, Mac, Mac10.12}, then lines that contain {Debug}, {Debug, Mac}, or {Mac} should all match. I\u0027ll rewrite the comment to make this clearer.\n\nYou\u0027re right that I can get rid of the set() constructors, though; this code was written before we changed exp.tags and exp.results to be sets.\n\nAlso, I just realized that there\u0027s actually an issubset() method on sets, too.\n\nSo this can be simplified to:\n\n    results \u003d set()\n    for exp in child.expectations.get(test, []):\n        if exp.tags.issubset(child.tags):\n            results.update(exp.results)\n\nDid I understand you correctly, and does this make sense?",
      "parentUuid": "07a83091_d370c64e",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e5626c_70903197",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-05T17:52:55Z",
      "side": 1,
      "message": "Your right I misunderstood the purpose of the if statements condition. Yes this makes sense to me now. Thank you.",
      "parentUuid": "cf0449e2_321c851a",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bc96c43_ae4d4aa5",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-11-05T18:35:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05e5626c_70903197",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccf96ab1_2c9509a1",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 957,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-05T22:15:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bc96c43_ae4d4aa5",
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73ee929b_0efa0620",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 971,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-11-05T19:57:39Z",
      "side": 1,
      "message": "this can be simplified to \"exp.tags \u003e\u003d child.tags\", I think.",
      "range": {
        "startLine": 971,
        "startChar": 12,
        "endLine": 971,
        "endChar": 67
      },
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "517b668e_0fb9503b",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 971,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-05T20:15:11Z",
      "side": 1,
      "message": "Ah, didn\u0027t know about \u003e\u003d on sets. I\u0027m not sure that I think that that\u0027s clearer than exp.tags.issubset(child.tags) though.\n\n(Also, I think you want \"\u003c\u003d\", not \"\u003e\u003d\".)",
      "parentUuid": "73ee929b_0efa0620",
      "range": {
        "startLine": 971,
        "startChar": 12,
        "endLine": 971,
        "endChar": 67
      },
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10be3081_8d8c6c7c",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 971,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-11-05T20:18:58Z",
      "side": 1,
      "message": "Using issubset sgtm",
      "parentUuid": "517b668e_0fb9503b",
      "range": {
        "startLine": 971,
        "startChar": 12,
        "endLine": 971,
        "endChar": 67
      },
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d6e746_a74cd44e",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 13
      },
      "lineNbr": 971,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-11-05T22:15:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10be3081_8d8c6c7c",
      "range": {
        "startLine": 971,
        "startChar": 12,
        "endLine": 971,
        "endChar": 67
      },
      "revId": "773cc6380bf0454d41c0a01bb24082bf4cbafcfe",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}