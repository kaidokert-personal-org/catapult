{
  "comments": [
    {
      "key": {
        "uuid": "c9379fe7_84f7582f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-20T17:03:21Z",
      "side": 1,
      "message": "I\u0027ll file and add a bug to this before landing.",
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e4c885d_d9ae1689",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T15:27:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9379fe7_84f7582f",
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd7dd8df_ad35da50",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-20T19:47:37Z",
      "side": 1,
      "message": "nednguyen@google.com, does it make sense to put this function in py_utils?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c0b83ba_7746a192",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-02-20T19:48:49Z",
      "side": 1,
      "message": "+1\n\nThis seems like something devil \u0026 Telemetry will use a lot",
      "parentUuid": "dd7dd8df_ad35da50",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb9e3868_3459b6ce",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-20T19:51:07Z",
      "side": 1,
      "message": "My vote is for being put in a file like retry_util or something",
      "parentUuid": "5c0b83ba_7746a192",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e38b1c1_2b097354",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T12:03:40Z",
      "side": 1,
      "message": "sgtm\n\nbut importing from py_utils means adding it to the sys.path; to avoid again having to make the change twice on the two fetch_* scripts, I\u0027m going to first write a CL to merge them into a single top-level \"soundwave\" script, and then come back to this CL.",
      "parentUuid": "eb9e3868_3459b6ce",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c598fd6e_1bb8f3ee",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T15:27:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e38b1c1_2b097354",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab4c0a8d_ad30c80d",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-20T19:47:37Z",
      "side": 1,
      "message": "Probably want to specify the first delay in the function doc (1 second)",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "203a2fe5_8b897436",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T15:27:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab4c0a8d_ad30c80d",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc079684_36717b1b",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-20T19:47:37Z",
      "side": 1,
      "message": "Without too much knowledge, it seems like a list might make more sense than a tuple here",
      "range": {
        "startLine": 15,
        "startChar": 14,
        "endLine": 15,
        "endChar": 52
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cff1b542_4b60859e",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T15:27:08Z",
      "side": 1,
      "message": "The fact that this must be a tuple follows from the way try-except blocks work in python, specifically: \"For an except clause with an expression, that expression is evaluated, and the clause matches the exception if the resulting object is “compatible” with the exception. An object is compatible with an exception if it is the class or a base class of the exception object, or a tuple containing an item compatible with the exception.\"\n\nhttps://docs.python.org/2/reference/compound_stmts.html#the-try-statement",
      "parentUuid": "cc079684_36717b1b",
      "range": {
        "startLine": 15,
        "startChar": 14,
        "endLine": 15,
        "endChar": 52
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d33be18_b4ada6e0",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-21T16:02:01Z",
      "side": 1,
      "message": "SGTM. Today I learned!",
      "parentUuid": "cff1b542_4b60859e",
      "range": {
        "startLine": 15,
        "startChar": 14,
        "endLine": 15,
        "endChar": 52
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5256681c_4864ab9f",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-20T19:47:37Z",
      "side": 1,
      "message": "I may be in over my head python-wise here, but it seems like we could just use the \u0027retries\u0027 that\u0027s still available from the original outer function scope?",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 54
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec6f2c6_61ba7278",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-02-21T15:27:08Z",
      "side": 1,
      "message": "This allows callers of the decorated function to override (from kwargs) the default number of retries (from the outer scope). I\u0027ve extended the documentation on this, added an example, and had to change the API slightly to make pylint happy.\n\nAlso added a bunch of unittests/examples which further help to clarify the usage.",
      "parentUuid": "5256681c_4864ab9f",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 54
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e2616a0_1bfbb9be",
        "filename": "experimental/soundwave/soundwave/utils.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-02-21T16:02:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5ec6f2c6_61ba7278",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 54
      },
      "revId": "36b51abb7accc5f704b0a0e3729c562f68f11e2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}