{
  "comments": [
    {
      "key": {
        "uuid": "3f7e8f87_20078900",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-16T00:58:43Z",
      "side": 1,
      "message": "Why do we need to sanitize the test name \u0026 add output_dir to it? This is mainly use for looking up the artifact only, isn\u0027t it?",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db4543b6_81b7a1ea",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-16T01:32:21Z",
      "side": 1,
      "message": "I needed to do this because I was creating the log files as \"artifacts/storyname_log\". This was problematic when the story name was \"http://google.com\", since that\u0027s a not normal file name. So I sanitized it.\n\nCould also just generate a random number or something.",
      "parentUuid": "3f7e8f87_20078900",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3036f8e2_cd9ccc41",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-16T01:48:13Z",
      "side": 1,
      "message": "We should separate the logic of test name which is used for look up artifacts \u0026 the logic of creating log file\u0027s name. \n\nFor generating the log file, sanitizing the test name \u0026 add it to the output_dir is a good option, or random number is even better.",
      "parentUuid": "db4543b6_81b7a1ea",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7b58847_b4d7ce71",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-16T03:14:16Z",
      "side": 1,
      "message": "I moved the generating of a log file to the other CL. \n\nRemoved the sanitizing here, as these are only used for keys in a dictionary.",
      "parentUuid": "3036f8e2_cd9ccc41",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e3d0b59_5eb07a7e",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-16T00:58:43Z",
      "side": 1,
      "message": "Hmhh, now I remember there is also the case of:\n\nfoo\u0027s 1st run: pass, produce \"foo_trace.1\"\nfoo\u0027s 2nd run: fail, produce None\nfoo\u0027s 3rd run: pass, produce produce \"foo_trace.2\".\n\nWe want to make sure that the \"trace\" artifacts for \"foo\" look like [\"foo_trace.1\", null, \"foo_trace.2\"]\n\nMay be the easiest way to implement this is add an optional \"run_order\" param? If \"run_order\" is greater than the current artifact lengths, we automatically append None values to fill the artifact array.",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "684ff247_fc8ec438",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-16T01:32:21Z",
      "side": 1,
      "message": "Actually, I had planned to kinda ignore this case right now. We\u0027re not outputting more than one run in the test results anyways; see https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/results/json_3_output_formatter.py?q\u003djson_3\u0026sq\u003dpackage:chromium\u0026l\u003d68; that block of code removes any multiple run info we have in the test results right now.",
      "parentUuid": "3e3d0b59_5eb07a7e",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41534c78_c08ba6da",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-17T11:14:15Z",
      "side": 1,
      "message": "Sigh, this is a case of technical debt leads to more technical debt :-/\n\nIt\u0027s ok to ignore that case in implementation for now, though I still think the API needs to support \"run_order\" param. Inside the implementation, we can add some comment about why we are not supporting run_order param correctly yet.\n\nChanging implementation is easy, changing API is hard++, so always strive to make API look right early.",
      "parentUuid": "684ff247_fc8ec438",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83192331_fdf963c4",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2017-11-17T11:20:46Z",
      "side": 1,
      "message": "yep, +1 to Ned\n\nAlso note: we *do* output several test results e.g. \"PASS FAIL PASS\" is possible. What we do there on that bit of code is collapse \"PASS PASS PASS\" to just \"PASS\" because of some logic mismatch of what repeating a test means for us and what it means for other flakiness dashboard clients.",
      "parentUuid": "41534c78_c08ba6da",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e87173_75ee7e43",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-16T00:58:43Z",
      "side": 1,
      "message": "We might need to make sure that artifact_path is unique file in artifact_dir. Otherwise we may accidentally erase existing files there",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8c10aba_da8bd7f9",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 1148599
      },
      "writtenOn": "2017-11-16T01:32:21Z",
      "side": 1,
      "message": "I\u0027ll add this.",
      "parentUuid": "c4e87173_75ee7e43",
      "revId": "f53814c4f0e9407d73800b8901593d6e570476ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}