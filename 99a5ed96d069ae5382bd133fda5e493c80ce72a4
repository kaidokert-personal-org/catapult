{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a1cfdeab_6ae5f907",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2023-03-17T21:52:14Z",
      "side": 1,
      "message": "PTAL",
      "revId": "99a5ed96d069ae5382bd133fda5e493c80ce72a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "784ed605_e048ed9b",
        "filename": "dashboard/dashboard/pinpoint/elements/jobs-page/new-job-fab.html",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-03-17T23:30:30Z",
      "side": 1,
      "message": "surely you mean `\u0026\u0026` (logical AND) rather than `\u0026` (bitwise AND)?",
      "range": {
        "startLine": 453,
        "startChar": 58,
        "endLine": 453,
        "endChar": 59
      },
      "revId": "99a5ed96d069ae5382bd133fda5e493c80ce72a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6691ae8d_d115b629",
        "filename": "dashboard/dashboard/pinpoint/elements/jobs-page/new-job-fab.html",
        "patchSetId": 1
      },
      "lineNbr": 457,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-03-17T23:30:30Z",
      "side": 1,
      "message": "Small nit with the existing error message string literal: single quotes\n\nAlso, a suggestion: Since you\u0027ve already programmatically made the distinction between an invalid benchmark and an invalid story, why not tell the user which one (or both) is the problem? Something like this (haven\u0027t tried running this, so I can\u0027t confirm it works exactly):\n\n```\nconst problems \u003d [];\nif (!this.validBenchmark(this.benchmark)) { \n  problems.push(`invalid benchmark: \"${this.benchmark}\"`);\n}\n\nif (!this.validStory(this.story) \u0026\u0026 // note: logical, not bitwise AND\n            !this.validStoryTag(this.storyTags)) {\n  problems.push(`invalid story: \"${this.story}\"`);\n}\nif (problems.length \u003e 0) {\n  event.preventDefault();\n  this.error \u003d problems.join(\u0027, \u0027);\n}\n```",
      "range": {
        "startLine": 457,
        "startChar": 23,
        "endLine": 457,
        "endChar": 63
      },
      "revId": "99a5ed96d069ae5382bd133fda5e493c80ce72a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}