{
  "comments": [
    {
      "key": {
        "uuid": "5ad3432c_27cb8f0c",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:17:59Z",
      "side": 1,
      "message": "Instead of creating these Story Module classes. You can create expectation files. For\neverything disabled you can have the following expectations content.\n\n# tags: [ All ]\n# results: [ Skip ]\n[ All ] * [ Skip ]\n\nYou can pass it in by creating a temporary file, and passing its path through the environment.\nAlso you would need to pass [\u0027All\u0027] to the the StoryFilter constructor.\n\nFor everything enabled, you don\u0027t need to do anything. You can remove the mock.patch call for FakeExpectationsEverythingEnabled.",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6874f1a5_dc43a1e7",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-10T18:25:33Z",
      "side": 1,
      "message": "Yes, I saw that this is how things used to work in a lot of places. This was actually a conscious decision. This is for a unit test, so the point is to try to test the module without depending on things outside of the module. That way I am only testing the logic in this module. Then you can change expectations stuff without having to touch these unit tests. Currently Telemetry has a lot of tests that do not work this way, and I see that as a problem because it makes it difficult to change code in Telemetry because you need to edit unit tests all over the place.\n\nNote that there is still a place for end to end and integration tests, but ideally we want to add those on top and instead focus full unit test coverage first.",
      "parentUuid": "5ad3432c_27cb8f0c",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6312ab9e_52679d9c",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:43:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6874f1a5_dc43a1e7",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6a5ac61_c294b63b",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 162,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:17:59Z",
      "side": 1,
      "message": "Instead of using this story class, you can create a MagicMock object, and then set the name member variable to the story name.\n\nstory \u003d mock.MagicMock()\nstory.name \u003d \u0027fake_story_name\u0027",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61b1c962_9073bf97",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 162,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-10T18:25:33Z",
      "side": 1,
      "message": "Agreed, that would work. I think this is cleaner.",
      "parentUuid": "c6a5ac61_c294b63b",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c517d2_4b294a9b",
        "filename": "telemetry/telemetry/story/story_filter_unittest.py",
        "patchSetId": 9
      },
      "lineNbr": 162,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:43:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "61b1c962_9073bf97",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5156616c_1b06d6d9",
        "filename": "telemetry/telemetry/testing/fakes/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 674,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:17:59Z",
      "side": 1,
      "message": "This seems to be only used for story filter command line arguments. Can you move this into story filter unit tests script?",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b7c9ae_4273adb2",
        "filename": "telemetry/telemetry/testing/fakes/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 674,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-10T18:25:33Z",
      "side": 1,
      "message": "it is also used by story_runner_unittest.py",
      "parentUuid": "5156616c_1b06d6d9",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "731b2fa1_3fba3c71",
        "filename": "telemetry/telemetry/testing/fakes/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 674,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-10-10T18:43:21Z",
      "side": 1,
      "message": "Took a look in the script, it only seems to get passed to the story filter module. Can you rename it to FakeStoryFilterArgs then.",
      "parentUuid": "10b7c9ae_4273adb2",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "775a5863_9e14cc4a",
        "filename": "telemetry/telemetry/testing/fakes/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 674,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-10-10T19:50:15Z",
      "side": 1,
      "message": "These actually represent the parsed arguments of running optparse on the commandline flags. The args object itself is shared by everything that parses commandline flags, including commands.py, story_runner.py, story_filter.py, and more. Maybe \"FakeParsedArgsForStoryFilter\" would make this clearer?",
      "parentUuid": "731b2fa1_3fba3c71",
      "revId": "351225b80c2399db4d4a8e991fc95a1018be3a1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}