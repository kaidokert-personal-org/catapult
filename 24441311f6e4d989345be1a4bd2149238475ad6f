{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2305e3ac_66f64d02",
        "filename": "telemetry/telemetry/internal/backends/android_browser_backend_settings.py",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1109505
      },
      "writtenOn": "2021-03-03T21:18:17Z",
      "side": 1,
      "message": "I\u0027m not familiar with this script but it looks somewhat weird that the additional APK is a path when the other APK is what looks like a build target name? The build target for this is trichrome_library_google_apk if that helps?",
      "revId": "24441311f6e4d989345be1a4bd2149238475ad6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b10d5bfd_f60caaab",
        "filename": "telemetry/telemetry/internal/backends/android_browser_backend_settings.py",
        "patchSetId": 2
      },
      "lineNbr": 383,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-03-03T21:28:53Z",
      "side": 1,
      "message": "This script is responsible for installing the APKs onto device, after the build is already done. So both apk_name and additional_apk_name are filenames in the build output. For bundles, apk_name is actually a script placed in out/Release/bin directory by the build, and it has the same name as the build target. We have some algorithm to find apk_name, so it doesn\u0027t require path, but additional_apk_name is assumed to be in the same location as apk_name, unless a path is given. In this case, trichrome_chrome_google_bundle is in bin, while TrichromeLibraryGoogle.apk is in apks, so a path is needed for the latter.",
      "parentUuid": "2305e3ac_66f64d02",
      "revId": "24441311f6e4d989345be1a4bd2149238475ad6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}