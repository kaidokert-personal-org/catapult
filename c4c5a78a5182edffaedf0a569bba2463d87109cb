{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "053e1bc7_509daec8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-15T20:41:54Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68c1d24b_9131c310",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-09-15T22:13:33Z",
      "side": 1,
      "message": "Flask doesn\u0027t have request.body. Use request.data instead.",
      "range": {
        "startLine": 97,
        "startChar": 17,
        "endLine": 97,
        "endChar": 29
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7aec8a69_b1e910cf",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-15T22:33:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68c1d24b_9131c310",
      "range": {
        "startLine": 97,
        "startChar": 17,
        "endLine": 97,
        "endChar": 29
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91b96bfc_c13b0d37",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-09-15T22:13:33Z",
      "side": 1,
      "message": "In Python 3, request.values contain strings, but zlib.compress requires bytes.",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5f92d5c_6869fe2c",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-15T22:33:41Z",
      "side": 1,
      "message": "Done, dunno gcs.write accept byte or not",
      "parentUuid": "91b96bfc_c13b0d37",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3875a3a9_21f436ad",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-09-16T07:34:51Z",
      "side": 1,
      "message": "The code is at https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/third_party/cloudstorage/cloudstorage/storage_api.py;l\u003d755. It does require bytes.",
      "parentUuid": "a5f92d5c_6869fe2c",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "911b9559_779cf215",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-16T18:19:17Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "3875a3a9_21f436ad",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dba8d30_66fbba14",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-17T00:33:31Z",
      "side": 1,
      "message": "By testing on prod, the only way to get json is request.get_data()",
      "parentUuid": "911b9559_779cf215",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98e24f31_2dd19e79",
        "filename": "dashboard/dashboard/add_histograms.py",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-09-19T19:15:54Z",
      "side": 1,
      "message": "The original code was written to handle two types of input:\n* The input data could be raw binary data compressed by zlib.\n* The input data could also be form encoded uncompressed text, in a form property named \u0027data\u0027.\n\nEven if only one form of input was encountered during testing, we should still keep handling both forms (i.e., keep request.values.get(\u0027data\u0027)), unless we can prove that there are no possibilities of receiving the second type of input.",
      "parentUuid": "0dba8d30_66fbba14",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 40
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "720a9cb1_3bbfe0fc",
        "filename": "dashboard/dashboard/dispatcher.py",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-09-15T22:13:33Z",
      "side": 1,
      "message": "How much testing has been done? I\u0027m not sure we\u0027re ready to enable these yet.",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 30
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ab37238_700ebaf9",
        "filename": "dashboard/dashboard/dispatcher.py",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-15T22:33:41Z",
      "side": 1,
      "message": "I am putting this on-hold, testing it first",
      "parentUuid": "720a9cb1_3bbfe0fc",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 30
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fb620b3_ed8d54c6",
        "filename": "dashboard/dashboard/dispatcher.py",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-09-17T00:33:31Z",
      "side": 1,
      "message": "Tested, but let me know if we should comment this part (utils.isRunningFlask is not actually working in Prod)",
      "parentUuid": "2ab37238_700ebaf9",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 30
      },
      "revId": "c4c5a78a5182edffaedf0a569bba2463d87109cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}