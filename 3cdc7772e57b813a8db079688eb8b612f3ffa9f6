{
  "comments": [
    {
      "key": {
        "uuid": "b37cbb09_9f36aa63",
        "filename": "telemetry/telemetry/internal/results/page_test_results_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 677,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "nit: IterArtifacts does not return pairs any more, so this is a mistake?",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2194fda5_3210fcd9",
        "filename": "telemetry/telemetry/internal/results/page_test_results_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 677,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Yeah, thank you, I missed this one.",
      "parentUuid": "b37cbb09_9f36aa63",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e27c05de_850a27bf",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "optional nit: having this one, maybe you can now remove _FormatTimeStamp* functions at the top and inline them where needed, e.g. line 85 becomes: self.start_datetime.strftime(\u0027%Y%m%dT%H%M%SZ\u0027).",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d68556_ac322232",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e27c05de_850a27bf",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b2503e7_2c3a3166",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 202,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "super nit: for consistency, no space between: \"\"\" Ensure",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db7fa18e_a088ea6a",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 202,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b2503e7_2c3a3166",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9371b99_791bab7d",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "I think the artifact should be added after yield; and the file removed in case of errors, e.g. something like ... ?\n\n    try:\n      with open(local_path, \u0027w+b\u0027) as file_obj:\n        yield file_obj\n    except:\n      os.path.remove(local_path)\n      raise\n    self._artifacts[name] \u003d Artifact(name, local_path)",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4328008c_d83c23d1",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "I might be mistaken, but I think that when open() throws an exception, the file is not created, so there\u0027s nothing to remove.\n\nAdding artifact after the yield SGTM.",
      "parentUuid": "f9371b99_791bab7d",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96fe7800_b57a1554",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 232,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T12:54:49Z",
      "side": 1,
      "message": "What I had in mind were exceptions that happened in the context managed code. E.g. if the client does:\n\n  with results.CreateArtifact(\u0027foo\u0027):\n    raise Exception(\u0027!\u0027)\n\nthen the artifact should not be collected and the file cleaned up. You are right, though, my suggested implementation is not completely right either.",
      "parentUuid": "4328008c_d83c23d1",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6caa7ca2_95a0fbbb",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "This would fail if there is no output_dir, right?\n\nI guess in that case we should return a file name with tempfile_ext.TemporaryFileName.",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99342904_7fe0d841",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Special case of output_dir\u003dNone is really there only for tests; and I believe treating tests as a special case is a bad thing in general, because they don\u0027t test the code branch that is actually executed in the real case.\n\nI would really like to remove that special case altogether, but unfortunately didn\u0027t have time for that yet. At least it looks reasonable to avoid introducing new tests with output_dir\u003dNone. So I deliberately assumed that output_dir is not None here, so that all future tests had a real output directory.",
      "parentUuid": "6caa7ca2_95a0fbbb",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47e1bdc9_bbe53dee",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T12:54:49Z",
      "side": 1,
      "message": "Yeah, agree with you 100%. Let\u0027s go with this.\n\nJust add an explicit assert to check that the artifacts dir is not None here. And put a TODO up there to mention we want to remove the usage of a None output_dir.",
      "parentUuid": "99342904_7fe0d841",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf9ae2aa_4685ed98",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "nit: the second condition can be\n\n  name.startswith(posixpath.join(subdir, \u0027\u0027))\n\nThe \"join\" with empty file makes sure the path ends with \u0027/\u0027.\n\nSo all of the following would work:\n\n   IterArtifacts(\u0027trace\u0027)\n   IterArtifacts(\u0027trace/\u0027)\n   IterArtifacts(\u0027deeply/nested/dir\u0027)",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f69a5aa0_6efbf519",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Thank you, that\u0027s really neat.",
      "parentUuid": "bf9ae2aa_4685ed98",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56e3ea12_26b72efa",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-27T09:29:06Z",
      "side": 1,
      "message": "nit: let\u0027s switch this to logging.info",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ded475f5_a33f022b",
        "filename": "telemetry/telemetry/internal/results/story_run.py",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-27T11:02:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56e3ea12_26b72efa",
      "revId": "3cdc7772e57b813a8db079688eb8b612f3ffa9f6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}