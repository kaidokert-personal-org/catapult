{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d89c744_7fb0c98e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-16T17:11:54Z",
      "side": 1,
      "message": "Alternative of using the response type. PTAL.",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "080eb55a_0968678a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "Updated the logics and the request property types. Updating the tests.",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20d99896_e2a283dc",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "Could you add what return values we should be expecting? If I recall, we should only expect a Bug Id or an error, but maybe there\u0027s more you intend to return?",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da5f9b40_11a512b7",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20d99896_e2a283dc",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a34e9557_97c3699a",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1368332
      },
      "writtenOn": "2024-09-16T20:04:40Z",
      "side": 1,
      "message": "Keep format consistent\n\njson.dumps({\u0027error:\u0027 str(e)}),",
      "range": {
        "startLine": 87,
        "startChar": 25,
        "endLine": 87,
        "endChar": 32
      },
      "fixSuggestions": [
        {
          "fixId": "5e46c7c5_86328210",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "dashboard/dashboard/file_bug.py",
              "range": {
                "startLine": 87,
                "startChar": 0,
                "endLine": 88,
                "endChar": 0
              },
              "replacement": "    return make_response(\n        json.dumps({\u0027error\u0027: str(e)}), http.HTTPStatus.BAD_REQUEST.value)\n"
            }
          ]
        }
      ],
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a23a2c30_15c1e808",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a34e9557_97c3699a",
      "range": {
        "startLine": 87,
        "startChar": 25,
        "endLine": 87,
        "endChar": 32
      },
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29c56566_9dfd7239",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "Is there a point in sending a project_id? I think it should always be chromium no? I was planning on omitting this field in the dialog.",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2a9f351_c43cd04a",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "Actually no. The Skia UI handler does not expect it so there is no need to pass it from Skia UI. \n\nHere the get() is the same as:\nproject_id \u003d \u0027chromium\u0027.\n\nTechnically the project id value will have impact on where the \u0027labels\u0027 are saved in buganizer. But in our use case, it is safe assuming \u0027chromium\u0027 is the only value. (Even if they select \u0027v8\u0027, the behavior will be the same)",
      "parentUuid": "29c56566_9dfd7239",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc0132bc_add4b352",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "What is this expecting? A list of strings or comma-separated values?\n\nAlso change to data.get(\u0027labels\u0027)",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6afbdb3_1be35b46",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "Updated based on recent discussion.",
      "parentUuid": "bc0132bc_add4b352",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39b303ed_51681f6f",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T23:06:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6afbdb3_1be35b46",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53e17c38_86656737",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "Right now, we\u0027re using the components as given by the Subscriptions, but I recall us having a conversation of these having to be translated to Buganizer components? Is there some translation that needs to happen before filing? just checking.",
      "range": {
        "startLine": 99,
        "startChar": 25,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47401c4b_b01da648",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "There will only be 1 component always, but I\u0027m wondering if here it\u0027s expecting a list or just a string?",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f55761c9_65a235a4",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T21:51:39Z",
      "side": 1,
      "message": "it should be a string.",
      "parentUuid": "47401c4b_b01da648",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab4660ce_fcb5759f",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T23:06:54Z",
      "side": 1,
      "message": "In chromeperf, we still expect the monorail component, which is from the sheriff config.",
      "parentUuid": "53e17c38_86656737",
      "range": {
        "startLine": 99,
        "startChar": 25,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66bd4f20_5f850067",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1518167
      },
      "writtenOn": "2024-09-16T19:50:32Z",
      "side": 1,
      "message": "What is this expecting? A list of strings or comma-separated values?\n\nAlso change to data.get(\u0027ccs\u0027)",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d18bf47_c24bffed",
        "filename": "dashboard/dashboard/file_bug.py",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-09-17T23:06:54Z",
      "side": 1,
      "message": "Updated based on the discussion.",
      "parentUuid": "66bd4f20_5f850067",
      "revId": "b811d45287c21992fe2e391dda2a30751cef1aeb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}