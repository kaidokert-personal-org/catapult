{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf995a4_40f0b5b3",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-08T19:00:59Z",
      "side": 1,
      "message": "I\u0027m not sure how we want to handle unknown regression direction metrics. Maybe the better approach is to sort unknown regression direction using the old method of sorting by difference magnitude.",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "689015a6_142af573",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-11-08T19:12:48Z",
      "side": 1,
      "message": "That makes sense (that is, if we don\u0027t know, don\u0027t change it)",
      "parentUuid": "0bf995a4_40f0b5b3",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a215ba3b_5f9d4449",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-11-12T22:03:11Z",
      "side": 1,
      "message": "nits: `returns True if...` (and trailing whitespace)",
      "parentUuid": "689015a6_142af573",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25be077b_08e9d6a4",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 507,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-15T23:58:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a215ba3b_5f9d4449",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74de481b_c7482bff",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-11-08T19:43:04Z",
      "side": 1,
      "message": "It looks like improvement_direction isn\u0027t computed in the constructor [1], so this will always be UNKNOWN\n\n[1]: https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/models/graph_data.py;drc\u003d39a3806d4972290e58f3f3f948ce9295c008239c;l\u003d261",
      "range": {
        "startLine": 510,
        "startChar": 15,
        "endLine": 510,
        "endChar": 36
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43fb67f1_aa7c3ad6",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-11-12T22:50:19Z",
      "side": 1,
      "message": "Calling the constructor for TestMetadata creates a new instance, using only data passed in through the constructor, so improvement_direction would be UNKNOWN. I believe the right approach is to use graph_data.TestMetadata.get_by_id(self.tags[\"test_path\"]), which loads the TestMetadata from data store.",
      "parentUuid": "74de481b_c7482bff",
      "range": {
        "startLine": 510,
        "startChar": 15,
        "endLine": 510,
        "endChar": 36
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c96114e_06c8033e",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-15T15:31:36Z",
      "side": 1,
      "message": "graph_data.TestMetadata.get_by_id(...) seems to work!",
      "parentUuid": "43fb67f1_aa7c3ad6",
      "range": {
        "startLine": 510,
        "startChar": 15,
        "endLine": 510,
        "endChar": 36
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d5c6a94_3eec242f",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-08T19:00:59Z",
      "side": 1,
      "message": "I\u0027m pretty sure this would work but not 100% sure. If someone has ideas of how I could write a unit test for this or confirm through some other means that would be great.",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42d39cfc_ca1fa68c",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-11-08T19:12:48Z",
      "side": 1,
      "message": "I\u0027m guessing there will be a decent starting point in https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/pinpoint/models/job_test.py;l\u003d1?q\u003dmodels%2Fjob_test.py\u0026sq\u003d\u0026ss\u003dchromium",
      "parentUuid": "3d5c6a94_3eec242f",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11eeebb1_3b02a87e",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-15T15:31:36Z",
      "side": 1,
      "message": "Anything else we should check for in this self.tags? I had isinstance(self.tags[\u0027test_path\u0027], str) but then I ran into unicode issues with the unit test.",
      "parentUuid": "42d39cfc_ca1fa68c",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c4b842d_3ef3e4cd",
        "filename": "dashboard/dashboard/pinpoint/models/job.py",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-11-16T01:47:19Z",
      "side": 1,
      "message": "I don\u0027t believe additional checks on self.tags are necessary.",
      "parentUuid": "11eeebb1_3b02a87e",
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b19bb96c_be811be9",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-11-08T19:14:06Z",
      "side": 1,
      "message": "Maybe pass through the direction itself instead of coercing it to a bool?",
      "range": {
        "startLine": 123,
        "startChar": 45,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2823bbd0_26b2d8f7",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-11-12T22:03:11Z",
      "side": 1,
      "message": "default arg values are okay if they\u0027re immutable, according to https://google.github.io/styleguide/pyguide.html#212-default-argument-values",
      "parentUuid": "b19bb96c_be811be9",
      "range": {
        "startLine": 123,
        "startChar": 45,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "369ccc9c_059ee1db",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-11-12T22:50:19Z",
      "side": 1,
      "message": "I agree with Ryan. It will be difficult (and error prone) to remember whether True means UP is improvement or DOWN is improvement. Easier to just pass in UP or DOWN, with the default value being UNKNOWN.",
      "parentUuid": "2823bbd0_26b2d8f7",
      "range": {
        "startLine": 123,
        "startChar": 45,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead7df29_695df701",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-15T15:31:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "369ccc9c_059ee1db",
      "range": {
        "startLine": 123,
        "startChar": 45,
        "endLine": 123,
        "endChar": 51
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed42dd04_d24f2a74",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-11-12T22:03:11Z",
      "side": 1,
      "message": "nit: trailing ws",
      "range": {
        "startLine": 219,
        "startChar": 67,
        "endLine": 219,
        "endChar": 68
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14ef0840_07572497",
        "filename": "dashboard/dashboard/pinpoint/models/job_bug_update.py",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2021-11-15T15:31:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed42dd04_d24f2a74",
      "range": {
        "startLine": 219,
        "startChar": 67,
        "endLine": 219,
        "endChar": 68
      },
      "revId": "a20254b4b7c1d40d9445909f40ba15a8f0afd8f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}