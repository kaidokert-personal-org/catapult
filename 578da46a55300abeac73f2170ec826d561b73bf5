{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c4cf7a0d_200cb1e6",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-09-25T21:22:38Z",
      "side": 1,
      "message": "The bot_id could be a list of bots connected by comma for those running on multiple bots. E.g.:\nhttps://chromeperf.appspot.com/report?sid\u003d5d53499304eb069ecdb13d7cb8ba2f623f5a0e7c237bfcd68ee75f6a20949d56\nIIRC, with too many bots, the string value exceeded the length limit of the field. Thus a format of \u0027... and X more bots\u0027 is in used. In that case, the value is informational but far from accurate.\n\nThus, we should ignore the anomalies only when the test is running on a single bot, where no comma in the bot_id string.\n\n(And, actually we are still running dynamic sharding on android pixel2.)",
      "range": {
        "startLine": 263,
        "startChar": 14,
        "endLine": 263,
        "endChar": 63
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f332a47d_61944d91",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-09-25T21:55:12Z",
      "side": 1,
      "message": "I believe bot_id is stored internally as a list of strings, e.g., https://pantheon.corp.google.com/datastore/databases/-default-/entities;kind\u003dRow;ns\u003d__$DEFAULT$__/edit;key\u003d0%252F%257C13%252FTestContainer%257C124%252Fname%253AChromiumPerf%252Flinux-perf%252Fsystem_health.common_desktop%252FtimeToFirstContentfulPaint%252Fbrowse_search%252Fbrowse_search_google_2020%257C3%252FRow%257C10%252Fid%253A1194035?e\u003d-13802955\u0026mods\u003dcomponent_inspector\u0026project\u003dchromeperf for a row from a single bot, and https://pantheon.corp.google.com/datastore/databases/-default-/entities;kind\u003dRow;ns\u003d__$DEFAULT$__/edit;key\u003d0%252F%257C13%252FTestContainer%257C68%252Fname%253AChromiumPerf%252Flinux-perf%252Fspeedometer2%252FRunsPerMinute%252FSpeedometer2%257C3%252FRow%257C10%252Fid%253A1193090?e\u003d-13802955\u0026mods\u003dcomponent_inspector\u0026project\u003dchromeperf for a row from a large number of bots. The truncation to 3 bots happens in the UI: https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/dashboard/elements/chart-container.html;l\u003d2299",
      "parentUuid": "c4cf7a0d_200cb1e6",
      "range": {
        "startLine": 263,
        "startChar": 14,
        "endLine": 263,
        "endChar": 63
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e52c1f_02efe4c7",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-09-25T22:01:30Z",
      "side": 1,
      "message": "I see. Thanks for pointing it out!\n\nThough, I still think we should ignore the situation for multiple bots as:\n - it needs extra logic to decide how much % of the bot changes should trigger the ignoring. E.g., if perf changed when 1/20 of the bots changed, versus when 1/3 of the bots change.\n - while we do not further enable dynamic sharding on new bots, we keep it in pixel2. This change will always ignore anomalies from android-pixel2-perf.",
      "parentUuid": "f332a47d_61944d91",
      "range": {
        "startLine": 263,
        "startChar": 14,
        "endLine": 263,
        "endChar": 63
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f31677_d6e3e42b",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2023-09-25T22:04:37Z",
      "side": 1,
      "message": "I\u0027m OK with ignoring the situation when multiple bots are involved.\n\nFor android-pixel2-perf, maybe it would make sense to just turn off dynamic sharding?",
      "parentUuid": "e6e52c1f_02efe4c7",
      "range": {
        "startLine": 263,
        "startChar": 14,
        "endLine": 263,
        "endChar": 63
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d7a22f2_5d3bd956",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-26T20:16:32Z",
      "side": 1,
      "message": "John: Ok to implement this \"ignore Rows reported with multiple devices\" update I\u0027ve done the following:\n\n- Create a new indexed field on `graph_data.Row` called `swarming_bot_id` that contains exactly ONE string value, at most.  It may duplicate some data present in the un-indexed a_bot_id (ndb.Expando) field, but I don\u0027t think that\u0027s an actual problem compared to what this CL would fix.\n\n- If an uploaded blob of histogram json results in a `a_bot_id` value with a single bot ID in it (i.e. a_bot_id is a non-empty string containing no commas), then we have add_histograms_queue.py copy that single a_bot_id string value in to the `graph_data.Row.swarming_bot_id` field before storing the Row. These benchmarks/stories will benefit from noise reduction implemented here.\n\n- If on the other hand an uploaded blob of histogram data has multiple values for `a_bot_id`, they can continue to do that. In that case `add_histograms_queue.py` leaves `graph_data.Row.swarming_bot_id` unset, and nothing changes about how we handle anomalies for benchmarks/stories who choose to upload their data like that. They just won\u0027t benefit from noise reduction implemented here.",
      "parentUuid": "d5f31677_d6e3e42b",
      "range": {
        "startLine": 263,
        "startChar": 14,
        "endLine": 263,
        "endChar": 63
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43f1b38a_8d728047",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 264,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-09-25T21:22:38Z",
      "side": 1,
      "message": "info?",
      "range": {
        "startLine": 264,
        "startChar": 16,
        "endLine": 264,
        "endChar": 21
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d62df0b3_20357937",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 264,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-26T20:16:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43f1b38a_8d728047",
      "range": {
        "startLine": 264,
        "startChar": 16,
        "endLine": 264,
        "endChar": 21
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14b97fed_83095bd5",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 267,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-09-25T21:22:38Z",
      "side": 1,
      "message": "nit: we can publish metric at this point with the builder name so that we will have a sense that which builder is most impacted by this issue.",
      "range": {
        "startLine": 267,
        "startChar": 8,
        "endLine": 267,
        "endChar": 16
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c55cfa8_1b99e694",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 7
      },
      "lineNbr": 267,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-26T20:16:32Z",
      "side": 1,
      "message": "That\u0027s a fine suggestion but would make this CL more complicated than it strictly needs to be and it\u0027s already more complicated than it should have been in the first place.\n\nSomeone can add that later if they care to.",
      "parentUuid": "14b97fed_83095bd5",
      "range": {
        "startLine": 267,
        "startChar": 8,
        "endLine": 267,
        "endChar": 16
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28ccb186_7ce0d06f",
        "filename": "dashboard/dashboard/models/graph_data.py",
        "patchSetId": 7
      },
      "lineNbr": 354,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-09-25T21:22:38Z",
      "side": 1,
      "message": "I believe the a_bot_id should be there already as a StringProperty.",
      "range": {
        "startLine": 352,
        "startChar": 2,
        "endLine": 354,
        "endChar": 65
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1dcb113_28d90ee0",
        "filename": "dashboard/dashboard/models/graph_data.py",
        "patchSetId": 7
      },
      "lineNbr": 354,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-26T20:16:32Z",
      "side": 1,
      "message": "obsolete, the latest patchset uses the new `swarming_bot_id` field instead of a_bot_id.",
      "parentUuid": "28ccb186_7ce0d06f",
      "range": {
        "startLine": 352,
        "startChar": 2,
        "endLine": 354,
        "endChar": 65
      },
      "revId": "578da46a55300abeac73f2170ec826d561b73bf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}