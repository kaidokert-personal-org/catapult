{
  "comments": [
    {
      "key": {
        "uuid": "8dd633c3_5cebfa47",
        "filename": "telemetry/telemetry/internal/backends/chrome/fuchsia_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2020-05-12T21:14:37Z",
      "side": 1,
      "message": "I feel like Telemetry shouldn\u0027t be filtering the arguments it was given. It seems more correct for Telemetry to just forward what it\u0027s been given to web engine, and have web engine fail if it\u0027s given an unsupported argument.",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "00e8f5e2740eb618aadcdfdf0a45c951464d01b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229476b4_20cb6dce",
        "filename": "telemetry/telemetry/internal/backends/chrome/fuchsia_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1364448
      },
      "writtenOn": "2020-05-12T21:18:47Z",
      "side": 1,
      "message": "The way I understand it, all the other OSes do something similar where they\u0027re given some brower_options and customize flags somehow. Most of the process seems to be adding additional flags though.",
      "parentUuid": "8dd633c3_5cebfa47",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "00e8f5e2740eb618aadcdfdf0a45c951464d01b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bc6d097_a95d40f4",
        "filename": "telemetry/telemetry/internal/backends/chrome/fuchsia_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1364448
      },
      "writtenOn": "2020-05-12T21:21:20Z",
      "side": 1,
      "message": "I think we can either 1) log warnings for flags that were filtered out. 2) handle flags in the gpu tests beforehands. The second option might be a bit more tricky since not all flags are directly passed in as arguments in brower options (hence the use of chrome_startup_args.GetFromBrowserOptions above)",
      "parentUuid": "229476b4_20cb6dce",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "00e8f5e2740eb618aadcdfdf0a45c951464d01b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a113a1ec_91ad1082",
        "filename": "telemetry/telemetry/internal/backends/chrome/fuchsia_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2020-05-12T21:23:14Z",
      "side": 1,
      "message": "Adding some extra (probably default) args seems reasonable. I\u0027m not aware of any other platforms filtering out arguments - can you provide an example if that\u0027s the case?\n\nMy order of preference is:\n1. Pass everything as-is, letting web engine handle what\u0027s supported or not (supported arguments are handled in a single place)\n2. Filter, but fail if any unsupported arguments are found (supported arguments are handled in two separate places/repos)\n3. Filter as you\u0027re doing now (supported arguments are handled in two separate places/repos, and we silently discard arguments we were given)",
      "parentUuid": "229476b4_20cb6dce",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "00e8f5e2740eb618aadcdfdf0a45c951464d01b4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}