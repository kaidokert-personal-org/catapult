{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "869e465c_c36eee66",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2023-09-25T19:40:17Z",
      "side": 1,
      "message": "Maybe update the \"state\" of the anomaly to \"ignored\" as well?",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 266,
        "endChar": 67
      },
      "revId": "d4f5d897f7c1405f68004766db6995c121647532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7620be79_969484d3",
        "filename": "dashboard/dashboard/models/alert_group_workflow.py",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-25T20:36:32Z",
      "side": 1,
      "message": "Done, although even with tests passing I have no idea what the side effects of doing that would be. Who uses that field?",
      "parentUuid": "869e465c_c36eee66",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 266,
        "endChar": 67
      },
      "revId": "d4f5d897f7c1405f68004766db6995c121647532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "664c418c_70745d06",
        "filename": "dashboard/dashboard/models/graph_data.py",
        "patchSetId": 6
      },
      "lineNbr": 407,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2023-09-25T19:40:17Z",
      "side": 1,
      "message": "Can we do the implementation without indexing this field? Currently our index size for Row entity type is insane https://screenshot.googleplex.com/4cL9vuVF4tSwkvD.png",
      "range": {
        "startLine": 407,
        "startChar": 13,
        "endLine": 407,
        "endChar": 45
      },
      "revId": "d4f5d897f7c1405f68004766db6995c121647532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b05d819_d03b770f",
        "filename": "dashboard/dashboard/models/graph_data.py",
        "patchSetId": 6
      },
      "lineNbr": 407,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-09-25T20:36:32Z",
      "side": 1,
      "message": "Yikes that index size is huge. However, is that actually a problem for us? https://cloud.google.com/datastore/docs/concepts/limits doesn\u0027t mention any specific limits on total index size. I don\u0027t believe this change would put us over the max number of indexed fields per entity value or the total number of indexes for our project. If there\u0027s a swarming device with a string ID whose UTF8 encoding exceeds the 1500 byte limit imposed by Datastore, I\u0027d bet it\u0027s probably breaking other stuff upstream from us, before it ever reaches chromeperf.\n\nAll that said, there may be other options here that I don\u0027t know about, but I believe we have two: either we add a_bot_id to the Rows index like this CL does, or we have to modify find_anomalies to make considerably more expensive read queries (e.g. don\u0027t use projections at all and read full the Row entities, or issue separate .get() operations for each individual Row entity it iterates over when looking for a_bot_id, which would be ~all of them AFAICT).",
      "parentUuid": "664c418c_70745d06",
      "range": {
        "startLine": 407,
        "startChar": 13,
        "endLine": 407,
        "endChar": 45
      },
      "revId": "d4f5d897f7c1405f68004766db6995c121647532",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}