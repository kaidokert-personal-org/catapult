{
  "comments": [
    {
      "key": {
        "uuid": "2bfc7fff_949a170d",
        "filename": "devil/devil/android/device_scripts/list_device_dirs.sh",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-07-20T09:03:29Z",
      "side": 1,
      "message": "here replace \"%1\" with %s, see my comment below.",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a35d67b8_0e4717e8",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-07-20T09:03:29Z",
      "side": 1,
      "message": "I think I\u0027m very happy with this idea, but having the script in another file and having to push it as well is probably not needed. I think we can just have a _RECURSIVE_DIRECTORY_LIST_SCRIPT defined at the top of this file (e.g. next to _RESTART_ADBD_SCRIPT), and then just call:\n\n    self.RunShellCommand(_RECURSIVE_DIRECTORY_LIST_SCRIPT % cmd_helper.SingleQuote(path))\n\nI think that \"should just work\".",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63c86052_b65a16af",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2018-07-20T18:34:00Z",
      "side": 1,
      "message": "Yes and no - it looks like _RESTART_ADBD_SCRIPT is written to a file before running, which is why it works. However, it *should* be possible to do everything in a single line with semicolons.\n\nAs in, I can do that manually just fine with:\n\nadb shell \u0027function list_subdirs() { for f in \"$1\"/*; do if [ -d \"$f\" ] ; then if [ \"$f\" \u003d\u003d \".\" ] || [ \"$f\" \u003d\u003d \"..\" ] ; then continue ; fi ; echo \"$f\" ; list_subdirs \"$f\" ; fi; done ; } ; list_subdirs /data/local/tmp/device_utils_test \u0027\n\nbut if the exact same command is run using RunShellCommand (with or without shell\u003dTrue), it just fails with a very unhelpful:\n\n/system/bin/sh: \u0027function list_subdirs() { for f in \"$1\"/*; do if [ -d \"$f\" ] ; then if [ \"$f\" \u003d\u003d \".\" ] || [ \"$f\" \u003d\u003d \"..\" ] ; then continue ; fi ; echo \"$f\" ; list_subdirs \"$f\" ; fi; done ; } ; list_subdirs /data/local/tmp/device_utils_test \u0027: not found",
      "parentUuid": "a35d67b8_0e4717e8",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a2cb0b5_f1b918eb",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2018-07-20T19:15:02Z",
      "side": 1,
      "message": "I agree with Juan here -- if that doesn\u0027t work currently, we ought to figure out why \u0026 try to make it work. We could also consider exposing the handle_large_command logic as a flag s.t. you could ask to always have the script written to a file \u0026 pushed.",
      "parentUuid": "63c86052_b65a16af",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d4152d8_58a99ff3",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-07-23T10:36:27Z",
      "side": 1,
      "message": "Hmm, I did try it (not with device_utils but a more simple adb wrapper) and it did work without having to write the file first and copy/pasting your script as-is with new lines and everything in it (just properly quoted/escaped, which RunShellCommand should also already do for you).\n\nLet me try to figure out why this doesn\u0027t seem to work with RunShellCommand.",
      "parentUuid": "3a2cb0b5_f1b918eb",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "794cac8f_47c95ee0",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2018-07-24T18:07:19Z",
      "side": 1,
      "message": "This is the command that\u0027s ultimately getting run with RunShellCommand in cmd_helper.py using the multiline string:\n\n[u\u0027/usr/local/google/home/bsheedy/android_sdk/platform-tools/adb\u0027, \u0027-s\u0027, \u0027HT7AK1A01905\u0027, \u0027shell\u0027, \u0027( \\\u0027\\\u0027\"\\\u0027\"\\\u0027\\n  function list_subdirs() {\\n    for f in \"$1\"/* ;\\n    do\\n      if [ -d \"$f\" ] ;\\n      then\\n        if [ \"$f\" \u003d\u003d \".\" ] || [ \"$f\" \u003d\u003d \"..\" ] ;\\n        then\\n          continue ;\\n        fi ;\\n        echo \"$f\" ;\\n        list_subdirs \"$f\" ;\\n      fi ;\\n    done ;\\n  } ;\\n  list_subdirs \"/data/local/tmp/device_utils_test\"\\n\\\u0027\"\\\u0027\"\\\u0027\\\u0027 );echo %$?\u0027]\n\nwhich fails with:\n\n  /system/bin/sh: \u0027\n    function list_subdirs() {\n      for f in \"$1\"/* ;\n      do\n        if [ -d \"$f\" ] ;\n        then\n          if [ \"$f\" \u003d\u003d \".\" ] || [ \"$f\" \u003d\u003d \"..\" ] ;\n          then\n            continue ;\n          fi ;\n          echo \"$f\" ;\n          list_subdirs \"$f\" ;\n        fi ;\n      done ;\n    } ;\n    list_subdirs \"/data/local/tmp/device_utils_test\"\n  \u0027: not found",
      "parentUuid": "7d4152d8_58a99ff3",
      "revId": "98edd1b50e4a74d5c8163e2d72afdde921a482e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}