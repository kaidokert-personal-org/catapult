{
  "comments": [
    {
      "key": {
        "uuid": "647b212b_ed2f6e5a",
        "filename": "telemetry/telemetry/testing/browser_test_runner_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-03-05T20:50:55Z",
      "side": 1,
      "message": "While the algorithm of \u0027::\u0027.join() might not change in the future, still, how about a helper function which does this? Then you could just pass e.g. make_test_filter(failures + successes) as the first argument to baseTest.",
      "range": {
        "startLine": 322,
        "startChar": 20,
        "endLine": 322,
        "endChar": 21
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf3cc60_1fa4282b",
        "filename": "telemetry/telemetry/testing/browser_test_runner_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-03-05T22:14:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "647b212b_ed2f6e5a",
      "range": {
        "startLine": 322,
        "startChar": 20,
        "endLine": 322,
        "endChar": 21
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2196fda_372e0498",
        "filename": "telemetry/telemetry/testing/browser_test_runner_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-03-07T22:50:13Z",
      "side": 1,
      "message": "I disagree. This is overengineering.\n\nBut if this really needs to be done, then don\u0027t put the function inside the class since it doesn\u0027t use \"self\".",
      "parentUuid": "2bf3cc60_1fa4282b",
      "range": {
        "startLine": 322,
        "startChar": 20,
        "endLine": 322,
        "endChar": 21
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f00b584_0d21b706",
        "filename": "telemetry/telemetry/testing/browser_test_runner_unittest.py",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-03-08T00:51:37Z",
      "side": 1,
      "message": "Caleb makes a good point about not using self. So I have changed this function to a non class function called _MakeTestFilter",
      "parentUuid": "a2196fda_372e0498",
      "range": {
        "startLine": 322,
        "startChar": 20,
        "endLine": 322,
        "endChar": 21
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab7e49f8_31ee1e93",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1002882
      },
      "writtenOn": "2019-03-05T20:20:10Z",
      "side": 1,
      "message": "maybe mention that fnmatch is used for matching.",
      "range": {
        "startLine": 208,
        "startChar": 7,
        "endLine": 208,
        "endChar": 12
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d76e72_675ee856",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-03-05T22:14:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab7e49f8_31ee1e93",
      "range": {
        "startLine": 208,
        "startChar": 7,
        "endLine": 208,
        "endChar": 12
      },
      "revId": "b2a2753e81cc7758a252be269dc7d810bb185ef3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}