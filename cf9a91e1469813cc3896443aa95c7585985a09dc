{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ef12b6e5_32a4ac3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-10-19T00:13:21Z",
      "side": 1,
      "message": "PTAL",
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c935518_21690394",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-19T20:31:05Z",
      "side": 1,
      "message": "LGTM, assuming everything here [1] holds true \n\n[1] https://chromium-review.googlesource.com/c/catapult/+/3960559?tab\u003dcomments\n\nDo we have a sense of how to trigger these handlers?",
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd91dcd_04c4abf1",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-10-20T07:50:54Z",
      "side": 1,
      "message": "make_response is needed.",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 8
      },
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f1c27be_089bf185",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-10-20T16:30:53Z",
      "side": 1,
      "message": "It\u0027s optional. Flask allows handler to return a string.\n\nWe could have a coding convention to always call make_response explicitly, but I think that\u0027s unnecessary. It also increases the chance of bugs like the one fixed by https://chromium-review.googlesource.com/c/catapult/+/3960466.\n\nAnyway, I\u0027m open to debate on this.",
      "parentUuid": "ddd91dcd_04c4abf1",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 8
      },
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43639cce_58d8668b",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-10-20T16:54:40Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "8f1c27be_089bf185",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 8
      },
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0720af9a_be22abf1",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-10-20T07:50:54Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 8
      },
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "def22a50_6de9ebf0",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1551157
      },
      "writtenOn": "2022-10-20T17:23:33Z",
      "side": 1,
      "message": "Just return string here then.",
      "parentUuid": "0720af9a_be22abf1",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 8
      },
      "revId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cf9a91e1469813cc3896443aa95c7585985a09dc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}