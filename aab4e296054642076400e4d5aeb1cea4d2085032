{
  "comments": [
    {
      "key": {
        "uuid": "1289d286_b7a6a6e5",
        "filename": "tracing/tracing/metrics/v8/wasm_metric.html",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-07-02T08:14:32Z",
      "side": 1,
      "message": "I wonder if it would be a bit cleaner to just use \"wasm.StartStreamingCompilation\" as the start event? If we assume that network speed is not an issue (or we decide to ignore any network latency), then I think we should not use these network-based events at all.",
      "revId": "aab4e296054642076400e4d5aeb1cea4d2085032",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14bcab94_24de934f",
        "filename": "tracing/tracing/metrics/v8/wasm_metric.html",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-07-02T09:57:24Z",
      "side": 1,
      "message": "Hmm, I did not pick wasm.StartStreamingCompilation because in the trace I recorded on my laptop there is a 4ms gap between wasm.StartStreamingCompilation and the first wasm.OnBytesReceived. I admit though, maybe it would be better to use wasm.StartStreamingCompilation, especially if we also introduce another metric that measures the time covered by wasm.ExecuteCompilation events between wasm.StartStreamingCompilation and wasm.BaselineFinished. Wdyt?",
      "parentUuid": "1289d286_b7a6a6e5",
      "revId": "aab4e296054642076400e4d5aeb1cea4d2085032",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "464d9e7a_a6f4875a",
        "filename": "tracing/tracing/metrics/v8/wasm_metric.html",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-07-02T08:14:32Z",
      "side": 1,
      "message": "Looks like this could be expressed as a reduction (assuming that {bytesReceivedEvents} is an array):\nlet compilationStart \u003d bytesReceivedEvents.reduce(Math.min, Infinity);\n\nIf it\u0027s not an array already, you could use {Array.from(bytesReceivedEvents)} to make it one.",
      "revId": "aab4e296054642076400e4d5aeb1cea4d2085032",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2acb9e4e_fb39ac17",
        "filename": "tracing/tracing/metrics/v8/wasm_metric.html",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-07-02T08:17:49Z",
      "side": 1,
      "message": "Sorry, just realize that this is not quite correct, since we need to take the \"start\" property of the events. That makes it a bit more verbose:\n\nlet compilationStart \u003d bytesReceivedEvents.reduce((cur, event) \u003d\u003e Math.min(cur, event.start), Infinity);",
      "parentUuid": "464d9e7a_a6f4875a",
      "revId": "aab4e296054642076400e4d5aeb1cea4d2085032",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}