{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "573be15f_b220bf17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-29T23:01:50Z",
      "side": 1,
      "message": "re: crrev.com/c/2785295\n\nah, now that I found this CL, I understand the difference now. In WebGPU we do have %20 in the \u003cmeta name\u003dvariant content\u003d\u0027\u0027\u003e tag:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/wpt_internal/webgpu/cts.html\n\nwhereas your tests have actual spaces:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/external/wpt/xhr/xmlhttprequest-timeout-aborted.html\n\nI suppose both are technically valid since they are both valid encodings of a URL containing a space.\n\nBTW to test the  WebGPU tests you can run any of the dawn-.*-deps-rel tryjobs. Any one should work, as these expectations apply to all of them.\n\n\nI am not confident about the solution in this CL. In particular I don\u0027t think that an expectation for U\u003d\"http://google.com/Foo%20Bar\" should be encoded as E\u003d\"http://google.com/Foo%2520Bar\". Those are two different URLs. U is the same URL as \"http://google.com/Foo Bar\".\n\nMy thought would be that instead variants should be normalized to an encoded form prior to having expectations applied, which in JS would look like this:\n\n\u003e new URL(\u0027https://google.com/?a%20b c#d%20e f\u0027).href\n\u0027https://google.com/?a%20b%20c#d%20e%20f\u0027\n\n(or encodeURIComponent(decodeURIComponent(string)) if not working with a full URL)\nbut I\u0027m not sure about how to do this in Python. (Note the trailing wildcard *, if any, would have to be stripped first.)\n\nI don\u0027t understand the code being changed here but it seems potentially fragile to URLs that actually contain %25. Not sure about this.",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccd02ea8_57cff5f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-29T23:50:01Z",
      "side": 1,
      "message": "Kai, thanks for the comments. I have thought to utilize some url encoding/decoding lib to do full encoding/decoding as you suggested. The problem is that it could potentially introduce big change to current expectation files. That is why I choose the simply scheme in this CL.\n\nI can see one potential issue here: if in future somebody want to add \u0027Foo%25Bar\u0027 to test expectation, and forget to escape that, his change may not work. It will be better if we can have some presubmit warning for this.",
      "parentUuid": "573be15f_b220bf17",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ac906d0_4b556019",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-03-30T00:03:42Z",
      "side": 1,
      "message": "The point is that the syntax doesn\u0027t allow for tests that have spaces in the name; we can\u0027t currently parse them correctly. So, in order to support that, a reasonable change is to escape the spaces. And, once you start down that path, you then have to check the other cases (to handle a \u0027%\u0027 in the test name, and so on).\n\nI suppose as an alternative we could implement lookahead in the parser, such that we scanned ahead for a \u0027[\u0027, and then recognized whatever came before that as having to be part of the test name, e.g.:\n\n   crbug.com/123 [ tag ] test name [ Pass Fail ]\n\nWhat do others think of that idea?",
      "parentUuid": "ccd02ea8_57cff5f9",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61b5be69_5d944946",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T00:17:41Z",
      "side": 1,
      "message": "Talked with Dirk offline. The problem is that there may be \u0027[\u0027 in test names, so still need some kine of escape.",
      "parentUuid": "7ac906d0_4b556019",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a85bdef0_7d44c916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2021-03-30T00:38:05Z",
      "side": 1,
      "message": "Hey Weizhong, you should first come into agreement with Kai on what to about test names that have %20 in their names. As for testing changes, you can do a test roll of changes from catapult and then run the dawn try builders on that CL. For instance crrev.com/c/2787579.",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "082acabc_55260c6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2021-03-30T00:39:16Z",
      "side": 1,
      "message": "Landing this change will break the dawn bots btw. So thats why I prevented this change from merging. First get +1 on the changes in the other CL, then you can merge changes in this CL.",
      "parentUuid": "a85bdef0_7d44c916",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e587a508_8046ff83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T00:55:11Z",
      "side": 1,
      "message": "I already stopped auto roll for catapult, and only after I merge this CL can I run the trybots KAI suggested.\n\nFine since Kai says he still have questions. Let\u0027s give him some more time.",
      "parentUuid": "082acabc_55260c6e",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5bc21dd_dceafff2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-30T01:00:31Z",
      "side": 1,
      "message": "Re: the WebGPUExpectations changes:\n\nI do not think those changes are correct. If they are necessary with this patch, then I think this patch must not be correct. (BTW, we have some additional tooling that relies on the WebGPUExpectations being properly encoded, not double-escaped:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/webgpu/regenerate_internal_cts_html.sh )\n\n\nTaking a simplified example from that CL:\n\n  crbug.com/dawn/666 cts.html?q\u003drender%20bundle [ Failure ]\n\nIf the string is parsed, truly, as a URL, then it describes exactly the same URL as the following would (if it were valid syntax):\n\n  crbug.com/dawn/666 cts.html?q\u003drender bundle [ Failure ]\n\nMeanwhile, this would be a different URL, which has an encoded % in it:\n\n  crbug.com/dawn/666 cts.html?q\u003drender%2520bundle [ Failure ]\n\n\nAnd for the same reason, the expectation in crbug.com/1190896:\n\n  crbug.com/1050754 external/wpt/xhr/xmlhttprequest-timeout-worker-aborted.html?aborted immediately after send() [ Pass Timeout ]\n\nshould be exactly equivalent to this expectation:\n\n  crbug.com/1050754 external/wpt/xhr/xmlhttprequest-timeout-worker-aborted.html?aborted%20immediately%20after%20send() [ Pass Timeout ]\n\nI do think typ should be changed to allow this last expectation to apply properly to the test in question - just not in the way it\u0027s done in this CL. I\u0027m not sure whether there is a quick fix for this, but my idea would be to apply some URL normalization to both the expectation URL and the variant URL before applying matching to them. I don\u0027t suspect this would cause churn in any existing expectation files.\n\n(Ideally typ would parse/normalize the expectation URL exactly once, so expectation overlap detection would also consider those URLs to be identical.)",
      "parentUuid": "61b5be69_5d944946",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f038743d_f3232749",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2021-03-30T01:14:58Z",
      "side": 1,
      "message": "I see. You don\u0027t need to merge this change to test it on dawn bots though. As I said in a previous comment you can test changes to catapult by creating a CL where you set the revision in //DEPS for catapult to refs/changes/31/2780031/\u003cpatch number\u003e. Similarly to what I did in crrev.com/c/2787579.",
      "parentUuid": "e587a508_8046ff83",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "167de0d0_3e34e0d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T01:17:58Z",
      "side": 1,
      "message": "Hi Kai,\n\nWhen you say \"apply some URL normalization .... before applying matching to them\", what is the matching here?\n\nMy understanding is that currently space is not allowed in Test expectation, and we want to change that. The way to change this is to escape it, and in turn that requires escape the escape.\n\nOne way to solve this problem is that we use a different escape pattern, so that we don\u0027t interfere with the \u0027%20\u0027 used in GPU expectations. But this is what we want?",
      "parentUuid": "f5bc21dd_dceafff2",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9dbc585e_69263019",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T01:19:06Z",
      "side": 1,
      "message": "Ah, yes!",
      "parentUuid": "f038743d_f3232749",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b39a1c14_c825bff7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-03-30T02:04:12Z",
      "side": 1,
      "message": "I\u0027m not sure I understand what Kai is suggesting.\n\nHowever, to be clear: I don\u0027t want there to be more than one way to encode the same test name. Doing so would just confuses things unnecessarily, and it would complicate every other part of the system (like ResultsDB) that needs to refer to test names as well.\n\nThis also implies that typ should not be in the url-normalizing business. Not all test names are URLs and we shouldn\u0027t treat them as such. And, I don\u0027t want the multiple-encoding problems that result when you treat them that way.\n\nFeel free to suggest some other mechanism for escaping things that will allow for spaces in the test names. For example, we could use \"\\ \" instead of \"%20\".\n\nHowever, If there is other code that needs to read or write expectations files and isn\u0027t using typ, then you\u0027ll need to point us at it so we can update that as well.",
      "parentUuid": "167de0d0_3e34e0d9",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6917d8_3b7f879d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-30T03:05:51Z",
      "side": 1,
      "message": "Ah, I forgot that not all expectations are necessarily URLs. In that case, I revise my suggestion to the following:\n\n- Expectations test names are taken literally (but still don\u0027t need to be able to contain spaces)\n- WPT URLs are normalized at some point before they would get matched against expectation entries. It is entirely possible this occurs outside of typ, like in blinkpy. I am not familiar enough with the architecture.\n\nThat would make this expectation (pretending it were possible) *not* match the test in question:\n\n  crbug.com/1050754 external/wpt/xhr/xmlhttprequest-timeout-worker-aborted.html?aborted immediately after send() [ Pass Timeout ]\n\nwhile this one would:\n\n  crbug.com/1050754 external/wpt/xhr/xmlhttprequest-timeout-worker-aborted.html?aborted%20immediately%20after%20send() [ Pass Timeout ]",
      "parentUuid": "b39a1c14_c825bff7",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505d7542_e5face1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-30T03:08:46Z",
      "side": 1,
      "message": "\u003e However, If there is other code that needs to read or write expectations files and isn\u0027t using typ, then you\u0027ll need to point us at it so we can update that as well.\n\nIt uses typ to parse the expectation file but then expects the test names to actually be URLs, wherein %2520 would mean \"% 2 0\" which would not match our test name, which has an (encoded) space in it, not \"% 2 0\".\n\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/webgpu-cts/scripts/extract_expectation_names_for_variant_generation.py",
      "parentUuid": "fd6917d8_3b7f879d",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64f3f396_7d9782b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T03:22:01Z",
      "side": 1,
      "message": "I am not sure why after the parse, the result would not match your test name. In the example you give, the relevant part is \"render%20pass\". After I update the GPU expectation file, it is \"render%2520pass\", and after de-escape, it is \"render%20pass\". Do not understand why you say it will not match?\n\n\u003e\u003e Expectations test names are taken literally (but still don\u0027t need to be able to contain spaces)\nWe have a test which has spaces in its name, so don\u0027t understand what do you mean by saying \"don\u0027t need to be able to contain spaces\"",
      "parentUuid": "505d7542_e5face1c",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11330cc5_c0414ac1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-30T04:20:17Z",
      "side": 1,
      "message": "Hm, sorry, I could be wrong about that. What string would be produced by that script (what string would you get accessing test_expectation.test)? If that doesn\u0027t contain the %25 then it won\u0027t break the other script.",
      "parentUuid": "64f3f396_7d9782b1",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b150c2ce_70b201b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-30T16:43:37Z",
      "side": 1,
      "message": "If test_expectation.test has been decoded (so the %25 has been changed back to %) then I can accept this as it won\u0027t break our tool. I\u0027m still a little reluctant as it very confusing to me (having to double-encode URLs is very weird, and people writing expectation files probably won\u0027t be able to figure out that they should do this), but I think it would technically _work_.",
      "parentUuid": "11330cc5_c0414ac1",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e67c4746_ee1dd3c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-03-30T16:52:28Z",
      "side": 1,
      "message": "I\u0027m still a bit confused. Is there some reason we need to double-encode things?",
      "parentUuid": "b150c2ce_70b201b3",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}