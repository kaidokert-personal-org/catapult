{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "573be15f_b220bf17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2021-03-29T23:01:50Z",
      "side": 1,
      "message": "re: crrev.com/c/2785295\n\nah, now that I found this CL, I understand the difference now. In WebGPU we do have %20 in the \u003cmeta name\u003dvariant content\u003d\u0027\u0027\u003e tag:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/wpt_internal/webgpu/cts.html\n\nwhereas your tests have actual spaces:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/external/wpt/xhr/xmlhttprequest-timeout-aborted.html\n\nI suppose both are technically valid since they are both valid encodings of a URL containing a space.\n\nBTW to test the  WebGPU tests you can run any of the dawn-.*-deps-rel tryjobs. Any one should work, as these expectations apply to all of them.\n\n\nI am not confident about the solution in this CL. In particular I don\u0027t think that an expectation for U\u003d\"http://google.com/Foo%20Bar\" should be encoded as E\u003d\"http://google.com/Foo%2520Bar\". Those are two different URLs. U is the same URL as \"http://google.com/Foo Bar\".\n\nMy thought would be that instead variants should be normalized to an encoded form prior to having expectations applied, which in JS would look like this:\n\n\u003e new URL(\u0027https://google.com/?a%20b c#d%20e f\u0027).href\n\u0027https://google.com/?a%20b%20c#d%20e%20f\u0027\n\n(or encodeURIComponent(decodeURIComponent(string)) if not working with a full URL)\nbut I\u0027m not sure about how to do this in Python. (Note the trailing wildcard *, if any, would have to be stripped first.)\n\nI don\u0027t understand the code being changed here but it seems potentially fragile to URLs that actually contain %25. Not sure about this.",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccd02ea8_57cff5f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-29T23:50:01Z",
      "side": 1,
      "message": "Kai, thanks for the comments. I have thought to utilize some url encoding/decoding lib to do full encoding/decoding as you suggested. The problem is that it could potentially introduce big change to current expectation files. That is why I choose the simply scheme in this CL.\n\nI can see one potential issue here: if in future somebody want to add \u0027Foo%25Bar\u0027 to test expectation, and forget to escape that, his change may not work. It will be better if we can have some presubmit warning for this.",
      "parentUuid": "573be15f_b220bf17",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ac906d0_4b556019",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2021-03-30T00:03:42Z",
      "side": 1,
      "message": "The point is that the syntax doesn\u0027t allow for tests that have spaces in the name; we can\u0027t currently parse them correctly. So, in order to support that, a reasonable change is to escape the spaces. And, once you start down that path, you then have to check the other cases (to handle a \u0027%\u0027 in the test name, and so on).\n\nI suppose as an alternative we could implement lookahead in the parser, such that we scanned ahead for a \u0027[\u0027, and then recognized whatever came before that as having to be part of the test name, e.g.:\n\n   crbug.com/123 [ tag ] test name [ Pass Fail ]\n\nWhat do others think of that idea?",
      "parentUuid": "ccd02ea8_57cff5f9",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61b5be69_5d944946",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T00:17:41Z",
      "side": 1,
      "message": "Talked with Dirk offline. The problem is that there may be \u0027[\u0027 in test names, so still need some kine of escape.",
      "parentUuid": "7ac906d0_4b556019",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a85bdef0_7d44c916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2021-03-30T00:38:05Z",
      "side": 1,
      "message": "Hey Weizhong, you should first come into agreement with Kai on what to about test names that have %20 in their names. As for testing changes, you can do a test roll of changes from catapult and then run the dawn try builders on that CL. For instance crrev.com/c/2787579.",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "082acabc_55260c6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2021-03-30T00:39:16Z",
      "side": 1,
      "message": "Landing this change will break the dawn bots btw. So thats why I prevented this change from merging. First get +1 on the changes in the other CL, then you can merge changes in this CL.",
      "parentUuid": "a85bdef0_7d44c916",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e587a508_8046ff83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1476473
      },
      "writtenOn": "2021-03-30T00:55:11Z",
      "side": 1,
      "message": "I already stopped auto roll for catapult, and only after I merge this CL can I run the trybots KAI suggested.\n\nFine since Kai says he still have questions. Let\u0027s give him some more time.",
      "parentUuid": "082acabc_55260c6e",
      "revId": "21d65f4c5a1a81952e083e0b22e351d46f0e3341",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}