{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1c4c0e83_196b519a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2023-11-27T19:54:31Z",
      "side": 1,
      "message": "I tried a couple of more elegant ways to do this query but I don\u0027t think Datastore supports the OR operation. Here is the query in datastore:\n\nhttps://pantheon.corp.google.com/datastore/databases/-default-/entities;kind\u003dTestMetadata;ns\u003d__$DEFAULT$__/query/gql;gql\u003dSELECT%2520COUNT%2528*%2529%250AFROM%2520TestMetadata%250AWHERE%2520%250A%2520%2520%2520%2520deprecated%2520%253D%2520false%250A%2520%2520%2520%2520AND%2520parent_test%2520%253D%2520null%250A%2520%2520%2520%2520AND%2520description%2520!%253D%2520%2522made_up_description%2522%250A?e\u003d-13802955\u0026mods\u003dcomponent_inspector\u0026project\u003dchromeperf",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "849f41ce_1d4118c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2023-11-27T20:00:28Z",
      "side": 1,
      "message": "The other thing we could try is to remove description from the composite index [1], create new composite indices, and delete the unused ones [2]. How do we deploy the index.yaml? Is it automatically or manually (like the gcloud deploy steps we use for staging)? \n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/index.yaml;drc\u003db9ebaddcd0d4298e8e65641a5f454f7603e90b40;l\u003d317\n[2] https://cloud.google.com/appengine/docs/flexible/configuring-datastore-indexes-with-index-yaml?tab\u003dpython",
      "parentUuid": "1c4c0e83_196b519a",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5201cab2_0a018d57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-11-27T20:18:33Z",
      "side": 1,
      "message": "Could you provide more context about how the query and results will be different with this change?",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e922023c_3bae1ecb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2023-11-27T20:24:07Z",
      "side": 1,
      "message": "Sure thing. When querying datastore with multiple indexes, Datastore will use composite indexes if they are defined or it will merge the indexes together [1]. Our composite indexes are defined here [2], but our query only filters for the `parent_test` and `deprecated`. Therefore, it\u0027s using a merge index. It turns out the merge index can slow down performance [3] to the point where it can time out. For example, \n\n```\n// this times out\nSELECT COUNT(*)\nFROM TestMetadata\nWHERE \n    parent_test \u003d null\n   AND deprecated\u003dfalse\n```\n\nwill time out. But the following will not time out:\n\n```\n// single indices are fine\nSELECT COUNT(*)\nFROM TestMetadata\nWHERE \n    parent_test \u003d null\n```\n\n```\n// composite indices are fine\nSELECT COUNT(*) \nFROM TestMetadata\nWHERE \n    deprecated \u003d false\n    AND parent_test \u003d null\n    AND description \u003d \"\"\n    AND internal_only\u003dtrue\n```\n\n[1] https://cloud.google.com/datastore/docs/concepts/optimize-indexes\n[2] https://source.chromium.org/chromium/chromium/src/+/main:third_party/catapult/dashboard/index.yaml;drc\u003db9ebaddcd0d4298e8e65641a5f454f7603e90b40;l\u003d317\n[3] see slow merge-join queries https://cloud.google.com/datastore/docs/troubleshooting",
      "parentUuid": "5201cab2_0a018d57",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b369c59_a3385ea4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-11-27T21:27:35Z",
      "side": 1,
      "message": "lgtm with possible future update.",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64d7c3cf_1433356c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-11-27T21:27:35Z",
      "side": 1,
      "message": "I see. Thanks for the info!\n\nI think this CL works. We can also consider adding another pair of composite indexes which only have deprecated and parent_test (and internal_only), That should be even more efficient.",
      "parentUuid": "e922023c_3bae1ecb",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa4dee40_bd4c97a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2023-11-27T21:44:44Z",
      "side": 1,
      "message": "Building composite indexes now to see if it fixes the issue: https://chromium-review.googlesource.com/c/catapult/+/5062531/comments/5201cab2_0a018d57",
      "parentUuid": "849f41ce_1d4118c6",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca407368_64a88e7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2023-11-27T21:44:44Z",
      "side": 1,
      "message": "SG. I\u0027m currently building composite indexes now with `deprecated` and `parent_test`. It\u0027s been 30 minutes so far and only 3% of the indexes have built. I think the indexes should be completed sometime tomorrow morning. If the cron job recovers, then we will not need this CL. If not, then I will submit.",
      "parentUuid": "64d7c3cf_1433356c",
      "revId": "59cc2439c0e864b709bdac618da0bf3c2f3e2183",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}