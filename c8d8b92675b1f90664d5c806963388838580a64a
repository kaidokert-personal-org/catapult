{
  "comments": [
    {
      "key": {
        "uuid": "ab0e469e_09687993",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T15:46:25Z",
      "side": 1,
      "message": "This is a bit awkward.\n\nI think AddArtifact ensures that all artifact paths are relative to the artifact_dir, right? Could the caller instead just do os.path.join(artifact_results.artifact_dir, artifact_path) to make them absolute?",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1169a37a_18bad938",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T15:51:48Z",
      "side": 1,
      "message": "\"os.path.join(artifact_results.artifact_dir, artifact_path)\" is not correct, it should be \"os.path.join(artifact_results.artifact_dir, \u0027..\u0027, artifact_path)\". \n\nI thought about putting this in the caller, but the fact about where these |artifact_path| are relative to is held by this class. Assembling that back is a bit non trivial to figure out, so that\u0027s why I put this here.",
      "parentUuid": "ab0e469e_09687993",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79e948e1_b05c0421",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T16:17:53Z",
      "side": 1,
      "message": "Hmm, I think it\u0027s a bug that it\u0027s hard for clients of this class to figure out the paths to the artifacts stored in there.\n\nIs there a reason why we need to hard-code the \u0027artifacts\u0027 bit at the start of each relative path?\n\nIn other words, rather than:\n\nartifact_results \u003d ArtifactResults(\u0027/path/to/output\u0027)\nartifact_results.artifacts_dir \u003d \u0027/path/to/output/artifacts\u0027\nartifact_results.GetTestArtifacts(\u0027foo\u0027)[\u0027log\u0027] \u003d\u003d \u0027artifacts/my_log.txt\u0027\n\ncould we have:\n\nartifact_results \u003d ArtifactResults(\u0027/path/to/output/artifacts\u0027)\nartifact_results.artifacts_dir \u003d \u0027/path/to/output/artifacts\u0027\nartifact_results.GetTestArtifacts(\u0027foo\u0027)[\u0027log\u0027] \u003d\u003d \u0027my_log.txt\u0027\n\nand then getting absolute paths for the artifacts would be easy.",
      "parentUuid": "1169a37a_18bad938",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a31959_e7cd589e",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T16:27:43Z",
      "side": 1,
      "message": "That would make the job of the recipe to figure out where the artifacts are stored harder. Note that the recipe just pass in --output-dir, hence it only knows about the output_directory.",
      "parentUuid": "79e948e1_b05c0421",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54874748_7c226add",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T16:47:01Z",
      "side": 1,
      "message": "Then the caller should do the same thing that the recipe would do: use the fact that artifact paths are relative to the output dir.",
      "parentUuid": "10a31959_e7cd589e",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a72d7176_524e0cd7",
        "filename": "telemetry/telemetry/internal/results/artifact_results.py",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T17:47:56Z",
      "side": 1,
      "message": "In this case, the caller needs to know which artifact paths belong to which page for meaningful messaging to the log. Can you be more specific about your proposal of how callers should handle this?\n\n\nIf you think the API is awkward (which I am also agree), another option I have is to changing this to GetArtifactAbsPath(self, test_name). Wdyt?",
      "parentUuid": "54874748_7c226add",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9eb73aa_90aadfe9",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 516,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T15:46:25Z",
      "side": 1,
      "message": "nit: for i, artifact_path in enumerate(artifacts[artifact_type])",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a5a062d_d94dbacb",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 516,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T16:27:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9eb73aa_90aadfe9",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8eac4398_53d84743",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T15:46:25Z",
      "side": 1,
      "message": "nit: Uploading",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6ca4bfc_3d8f8874",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T16:27:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8eac4398_53d84743",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb644095_e0bdbdd3",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-08T15:46:25Z",
      "side": 1,
      "message": "this should just be `total_num_artifacts`?",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1cb0d11_8b4bc08a",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-08T16:27:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb644095_e0bdbdd3",
      "revId": "c8d8b92675b1f90664d5c806963388838580a64a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}