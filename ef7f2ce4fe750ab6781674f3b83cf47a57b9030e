{
  "comments": [
    {
      "key": {
        "uuid": "aaf37d98_3b0e860e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-09-05T18:25:24Z",
      "side": 1,
      "message": "We already do this here:\n\nhttps://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/story_runner.py?q\u003dstory_runner.py\u0026sq\u003dpackage:chromium\u0026dr\u0026l\u003d322\n\nI think we should only have one method to interrupt the benchmark if possible, not multiple.",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "ef7f2ce4fe750ab6781674f3b83cf47a57b9030e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9474b1d2_765e7d6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-06T08:10:39Z",
      "side": 1,
      "message": "I know. That\u0027s what the rest of the commit message explains.",
      "parentUuid": "aaf37d98_3b0e860e",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "ef7f2ce4fe750ab6781674f3b83cf47a57b9030e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c3e3ff8_e8a05702",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-10T17:20:22Z",
      "side": 1,
      "message": "Let me try to explain this again. When developing changes to the results object I often run tests (either locally or on tryjobs) to see if my changes so far are correct. And currently, if I make a mistake and a test fails, what I get to see is:\n\n    $ ./bin/run_tests page_test_results_unittest\n    [...]\n    [4/26] telemetry.internal.results.page_test_results_unittest.PageTestResultsTest.testAddScalarValueSameAsMeasurement failed unexpectedly 0.0115s:\n    Traceback (most recent call last):\n      File \"/usr/local/google/code/clankium/src/third_party/catapult/telemetry/telemetry/internal/results/page_test_results_unittest.py\", line 152, in testAddScalarValueSameAsMeasurement\n        results.DidRunPage(self.pages[0])\n      File \"/usr/local/google/code/clankium/src/third_party/catapult/telemetry/telemetry/internal/results/page_test_results.py\", line 270, in __exit__\n        self.Finalize()\n      File \"/usr/local/google/code/clankium/src/third_party/catapult/telemetry/telemetry/internal/results/page_test_results.py\", line 474, in Finalize\n        \u0027Cannot finalize while stories are still running.\u0027)\n    AssertionError: Cannot finalize while stories are still running.\n\nMy mistake caused the test to fail before DidRunPage was called, so the assert complains about the missing call to DidRunPage but the root reason for the error (whatever my mistake was) is now lost. [And the exception handling code in story_runner.py is irrelevant here.]\n\nAfter this CL, if I rerun the tests now I get the much more useful:\n\n    $ ./bin/run_tests page_test_results_unittest\n    [...]\n    [25/32] telemetry.internal.results.page_test_results_unittest.PageTestResultsTest.testAddScalarValueSameAsMeasurement failed unexpectedly 0.0136s:\n      AttributeError(\"\u0027PageTestResults\u0027 object has no attribute \u0027AddMeasurment\u0027\",)\n      Traceback (most recent call last):\n        File \"/usr/local/google/code/clankium/src/third_party/catapult/telemetry/telemetry/internal/results/page_test_results_unittest.py\", line 163, in testAddScalarValueSameAsMeasurement\n          results.AddMeasurment(\u0027a\u0027, \u0027seconds\u0027, 3)\n      AttributeError: \u0027PageTestResults\u0027 object has no attribute \u0027AddMeasurment\u0027\n\n\"Oh! I had a typo.\"\n\nHappy to hear if you have other suggestions for how to achieve this.",
      "parentUuid": "9474b1d2_765e7d6c",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "ef7f2ce4fe750ab6781674f3b83cf47a57b9030e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c08db76_10fbebdf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-09-10T17:28:09Z",
      "side": 1,
      "message": "ah, I see.\n\nIn that case could we remove the existing InterruptBenchmark call? Otherwise still LGTM.",
      "parentUuid": "0c3e3ff8_e8a05702",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "ef7f2ce4fe750ab6781674f3b83cf47a57b9030e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd9e27f_e274bcda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-09-10T17:56:29Z",
      "side": 1,
      "message": "You mean to remove all of the calls to InterruptBenchmark in story_runner.py [1] and let exceptions do the benchmark interrupting?\n\nThat would certainly be cleaner, and probably help simplify the very obscure control flow that currently plagues the story runner loop. But that needs to be thought out very carefully and certainly needs another or few other CLs. I could keep track of that as part of crbug.com/866458.\n\n[1]: https://cs.chromium.org/search/?q\u003dInterruptBenchmark+f:story_runner.py",
      "parentUuid": "5c08db76_10fbebdf",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "ef7f2ce4fe750ab6781674f3b83cf47a57b9030e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}