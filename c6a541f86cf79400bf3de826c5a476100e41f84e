{
  "comments": [
    {
      "key": {
        "uuid": "74dceda0_04584f31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-08T13:11:57Z",
      "side": 1,
      "message": "If anything I would like to push things the other way around; finding a browser (and getting hold of the possible_browser) should be part of core Telemetry\u0027s job. The shared_state is supposed to be a \"throw away\" object to hold some state we can discard in case of failures during stories; and mapping Telemetry --browser flags to a specific possible_browser is not something we should be re-doing every time we need to re-create the shared state.\n\nThe fact that we need information about the possible_browser (and it\u0027s platform) *before* starting the story runner loop (to which the shared_state lifetime is bound to) further supports this idea.\n\nFor fixing the issue with browserless benchmarks, maybe a NoOp browser as I suggested on the bug could work?",
      "revId": "c6a541f86cf79400bf3de826c5a476100e41f84e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceb6bbeb_be175173",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-08T01:36:34Z",
      "side": 1,
      "message": "This class seems like it could be named better, but I\u0027m not 100% sure what it does. It\u0027s called a StoryRunner, which would cause me to believe that it\u0027s something that knows how to run a story. However, there\u0027s a method in this file with the signature:\n\ndef Run(test, story_set, finder_options, results, max_failures\u003dNone,\n        expectations\u003dNone, metadata\u003dNone, max_num_values\u003dsys.maxint):\n\nwhich would definitely indicate that this is something that knows how to run an entire story set, which I would think would make this a StorySetRunner. All of this is outside the scope of this CL, but it definitely seems like the boundaries between classes could be cleaned up here, or at least the classes themselves could have better names.",
      "revId": "c6a541f86cf79400bf3de826c5a476100e41f84e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e271d24_7e49e986",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-08T01:36:34Z",
      "side": 1,
      "message": "This API where we optionally allow callers to pass in a state but construct it if it\u0027s not passed in seems really confusing to me. I\u0027d much rather prefer a model where it\u0027s clear who\u0027s responsible for constructing the shared state. Going to take a harder look at this tomorrow.",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 21
      },
      "revId": "c6a541f86cf79400bf3de826c5a476100e41f84e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20799323_6d00539f",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-08T13:11:57Z",
      "side": 1,
      "message": "+1, this seems confusing and error prone.",
      "parentUuid": "0e271d24_7e49e986",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 21
      },
      "revId": "c6a541f86cf79400bf3de826c5a476100e41f84e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74867c49_45578fed",
        "filename": "telemetry/telemetry/internal/story_runner.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-05-08T14:29:29Z",
      "side": 1,
      "message": "I agree that this is bad. Maybe I should move the test expectation handling logic to much later, instead of moving the state creation to much earlier.\n\nLemme try another patch.",
      "parentUuid": "20799323_6d00539f",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 21
      },
      "revId": "c6a541f86cf79400bf3de826c5a476100e41f84e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}