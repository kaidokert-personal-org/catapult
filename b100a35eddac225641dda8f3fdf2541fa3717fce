{
  "comments": [
    {
      "key": {
        "uuid": "c22783e5_aa1a5cd7",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-05-14T17:49:53Z",
      "side": 1,
      "message": "however",
      "range": {
        "startLine": 46,
        "startChar": 19,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35cd3724_36fe804f",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-16T14:29:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c22783e5_aa1a5cd7",
      "range": {
        "startLine": 46,
        "startChar": 19,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6f8cd63_f9c4b8b4",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-05-14T15:43:50Z",
      "side": 1,
      "message": "Yikes, this is unintuitive. Unfortunately, I don\u0027t have a better suggestion.",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0eaf966_9652601f",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-05-14T17:49:53Z",
      "side": 1,
      "message": "I looked into this a bit.\n\nI wrote the following code: \n\nimport sys\ndef run():\n  try:\n    raise Exception\n  finally:\n    if sys.exc_info()[0]:\n      print(\u0027exception!\u0027)\n    else:\n      print(\u0027all good.\u0027)\nrun() \n\nand then ran it:\n\ncrouleau@crouleau:~/python_play$ python3 play.py\nexception!\nTraceback (most recent call last):\n  File \"play.py\", line 12, in \u003cmodule\u003e\n    run()\n  File \"play.py\", line 5, in run\n    raise Exception\nException\ncrouleau@crouleau:~/python_play$ python play.py\nall good.\nTraceback (most recent call last):\n  File \"play.py\", line 12, in \u003cmodule\u003e\n    run()\n  File \"play.py\", line 5, in run\n    raise Exception\nException\n\n\nSo this is another issue that is solved in python3.\n\n\nMaybe you can add a note explaining that BestEffort will no longer be needed for python3.",
      "parentUuid": "f6f8cd63_f9c4b8b4",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b38a563_59160347",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-16T14:29:36Z",
      "side": 1,
      "message": "Ah, thanks for checking this! I added another note to make it clear that this is python 2.7 behavior, and that none of this will be needed in Python 3.",
      "parentUuid": "c0eaf966_9652601f",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db06fa12_61f1744a",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-05-14T17:49:53Z",
      "side": 1,
      "message": "occurred",
      "range": {
        "startLine": 62,
        "startChar": 47,
        "endLine": 62,
        "endChar": 54
      },
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7668dbe9_f9318146",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-16T14:29:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db06fa12_61f1744a",
      "range": {
        "startLine": 62,
        "startChar": 47,
        "endLine": 62,
        "endChar": 54
      },
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db97ce73_7fafa640",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-14T14:48:31Z",
      "side": 1,
      "message": "I\u0027m including this here as an example of another thing I tried but turned out to be more awkward and harder to use correctly. Planning to remove before committing this change.",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11fef844_431f5e59",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-14T14:48:31Z",
      "side": 1,
      "message": "The fact that a regular try-except-finally block does not work, and this monster is needed instead, was the main reason for me to abandon this approach.",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6660ab1_9f01657b",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-05-14T15:43:50Z",
      "side": 1,
      "message": "I\u0027m wondering about something like\n\n  with reraise.OriginalException(lambda: worker.CleanUp()):\n    with reraise.OriginalException(lambda: worker.Disconnect()):\n      worker.Process()\n\nbut I think that might complicate the control flow a bit too much for too little benefit.",
      "parentUuid": "11fef844_431f5e59",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94656fd8_89c4d546",
        "filename": "common/py_utils/py_utils/exc_util.py",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-05-16T14:29:36Z",
      "side": 1,
      "message": "Yup, agree. I also tried a few other things with context managers, but they all seemed to obscure rather than clarify the control flow.",
      "parentUuid": "a6660ab1_9f01657b",
      "revId": "b100a35eddac225641dda8f3fdf2541fa3717fce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}