{
  "comments": [
    {
      "key": {
        "uuid": "77b57d81_32f50be0",
        "filename": "telemetry/telemetry/page/cache_temperature.py",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-21T17:36:00Z",
      "side": 1,
      "message": "Can you move the browser --\u003e tab refactoring to a separate CL to make this Cl easier to review?",
      "revId": "2b79b08a0cb7acf65740043c6ef6978f320ce57b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aa69d66_fd7a68da",
        "filename": "telemetry/telemetry/page/cache_temperature.py",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2017-11-21T17:36:00Z",
      "side": 1,
      "message": "This flow is right, but a bit hard to follow. Instead, can you keep a single TEMPERATURE for each CacheManipulator classes, and then do the following:\n\nif temperature in RENDERER_TEMPERATURES:\n    c.PrepareRendererCache(page, browser.tabs[0], previous_page)\n    return\nelif temperature in BROWSER_TEMPERATURES:\n    c.PrepareBrowserCache(page, browser.tabs[0], previous_page)\n    return\n\n\nDefault implementation of PrepareBrowserCache is basically line 173 to line 175 below.",
      "revId": "2b79b08a0cb7acf65740043c6ef6978f320ce57b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}