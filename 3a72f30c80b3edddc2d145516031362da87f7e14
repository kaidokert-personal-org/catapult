{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "084cc7d4_03067a24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-07-10T21:56:22Z",
      "side": 1,
      "message": "LGTM with potential updates in the future.",
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1c2f3d8_6ff6e76b",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-07-10T21:21:15Z",
      "side": 1,
      "message": "If we have a tests as (A,B,C) and subtests_1 as (a,b), is it possible that we have 6 combinations (plots) while the loop does not break?",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 8
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13e6c2ee_d6fb93e7",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2023-07-10T21:46:30Z",
      "side": 1,
      "message": "Correct. Worst case scenario we get 25 plots in there. However in practice it will hopefully be closer to 5 for majority of the cases. I am hesitant to multiply len(tests) and len(subtests_1) since the likelihood that test A has all subtests a,b,c is very low.",
      "parentUuid": "e1c2f3d8_6ff6e76b",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 8
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91ea17b8_d41d9c94",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-07-10T21:56:22Z",
      "side": 1,
      "message": "I see. 25 is not bad at all. The only concern is how to tell end user that we will only show the top X results. Sorting may be needed here. We can improve it in the future.",
      "parentUuid": "13e6c2ee_d6fb93e7",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 8
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "561c8f29_bf0d3c15",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2023-07-10T21:58:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91ea17b8_d41d9c94",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 8
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93ae8f1d_879d2e0b",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-07-10T21:21:15Z",
      "side": 1,
      "message": "nit: Does Skia Perf shows the end date on X axis even if there is no data on that date? I\u0027m wondering how it will look like if the regression is the last data on the plot.",
      "range": {
        "startLine": 82,
        "startChar": 6,
        "endLine": 82,
        "endChar": 14
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31530a34_905a0636",
        "filename": "dashboard/dashboard/models/skia_helper.py",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1559627
      },
      "writtenOn": "2023-07-10T21:46:30Z",
      "side": 1,
      "message": "Sent you an example on chat. Basically the anomaly icon shows up right at the end. Which is why I am adding a day\u0027s worth of commits at the end so that the graph renders better.",
      "parentUuid": "93ae8f1d_879d2e0b",
      "range": {
        "startLine": 82,
        "startChar": 6,
        "endLine": 82,
        "endChar": 14
      },
      "revId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a72f30c80b3edddc2d145516031362da87f7e14",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}