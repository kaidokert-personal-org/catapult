{
  "comments": [
    {
      "key": {
        "uuid": "36be0cc7_c7eb7df9",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Can these events really run on any thread, or can you narrow it down? It might be significantly faster if you can ignore some threads. It\u0027s ok if you want to TODO that for now and file a bug.",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e855e8fe_76c06d04",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 221,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Can you split this out to a helper function?",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "590ab8a7_313c2132",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "It looks like GenerateRenderPass and ReceiveCompositorFrame are not used. Intentional?",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1557c8be_bba17696",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 249,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Please use for (const flow of Object.values(bindEvents))",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8738025a_c80e902a",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 252,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "I think this would actually be easier to read without using some().\nIs it possible for SurfaceAggregation to happen without all the other steps? If not, then this can just be if (!flow.SurfaceAggregation) continue;\nIf it is possible for SurfaceAggregation to happen without all the other steps, then I think this would still be easier to read as\nif (!flow.IssueBeginFrame || !flow.ReceiveBeginFrame || !flow.SubmitCompositorFrame || !flow.SurfaceAggregation) {\n  continue;\n}",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "100512ce_b389b262",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 255,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "I\u0027d recommend creating the Histograms before this loop, and calling Histogram.addSample here instead of building arrays of numbers. That will make it easier to eventually add Breakdowns and RelatedEventSets if you want.",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec45677e_0abf5013",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "These description strings may be duplicated several times in telemetry and results.html files, and concise is usually better anyway.\nWhat is \"the client\"?\nDoes this one measurement include both IPC latency and task queue time? Would it be possible or useful to split them?\nMaybe something like this? \u0027Latency from display compositor to begin frame message, includes IPC latency and task queue time\u0027",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e54685_99830e10",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 275,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Is \"new content\" always a CompositorFrame? If so, just say that. If not, then use \"e.g.\" instead of \"i.e.\".\nWhat is \"client\"?\nMaybe something like this? \u0027Latency from begin frame message to CompositorFrame Submit\u0027\nI\u0027m not sure if that really adds much more context than the histogram name already provides, so feel free to omit the description.",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1231c0d5_81bb1d2c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Recommend trying to edit this description down, too :-)",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "785253d4_86926512",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 6
      },
      "lineNbr": 285,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-07-25T18:59:57Z",
      "side": 1,
      "message": "Would it be possible/useful to split the IPC latency, task queue time, and processing into separate Histograms?",
      "revId": "92c22d9d270a8f053508475f3270c154c2773e25",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}