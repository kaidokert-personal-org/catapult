#!/usr/bin/python
# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import re
import os
import shutil
import subprocess
import sys
import tempfile
import time


def _AddToPathIfNeeded(path):
  if path not in sys.path:
    sys.path.insert(0, path)

NODE_VULCANIZE = os.path.abspath(os.path.join(
  os.path.dirname(__file__), '..', '..',
  'common/node_runner/node_runner/node_modules/vulcanize/bin/vulcanize'))


def VulcanizeIndex(temp_dir):
  vulcanized_html = os.path.join(temp_dir, 'index.vulcanized.html')
  vulcanized = subprocess.check_output([
    NODE_VULCANIZE, '--strip-comments', '--inline-scripts', '-p', 'dashboard/',
    'dashboard/spa/index.html',
  ])
  #vulcanized = re.sub(r'(\s*\/\/[^\n]*?(?=\n))', '', vulcanized, flags=re.DOTALL)
  #vulcanized = re.sub(r'(\/\*.*?\*\/\n?)', '', vulcanized, flags=re.DOTALL)
  vulcanized = re.sub(r'(\<!--.*?--\>)', '', vulcanized, flags=re.DOTALL)
  vulcanized = re.sub(r'\n +', '\n', vulcanized)
  vulcanized = re.sub(r'\n+', '\n', vulcanized)
  now = time.time() * 1000
  vulcanized += '<script>VULCANIZED_TIMESTAMP = new Date(%d);</script>' % now
  open(vulcanized_html, 'w').write(vulcanized)
  print 'vulcanized', time.strftime(
      '%Y-%m-%d %H:%M:%S', time.gmtime((now / 1000) - (60 * 60 * 7)))
  return vulcanized_html


def Main():
  dashboard_path = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
  _AddToPathIfNeeded(dashboard_path)
  import dashboard

  catapult_path = os.path.dirname(dashboard_path)
  _AddToPathIfNeeded(catapult_path)

  tracing_path = os.path.join(catapult_path, 'tracing')
  _AddToPathIfNeeded(tracing_path)
  from tracing_build import vulcanize_histograms_viewer

  temp_dir = tempfile.mkdtemp()
  viewer_dir_path = os.path.join(temp_dir, 'vulcanized_histograms_viewer')
  viewer_html_path = os.path.join(viewer_dir_path, 'vulcanized_histograms_viewer.html')
  os.mkdir(viewer_dir_path)
  with open(viewer_html_path, 'w') as f:
    s = vulcanize_histograms_viewer.VulcanizeHistogramsViewer()
    f.write(s.encode('utf-8'))

  vulcanized_html = VulcanizeIndex(temp_dir)

  deployment_paths = dashboard.PathsForDeployment() + [
    viewer_dir_path, vulcanized_html,
  ]
  from catapult_build import appengine_deploy
  appengine_deploy.Deploy(deployment_paths, ['v2spa.yaml'], 'v2spa')

  try:
    shutil.rmtree(temp_dir)
  except OSError as e:
    logging.error('Error cleaning up temp dir %s: %s', temp_dir, e)


if __name__ == '__main__':
  Main()
