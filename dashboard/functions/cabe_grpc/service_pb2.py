# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

import analysis_pb2 as analysis__pb2
import spec_pb2 as spec__pb2

DESCRIPTOR = _descriptor.FileDescriptor(
    name='service.proto',
    package='cabe.proto',
    syntax='proto3',
    serialized_pb=_b(
        '\n\rservice.proto\x12\ncabe.proto\x1a\x0e\x61nalysis.proto\x1a\nspec.proto\"b\n\x12GetAnalysisRequest\x12\x17\n\x0fpinpoint_job_id\x18\x01 \x01(\t\x12\x33\n\x0f\x65xperiment_spec\x18\x02 \x01(\x0b\x32\x1a.cabe.proto.ExperimentSpec\"\x80\x01\n\x13GetAnalysisResponse\x12+\n\x07results\x18\x01 \x03(\x0b\x32\x1a.cabe.proto.AnalysisResult\x12<\n\x18inferred_experiment_spec\x18\x02 \x01(\x0b\x32\x1a.cabe.proto.ExperimentSpec2\\\n\x08\x41nalysis\x12P\n\x0bGetAnalysis\x12\x1e.cabe.proto.GetAnalysisRequest\x1a\x1f.cabe.proto.GetAnalysisResponse\"\x00\x42!Z\x1fgo.skia.org/infra/cabe/go/protob\x06proto3'
    ),
    dependencies=[
        analysis__pb2.DESCRIPTOR,
        spec__pb2.DESCRIPTOR,
    ])

_GETANALYSISREQUEST = _descriptor.Descriptor(
    name='GetAnalysisRequest',
    full_name='cabe.proto.GetAnalysisRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='pinpoint_job_id',
            full_name='cabe.proto.GetAnalysisRequest.pinpoint_job_id',
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode('utf-8'),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='experiment_spec',
            full_name='cabe.proto.GetAnalysisRequest.experiment_spec',
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=57,
    serialized_end=155,
)

_GETANALYSISRESPONSE = _descriptor.Descriptor(
    name='GetAnalysisResponse',
    full_name='cabe.proto.GetAnalysisResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='results',
            full_name='cabe.proto.GetAnalysisResponse.results',
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='inferred_experiment_spec',
            full_name='cabe.proto.GetAnalysisResponse.inferred_experiment_spec',
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
            file=DESCRIPTOR),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[],
    serialized_start=158,
    serialized_end=286,
)

_GETANALYSISREQUEST.fields_by_name[
    'experiment_spec'].message_type = spec__pb2._EXPERIMENTSPEC
_GETANALYSISRESPONSE.fields_by_name[
    'results'].message_type = analysis__pb2._ANALYSISRESULT
_GETANALYSISRESPONSE.fields_by_name[
    'inferred_experiment_spec'].message_type = spec__pb2._EXPERIMENTSPEC
DESCRIPTOR.message_types_by_name['GetAnalysisRequest'] = _GETANALYSISREQUEST
DESCRIPTOR.message_types_by_name['GetAnalysisResponse'] = _GETANALYSISRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetAnalysisRequest = _reflection.GeneratedProtocolMessageType(
    'GetAnalysisRequest',
    (_message.Message,),
    dict(
        DESCRIPTOR=_GETANALYSISREQUEST,
        __module__='service_pb2'
        # @@protoc_insertion_point(class_scope:cabe.proto.GetAnalysisRequest)
    ))
_sym_db.RegisterMessage(GetAnalysisRequest)

GetAnalysisResponse = _reflection.GeneratedProtocolMessageType(
    'GetAnalysisResponse',
    (_message.Message,),
    dict(
        DESCRIPTOR=_GETANALYSISRESPONSE,
        __module__='service_pb2'
        # @@protoc_insertion_point(class_scope:cabe.proto.GetAnalysisResponse)
    ))
_sym_db.RegisterMessage(GetAnalysisResponse)

DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(
    descriptor_pb2.FileOptions(), _b('Z\037go.skia.org/infra/cabe/go/proto'))

_ANALYSIS = _descriptor.ServiceDescriptor(
    name='Analysis',
    full_name='cabe.proto.Analysis',
    file=DESCRIPTOR,
    index=0,
    options=None,
    serialized_start=288,
    serialized_end=380,
    methods=[
        _descriptor.MethodDescriptor(
            name='GetAnalysis',
            full_name='cabe.proto.Analysis.GetAnalysis',
            index=0,
            containing_service=None,
            input_type=_GETANALYSISREQUEST,
            output_type=_GETANALYSISRESPONSE,
            options=None,
        ),
    ])
_sym_db.RegisterServiceDescriptor(_ANALYSIS)

DESCRIPTOR.services_by_name['Analysis'] = _ANALYSIS

# @@protoc_insertion_point(module_scope)
