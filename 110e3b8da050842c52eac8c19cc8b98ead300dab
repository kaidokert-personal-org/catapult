{
  "comments": [
    {
      "key": {
        "uuid": "f3a761db_76739fb5",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "This feels like a strange API to me, but after almost an hour of researching, I\u0027m astounded to find nothing better, so lgtm",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bb0eec7_20577e3b",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Just a thought: at some point in the future, it might be nifty to make this so that it always prints the current %age to a single line without spamming the command line with multiple lines, e.g. https://stackoverflow.com/questions/5598181/python-multiple-prints-on-the-same-line\n\nI\u0027ve seen other progress bars that work this way and it\u0027s definitely a nice experience. Seems pretty easy to do, too\n\nDefinitely doesn\u0027t have to be a v1 thing if you don\u0027t want it to be, though :-)",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "678b5ed0_debf26bd",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "just wondering: did you try playing with the chunksize? the documentation for imap seems to suggest that it might make a difference\n\nhttps://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.imap",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 63,
        "endChar": 62
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abda2cd8_c3bfb0e4",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Just a thought: at some point in the future, we might want to migrate all of these to \"import pandas as pd\". I\u0027ve never seen pandas not referenced as pd",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3a31ad_707464d2",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Should we be using an in-memory database here (\":memory:\")? It seems logical to avoid doing disk I/O in a unit test if possible. Might be some constraint that I\u0027m missing, though.",
      "range": {
        "startLine": 33,
        "startChar": 50,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}