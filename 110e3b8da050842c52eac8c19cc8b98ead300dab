{
  "comments": [
    {
      "key": {
        "uuid": "f3a761db_76739fb5",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "This feels like a strange API to me, but after almost an hour of researching, I\u0027m astounded to find nothing better, so lgtm",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9333bb_60b908d9",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-14T11:31:51Z",
      "side": 1,
      "message": "Yup, agree. It\u0027s awkward because there is no way (in a worker) for the \"init\" function to communicate with the \"process\" function other than through the global space. So, this was the least awful and most self-contained way I could come up with in order to tie the two together.",
      "parentUuid": "f3a761db_76739fb5",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bb0eec7_20577e3b",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Just a thought: at some point in the future, it might be nifty to make this so that it always prints the current %age to a single line without spamming the command line with multiple lines, e.g. https://stackoverflow.com/questions/5598181/python-multiple-prints-on-the-same-line\n\nI\u0027ve seen other progress bars that work this way and it\u0027s definitely a nice experience. Seems pretty easy to do, too\n\nDefinitely doesn\u0027t have to be a v1 thing if you don\u0027t want it to be, though :-)",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bfdf546_69af597d",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-14T11:31:51Z",
      "side": 1,
      "message": "Totally! I left a comment earlier but probably got lost. This is just a v1 on top of which we can improve later. :)",
      "parentUuid": "1bb0eec7_20577e3b",
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "678b5ed0_debf26bd",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "just wondering: did you try playing with the chunksize? the documentation for imap seems to suggest that it might make a difference\n\nhttps://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.imap",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 63,
        "endChar": 62
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9b17b92_6d4ced7a",
        "filename": "experimental/soundwave/soundwave/worker_pool.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-14T11:31:51Z",
      "side": 1,
      "message": "I did play with it. But didn\u0027t really changed things as much for our use case. As far as I understand what it does is to send items in larger batches for processing to each worker (rather than one at a time). So in theory you reduce the time spent on inter-process communication.\n\nThis might make sense if each call to \"process\" finishes really quickly, so your total time spent is dominated by that inter-process message sending stuff. But in our case each call to process an item (fetch an entire timeseries and store in db) takes a second or two, and that\u0027s what dominates the total time.\n\nIn fact a larger chunksize tended to make things slightly _less_ efficient as they now need to finish whole chunks before being able to get more work (so they don\u0027t balance work among themselves as efficiently).",
      "parentUuid": "678b5ed0_debf26bd",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 63,
        "endChar": 62
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abda2cd8_c3bfb0e4",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Just a thought: at some point in the future, we might want to migrate all of these to \"import pandas as pd\". I\u0027ve never seen pandas not referenced as pd",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f457bca_46a56251",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-14T11:31:51Z",
      "side": 1,
      "message": "That would go against the style-guide. My thought is that \"import pandas as pd\" is OK for colab, where you\u0027re going to be typing \"pd\" a lot so saving keystrokes makes sense; but fore code in modules we\u0027re actually checking into the repo it\u0027s fine to spell out the whole thing.",
      "parentUuid": "abda2cd8_c3bfb0e4",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b3a31ad_707464d2",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1128909
      },
      "writtenOn": "2018-05-11T20:15:50Z",
      "side": 1,
      "message": "Should we be using an in-memory database here (\":memory:\")? It seems logical to avoid doing disk I/O in a unit test if possible. Might be some constraint that I\u0027m missing, though.",
      "range": {
        "startLine": 33,
        "startChar": 50,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef553b9_c3d92581",
        "filename": "experimental/soundwave/soundwave/worker_pool_test.py",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-05-14T11:31:51Z",
      "side": 1,
      "message": "Yep, the constraint is that SQLite concurrency model depends on file locks. In general, from what I could gather reading around, it\u0027s not advisable to create a connection on one process/thread and then use that one on another. But it\u0027s fine for multiple threads/processes to each open their own connection to the db.",
      "parentUuid": "8b3a31ad_707464d2",
      "range": {
        "startLine": 33,
        "startChar": 50,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "110e3b8da050842c52eac8c19cc8b98ead300dab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}