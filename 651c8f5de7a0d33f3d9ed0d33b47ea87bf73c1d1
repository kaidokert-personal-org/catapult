{
  "comments": [
    {
      "key": {
        "uuid": "27c9fb8d_94cd753e",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:37:42Z",
      "side": 1,
      "message": "To try out run this with:\n./telemetry/examples/run_benchmark --browser android-chrome --chrome-root $SRC android_go.example",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "064bcb7c_6af10076",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:37:42Z",
      "side": 1,
      "message": "This bit is important. If we also include the URL on the second browser launch, then we end up with two open tabs (from the first and second launch) and, on the second launch, we seem to have troubles communicating with the tab from the first one during the \"stop tracing\" flow.\n\nEgor, not sure how you envision the later Chrome launches to happen, and how the page is going to be reloaded?",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a23d9b29_d9faa28b",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-06-18T12:08:05Z",
      "side": 1,
      "message": "In my model of the world we should not communicate to the first tab after CloseBrowser(). We grabbed the trace just before closing (FlushTracing), will carry it until trace merge time (StopTracing AFAICT), that should be enough for grabbing all benchmark results, no? Tabs accumulating should not be a problem - on start of a new browser process those tabs are not restored/reloaded (with a sole exception of Main intent AFAIR), and I *think* having many of tabs in the switcher would not slow anything down on start. We can drop tabs at the beginning of the test to avoid accumulating app state and get even more reproducibility.",
      "parentUuid": "064bcb7c_6af10076",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fdfa5e_fa149cf8",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-06-18T12:54:42Z",
      "side": 1,
      "message": "What is the trouble communicating with the tab from the first one? I agree with pasko@ that it\u0027s weird that the story author need to know about this kind of issue to engineer their stories around it. \n\nI would prefer we fix the problem with communicating with the tab from the first one during the \"stop tracing\" flow instead.",
      "parentUuid": "a23d9b29_d9faa28b",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34b4c395_d26039f3",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T13:12:41Z",
      "side": 1,
      "message": "There are some operations that Telemetry wants to broadcast to all tabs during StopChromeTracing, e.g. [1] where each \"context\" is a \"tab\". There we iterate over all tabs, so both of them show up, but the one from the first iteration does not appear to respond and requests sent to its websocket time out. I agree with Ned that this is a bug, and should be fixed.\n\nAt the moment, anyway, we have this workaround, where things work as long as we only keep a single tab open. Egor, do you think it\u0027s still possible to measure startup under the conditions you care about with these restrictions? If so I can lad a CL (close to what Ned had) to unblock you; while this other bug is being investigated. Otherwise I\u0027ll need a bit more time.\n\n[1]: https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/backends/chrome_inspector/devtools_client_backend.py?rcl\u003df3ce003c2baaf3b2aba669681f832139efe5d773\u0026l\u003d439",
      "parentUuid": "74fdfa5e_fa149cf8",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d99a5f4e_f473e226",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-06-18T14:10:49Z",
      "side": 1,
      "message": "a quick unblocking workaround sounds great to me, much thanks! I wrote another question in a group chat. Nothing secret, just a way to reduce latency for us.",
      "parentUuid": "34b4c395_d26039f3",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e13169_b7863c00",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:37:42Z",
      "side": 1,
      "message": "Ideally I want to \"close\" the browser at the end of this loop; but, for now, \"StopTracing\" needs the browser to still be open otherwise it fails with the ChromeClockSyncError when trying to add the clock sync on the (now gone) devtools client.\n\nI regard this is something that could be fixed.",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82edde6e_43533ad2",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-06-18T11:42:33Z",
      "side": 1,
      "message": "Ah... this was what blocking me as well. I was thinking that we can either add a clock sync in FlushTracing() (need to check that clock sync is implemented properly in tracing/.. and can handle multi clock sync records) or browser.Close(..) will signal back to Chrome tracing agent that it need to issue a specific clock sync only for the browser that is about to close.",
      "parentUuid": "c4e13169_b7863c00",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3188c2f2_2bf54afd",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:48:52Z",
      "side": 1,
      "message": "FlushTracing already does issue the clock sync: https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/platform/tracing_controller_backend.py?rcl\u003df3ce003c2baaf3b2aba669681f832139efe5d773\u0026l\u003d167\n\nIndeed we need to make sure that traces with multiple syncs work correctly.",
      "parentUuid": "82edde6e_43533ad2",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaa00723_3ce108d1",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-06-18T12:08:05Z",
      "side": 1,
      "message": "good luck with this, folks. I never envisioned this because FlushTracing looked scary and I avoided it in favor of browser.Close() doing StopTracing, as you know :)",
      "parentUuid": "82edde6e_43533ad2",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f798280_4727b8c2",
        "filename": "telemetry/examples/benchmarks/android_go_benchmark.py",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:37:42Z",
      "side": 1,
      "message": "Just run this new story we\u0027re trying to write.",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2275f776_55b24401",
        "filename": "telemetry/telemetry/internal/backends/chrome/chrome_browser_backend.py",
        "patchSetId": 1
      },
      "lineNbr": 265,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-06-18T11:37:42Z",
      "side": 1,
      "message": "This is the original patch from Ned. And these are the traces we get.\n\nwithout patch:\nhttps://perezju.users.x20web.corp.google.com/www/cr849703/ps1/go_story_only_last_browser.html\n\nwith patch:\nhttps://perezju.users.x20web.corp.google.com/www/cr849703/ps1/go_story_two_browsers.html",
      "revId": "651c8f5de7a0d33f3d9ed0d33b47ea87bf73c1d1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}