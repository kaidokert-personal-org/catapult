{
  "comments": [
    {
      "key": {
        "uuid": "a0442541_488d7fd9",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "Please separate the split_apks logic into a separate function, maybe something like ToSplitHelper",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca5b2cb_94e92689",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0442541_488d7fd9",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ef57e12_deef38ba",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "throughout, please update the exception types you\u0027re raising. devil exceptions should generally inherit from base_error.BaseError: https://codesearch.chromium.org/chromium/src/third_party/catapult/devil/devil/base_error.py?rcl\u003d97d3ec761eb6e3b605d952af5a3e52a1e5e8086c\u0026l\u003d6\n\n(here, either directly or via one of the existing exceptions in device_errors.)",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09b06782_4dab6c15",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Added ApkHelperError subclassing base_error.BaseError and used that in this file.",
      "parentUuid": "3ef57e12_deef38ba",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09d92ae6_6c11314d",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "Please remove this. It\u0027s going to be noise to the vast majority of people who would see it.",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab9d289_3ee80d79",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09d92ae6_6c11314d",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6123a62e_7d690f28",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "while you\u0027re here, same comment as above re exception type",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91d596b0_c170d5cf",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6123a62e_7d690f28",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665318f5_2b4fed22",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 395,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "I think this should be renamed; having non-split APKs w/ a \"GetSplits\" method seems misleading.",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98e3609b_d5a7f510",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 395,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Makes sense. Renamed to GetApkPaths.",
      "parentUuid": "665318f5_2b4fed22",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b165e07e_4276f07f",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "please raise a https://docs.python.org/3/library/exceptions.html#NotImplementedError",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9931e6ea_c0d80ba7",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b165e07e_4276f07f",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aa9d261_eaf7ca22",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "same",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86928e8e_a431ddf4",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2aa9d261_eaf7ca22",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae726972_e91435eb",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 474,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-16T15:13:05Z",
      "side": 1,
      "message": "jbudorick@, this will bloat the machine pretty quickly. Is there a temp folder that persists throughout the whole test (or whatever session catapult is running in) and gets cleaned up after?",
      "range": {
        "startLine": 474,
        "startChar": 6,
        "endLine": 474,
        "endChar": 38
      },
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8d5e86f_3d1478ac",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 474,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "We don\u0027t have a single such directory. For a case like this, we would typically wind up having the class implement __enter__ and __exit__. Not immediately sure whether that\u0027s practical here.",
      "parentUuid": "ae726972_e91435eb",
      "range": {
        "startLine": 474,
        "startChar": 6,
        "endLine": 474,
        "endChar": 38
      },
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a64ac1ac_b37042af",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 474,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "I think that could work for GetSplits (now GetApkPaths). But for path / GetBaseApkPath we would need some more refactor at the calling sites outside this repository. We could change the semantics of path so that it returns the path to base install artifact (APKS archive or install script for bundles).",
      "parentUuid": "e8d5e86f_3d1478ac",
      "range": {
        "startLine": 474,
        "startChar": 6,
        "endLine": 474,
        "endChar": 38
      },
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842ea96a_037cfcd4",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 489,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "re my earlier comment about path vs GetBaseApkPath -- could we call this logic at initialization and keep .path?",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24042300_c7f5013f",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 489,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "I didn\u0027t want to do a lot of work in the constructor as this is kind of an anti-pattern. I\u0027m happy to make this change though if you think it\u0027s better.",
      "parentUuid": "842ea96a_037cfcd4",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4767d802_7c6c77e7",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 498,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "I\u0027m confused by this, _GetSplitsDir, and _ExtractSplits. Can you elaborate a bit more on what you\u0027re trying to do?",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b228e1f_cb40e34b",
        "filename": "devil/devil/android/apk_helper.py",
        "patchSetId": 2
      },
      "lineNbr": 498,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "In the case of bundles we will get an APKS archive, which is a zip of APKs. To make this compatible with the rest of devil I want to unzip the APKS archive and return the paths to the unzipped APKs that should be installed. To figure out what APKs to install we will invoke bundletool that extracts the required APKs from an APKS archive. To that end:\n\n- _GetSplitsDir unzips the APKS archive and stores the path to the unzipped directory.\n- _ExtractSplits invokes bundletool to extract the subset of APKs to install into a temp folder and returns the extracted paths.\n- GetSplits translates the extracted paths from _ExtractSplits to the folder created in _GetSplitsDir.\n\nI want to cache the APKs extracted from _GetSplitsDir so that we don\u0027t have to re-unzip every time we want to look at an APK.",
      "parentUuid": "4767d802_7c6c77e7",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f09a4a81_d80a3fe9",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2552,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "This seems possibly brittle. Could we instead just return the contents of any feature: lines in the output and ignore other lines?",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e886a1a_4ddd132b",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2552,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f09a4a81_d80a3fe9",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c917522_dd798905",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2553,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "Same comment re exceptions. This should be a CommandFailedError.",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7309c560_b86173b7",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2553,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "Exception gone.",
      "parentUuid": "3c917522_dd798905",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75b6ab6e_65ab0dab",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2554,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-08-16T15:53:06Z",
      "side": 1,
      "message": "nit: prefer to use double-quotes for strings containing single quotes over escaping",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88e4d183_8a4626c7",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2554,
      "author": {
        "id": 1213279
      },
      "writtenOn": "2019-08-19T16:06:04Z",
      "side": 1,
      "message": "String gone.",
      "parentUuid": "75b6ab6e_65ab0dab",
      "revId": "f807d0b0e2e5c580b51a54df958b5f5946be5942",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}