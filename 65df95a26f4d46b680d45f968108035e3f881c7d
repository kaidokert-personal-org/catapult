{
  "comments": [
    {
      "key": {
        "uuid": "2ccb3e93_028e0635",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "Is it worth the additional complexity of letting browser tests override the GetFlakyRetryCount method? It\u0027s fine in my opinion to only allow configuring this via a command line option and/or as arguments passed to the typ runner when it\u0027s created.",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f6233b_cf5f80cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "I agree with getting rid of GetFlakyRetryCount and doing the simpler approach of providing a command line option to Typ to specify flaky retry count.",
      "parentUuid": "2ccb3e93_028e0635",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7734ec3c_d52836db",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "Per other comments in the CL, I recommend removing Get/SetFlakyRetryCount.",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28c43546_df895054",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7734ec3c_d52836db",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "251b79ce_fac16cf8",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "Is it really a good idea to sort these? I would intuitively expect the results to be in chronological order of the tests\u0027 runs, rather than alphabetical order. (It\u0027s fine with me if they have to be sorted for some reason, for example to make the unit tests easier to read and write.)",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 47
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39b9ae37_6c8000c9",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "The r.expected is a set of expectations from the expectations file for a given test. Multiple expectations in r.expected set does not follow the chronological order of tests runs, it follows some arbitrary order defined by the set data structure. This order could change in the future. I sort them so I can get a deterministic output for unit tests.",
      "parentUuid": "251b79ce_fac16cf8",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 47
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53f7c9be_f3b7c76c",
        "filename": "third_party/typ/typ/json_results.py",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-02-01T00:38:12Z",
      "side": 1,
      "message": "I see. Sounds good. Thanks for the explanation.",
      "parentUuid": "39b9ae37_6c8000c9",
      "range": {
        "startLine": 198,
        "startChar": 41,
        "endLine": 198,
        "endChar": 47
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdbf87fe_a99ca32d",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-02-06T02:29:00Z",
      "side": 1,
      "message": "These test_name / test_class changes are unrelated to the flakiness handling, right, and should be removed?",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a2a029b_bcd61e3d",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-07T21:50:13Z",
      "side": 1,
      "message": "Yes I plan on removing the test_class change. I was intending to add the test_short_name argument so that we can use the test method name with out the full class path in the test expectations file. \n\nso that we can go from\n\ncrbug.com/123 [foo] gpu_tests.webgl_conformance_integration_test.WebGLConfromanceIntegrationTest.WebglExtension_WEBGL_compressed_texture_astc [Fail]\ncrbug.com/123 [foo] \ngpu_tests.webgl_conformance_integration_test.WebGLConfromanceIntegrationTest.WebglExtension_WEBGL_compressed_texture_pvrtc [Fail]\n\nto\n\ncrbug.com/123 [foo] WebglExtension_WEBGL_compressed_texture_astc [Fail]\ncrbug.com/123 [foo] WebglExtension_WEBGL_compressed_texture_pvrtc [Fail]",
      "parentUuid": "fdbf87fe_a99ca32d",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f0b440a_d375ef13",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 7
      },
      "lineNbr": 610,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s worth the added complexity to support GetFlakyRetryCount / SetFlakyRetryCount. Just having the retry_limit_for_flaky_tests seems like enough configurability to me.",
      "range": {
        "startLine": 610,
        "startChar": 43,
        "endLine": 610,
        "endChar": 61
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c02966_0e5ca739",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 7
      },
      "lineNbr": 610,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "I agree. I will get rid of them and just use the command line option --retry-limit-for-flaky-tests for passing the flaky retry limit to Typ",
      "parentUuid": "2f0b440a_d375ef13",
      "range": {
        "startLine": 610,
        "startChar": 43,
        "endLine": 610,
        "endChar": 61
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b39ed2f9_26bbb5ca",
        "filename": "third_party/typ/typ/tests/main_test.py",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "Please undo whitespace-only changes.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc8100eb_01bd4ec4",
        "filename": "third_party/typ/typ/tests/main_test.py",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b39ed2f9_26bbb5ca",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1256fda0_76dd8fca",
        "filename": "third_party/typ/typ/tests/main_test.py",
        "patchSetId": 7
      },
      "lineNbr": 855,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-01-31T23:15:52Z",
      "side": 1,
      "message": "I wish this and the other tests could be written a little more tersely, but overall your test coverage looks good.",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4b16fc8_11485d39",
        "filename": "third_party/typ/typ/tests/main_test.py",
        "patchSetId": 7
      },
      "lineNbr": 855,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-01T00:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1256fda0_76dd8fca",
      "revId": "65df95a26f4d46b680d45f968108035e3f881c7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}