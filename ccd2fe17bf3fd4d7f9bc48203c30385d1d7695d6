{
  "comments": [
    {
      "key": {
        "uuid": "349a55b3_4c1e4768",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 47,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-25T08:41:23Z",
      "side": 1,
      "message": "Are we sure this is the right approach? This just seems to be moving the cpu that was burned on the server now to the client. Waiting 2 min for the report to fully load does not sound reasonable.\n\nWhy can\u0027t we have a periodic job on the server precomputing the summary metrics needed for reports; so we are then able to serve them immediately when trying to view the page with the report?\n\nThis probably needs a design doc before more coding, and close collaboration with +yfriedman, +benmason and myself; as this tool will be central to a potential new \"system health rotation\" we\u0027re hoping to bootstrap.",
      "revId": "ccd2fe17bf3fd4d7f9bc48203c30385d1d7695d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c50656_00cff8d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 47,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2019-06-25T21:41:40Z",
      "side": 1,
      "message": "I started drafting a design doc and scheduled a chat tomorrow morning.\n\nBriefly, there\u0027s a strong concern about the cost of the dashboard. A cron to collect all the data for each report for each revision would certainly speed up fetching it, but users probably wouldn\u0027t fetch more than a small fraction of the precomputed data, so the CPU and storage space would go to waste.\nIf you\u0027re fetching reports with this client-side ReportFetcher regularly, then your cache won\u0027t be completely cold, so loading the full data should take somewhat less than a minute. Also, Periodic Background Sync could fetch new data nightly when that API launches.\n\nI had thought that these large health reports would be generated by one person closer to once every few weeks, so extreme responsiveness wasn\u0027t necessary. If they\u0027ll be generated daily by many users, then maybe some precomputation is warranted.\n\nLet\u0027s chat more tomorrow.",
      "parentUuid": "349a55b3_4c1e4768",
      "revId": "ccd2fe17bf3fd4d7f9bc48203c30385d1d7695d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}