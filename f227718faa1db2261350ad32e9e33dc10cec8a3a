{
  "comments": [
    {
      "key": {
        "uuid": "9224103d_45526a3c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-02-06T02:18:30Z",
      "side": 1,
      "message": "I generally would expect any setup that needed to be done to be done in one of the setup fixtures (the setup_fn on the Runner object, or the setUpClass or setUp methods of the test classes themselves), rather than being done outside of the test run. \n\nI *think* that if you were to do that, you wouldn\u0027t need the changes in Host?",
      "revId": "f227718faa1db2261350ad32e9e33dc10cec8a3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff8bfd9_d5e04088",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2020-02-13T00:13:37Z",
      "side": 1,
      "message": "Sorry for resurrecting this after over a year. I was wondering if there\u0027s a recommended way for the setup_fn to get access to commandline arguments. Specifically the setup_fn needs to know the verbosity to setup the logging basicConfig, so it needs access to runner.args.verbose. I was doing https://chromium-review.googlesource.com/c/catapult/+/2053063 when I realized it would hit this issue. I see that setup_fn gets a typ.runner._Child object. Presumably I could figure out how to get access to args.verbose from there, but it feels like the wrong solution since  the object starts with an underscore.",
      "parentUuid": "9224103d_45526a3c",
      "revId": "f227718faa1db2261350ad32e9e33dc10cec8a3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d20a89_5ec61cb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2020-02-13T21:47:31Z",
      "side": 1,
      "message": "Sure would be nice if there was more documentation for typ, wouldn\u0027t it? :(.\n\n`setup_fn` and `teardown_fn` both take a `context` argument.\n\nThe context argument passed to setup_fn can be an almost-arbitrary python object (it must be picklable); you set runner.context wherever you set runner.setup_fn.\n\nsetup_fn can (must?) return an object which will then be passed to teardown_fn(); this can either be `None` (if teardown doesn\u0027t need an argument), or the same `context` value passed to `setup_fn`, or a modified or different value (which must also be picklable).\n\nSo, in your case, for example, you could set `runner.context` to `runner.args`.",
      "parentUuid": "3ff8bfd9_d5e04088",
      "revId": "f227718faa1db2261350ad32e9e33dc10cec8a3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dc21548_e9a67da5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-02-06T02:18:30Z",
      "side": 1,
      "message": "Yes, this is the right place to submit the patch; catapult is the current source of truth for TYP, and I need to update the github repo to reflect that ...",
      "revId": "f227718faa1db2261350ad32e9e33dc10cec8a3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8f990b_aa35af19",
        "filename": "third_party/typ/typ/host.py",
        "patchSetId": 7
      },
      "lineNbr": 251,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-02-06T02:18:30Z",
      "side": 1,
      "message": "If this change is actually needed, use .items() here; .iteritems() isn\u0027t Python3-compatible.",
      "revId": "f227718faa1db2261350ad32e9e33dc10cec8a3a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}