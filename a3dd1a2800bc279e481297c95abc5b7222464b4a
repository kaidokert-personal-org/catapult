{
  "comments": [
    {
      "key": {
        "uuid": "e5bc5d61_b9ba3052",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2018-03-02T12:26:37Z",
      "side": 1,
      "message": "I changed this to findLastEventStartingOnOrBeforeTimestamp instead of findLastEventStartingBeforeTimestamp for cases where the last event at the end of the trace is fmpEvent. I don\u0027t think it should matter in any real cases, but there is a test which fails otherwise. If this isn\u0027t right then I will fix the test instead.",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04556cc4_a922847a",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-05T22:19:14Z",
      "side": 1,
      "message": "This is fine :) Thanks!",
      "parentUuid": "e5bc5d61_b9ba3052",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "625dd858_8a15edf5",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2018-03-06T12:41:02Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "04556cc4_a922847a",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86f009a4_85364464",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-05T22:19:14Z",
      "side": 1,
      "message": "This comment should be right above the IGNORE_URL_LIST.includes(url) line.",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12733664_450e1a1f",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2018-03-06T12:41:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86f009a4_85364464",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74652e4c_ca51be6b",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-05T22:19:14Z",
      "side": 1,
      "message": "Calculating FMP candidate inside addSamples lgtm :) \n\nCan we keep the old iteration style of iterating up to length - 1, and using currNavigation and nextNavigation? I\u0027m finding getting the URL in one iteration and then actually using that URL in the next iteration using prevUrl a bit difficult to follow. If that results in unseemly duplicate code for URL computation, you can make a getURLforNavigation function to tidy things up.",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9d9d0d2_6d94fbc7",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2018-03-06T12:41:02Z",
      "side": 1,
      "message": "I changed it a bit to make it less confusing. let me know if it looks any better. The problem with using the earlier approach of currNavigation and nextNavigation is that for getting to the nextNavigation we may have to skip over multiple blank events and to do that we would have already computed the url. Also, we would have skipped over multiple events which would be revisited when we update the index (or we should update the loop index inside the loop which is even more confusing). I don\u0027t think it will be a big impact on performance. So, I could do that if you think it is still confusing this way, but may involve some recomputations.",
      "parentUuid": "74652e4c_ca51be6b",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9f81b78_0a4022ab",
        "filename": "tracing/tracing/importer/find_load_expectations.html",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-06T13:54:05Z",
      "side": 1,
      "message": "Ah I see how the ignore url list check complicates things now. Ok this lgtm to me.",
      "parentUuid": "c9d9d0d2_6d94fbc7",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9552edc4_3132231a",
        "filename": "tracing/tracing/metrics/system_health/expected_queueing_time_metric_test.html",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2018-03-02T12:26:37Z",
      "side": 1,
      "message": "I changed this, because of my comment in find_load_expectations.",
      "revId": "a3dd1a2800bc279e481297c95abc5b7222464b4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}