{
  "comments": [
    {
      "key": {
        "uuid": "e8163951_6cb920a4",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2018-10-15T22:00:53Z",
      "side": 1,
      "message": "Does this need to be added to an argument parser (above, perhaps)?",
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9bc04c6_3f8bb32a",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-10-15T22:11:21Z",
      "side": 1,
      "message": "We don\u0027t need to do this because we reuse the running args of typ.ArgumentParser (line 186)",
      "parentUuid": "e8163951_6cb920a4",
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8957def8_72edf0fb",
        "filename": "third_party/typ/typ/arg_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1157909
      },
      "writtenOn": "2018-10-16T20:48:41Z",
      "side": 1,
      "message": "Question about the flag name, will there be another change at somewhere else (maybe in trampoline scripts?) to add aliases Findit will use? For example for this flag, Findit will use \u0027--isolated-script-test-repeat\u0027.",
      "range": {
        "startLine": 147,
        "startChar": 39,
        "endLine": 147,
        "endChar": 45
      },
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04d4546b_d3f1232b",
        "filename": "third_party/typ/typ/arg_parser.py",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-10-16T20:55:06Z",
      "side": 1,
      "message": "Yes, it would be in the trampoline script (see https://chromium-review.googlesource.com/c/chromium/src/+/1281170 for example)",
      "parentUuid": "8957def8_72edf0fb",
      "range": {
        "startLine": 147,
        "startChar": 39,
        "endLine": 147,
        "endChar": 45
      },
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21775392_88b99b6a",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-10-16T20:21:55Z",
      "side": 1,
      "message": "This will end up stomping on full_results, so the \"full\" results will only be the results from the last iteration, not the union of all N iterations.\n\nAlso, I think test_set should be readonly at this point (i.e., not modified by run_tests) and so you shouldn\u0027t need the copy?",
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9dfa892_a5ae9122",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-10-16T20:30:57Z",
      "side": 1,
      "message": "Looks like results_set is what \"memorize\" the state of the results, so the full_results does turn out to be corerct.\n\nFor the test_set, the reason I make a copy is because we does mutate the test_set below (pop out test that have been run from the test, \"test_inputs.pop(0)\" at line 550). So after a single run, the test_set is empty \u0026 the next repeat run doesn\u0027t result in tests being executed. I think we have a few choices here:\n1) Make the test_set.copy() here\n2) Modify the execution code below to not pop up the test already run\n3) Change test_set to a test_list or test_dict \u0026 enable it to store duplicated instances of tests to be run\n\nLemme know which option you prefer (or any other option)",
      "parentUuid": "21775392_88b99b6a",
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef1d4c54_0888a9e1",
        "filename": "third_party/typ/typ/runner.py",
        "patchSetId": 2
      },
      "lineNbr": 476,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2018-10-16T20:21:55Z",
      "side": 1,
      "message": "You will probably want to lift the --list-only block out of this routine, else you\u0027ll get the list printed N times. I suspect that\u0027s not what we want to have happen, but maybe it is ...",
      "revId": "23c5ed71ff89c18dee3e445caa04ae9e9f03e5dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}