{
  "comments": [
    {
      "key": {
        "uuid": "9cdbb9bd_4dd5c38b",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-02-21T20:11:08Z",
      "side": 1,
      "message": "Could I suggest a rewrite?\n\n\"\"\"Subclasses can override this class method to return a list of paths to the test expectations files.\"\"\"\n\n*Please* describe how those files are referenced. Relative paths I hope? Relative to what? They can\u0027t be absolute paths because that won\u0027t work on Swarming, where the base of the path is not known.",
      "range": {
        "startLine": 189,
        "startChar": 29,
        "endLine": 189,
        "endChar": 32
      },
      "revId": "760f6ce7f5a7cebc7256f642b7059b81ae1083ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e40f5c3f_f907d4e4",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-02-21T20:17:14Z",
      "side": 1,
      "message": "I was planning on using path_util module in gpu_tests to generate an absolute path. So for instance an implementation of ExpectationsFiles in the WebglConformanceIntegrationTest class would look like\n\n  @classmethod\n  def ExpectationsFiles(cls):\n    return [os.path.join(path_util.GetGpuTestDir(), \u0027gpu_tests\u0027,\n                         \u0027expectations_files\u0027,\n                         \u0027webgl_conformance_integration_expectations.txt\u0027)]\n\nis that fine?",
      "parentUuid": "9cdbb9bd_4dd5c38b",
      "range": {
        "startLine": 189,
        "startChar": 29,
        "endLine": 189,
        "endChar": 32
      },
      "revId": "760f6ce7f5a7cebc7256f642b7059b81ae1083ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e27b8df6_88a2dcec",
        "filename": "telemetry/telemetry/testing/serially_executed_browser_test_case.py",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-02-21T21:53:20Z",
      "side": 1,
      "message": "I see. Yes, that\u0027s fine - in that case, please document that the paths must be absolute. It would be better to perhaps assert that they aren\u0027t relative, since what they would be relative to is basically undefined.",
      "parentUuid": "e40f5c3f_f907d4e4",
      "range": {
        "startLine": 189,
        "startChar": 29,
        "endLine": 189,
        "endChar": 32
      },
      "revId": "760f6ce7f5a7cebc7256f642b7059b81ae1083ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}