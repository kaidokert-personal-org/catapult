{
  "comments": [
    {
      "key": {
        "uuid": "f2120732_6896b02e",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "can you create a new file, maybe telemetry/internal/results/results_processor.py, where to move all of this trace serialization and metric computation?\n\nSuggestions for a better name welcome. The idea is that this file is what we would end up moving from catapult to chromium repo for result processing business.",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf685b58_3e9c43d8",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2120732_6896b02e",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ad00fd5_3a73b42c",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "nit: I would suggest:\n\n  parts \u003d [run.story.file_safe_name, label, ...]\n  return \u0027_\u0027.join(str(p) for p in parts if p] + \u0027.html\u0027",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f69c14b_007ecbcc",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "Yeah, thank you, it looks much nicer!",
      "parentUuid": "6ad00fd5_3a73b42c",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd07a66a_1d29845e",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "Maybe move HTML_TRACE_NAME out of the class and to a module level constant? This way there is no need to pass it as argument.",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e1eb886_d30c4291",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "I tried this, but had problems importing this constant from chart_json_output_formatter (it causes a cyclic import between these two modules).\n\nMoving this code to a new file will solve both problems though.",
      "parentUuid": "cd07a66a_1d29845e",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "515f34f5_eeab5caf",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "probably no need for label and bucket to be optional; they\u0027re always passed by all callers?",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "527ed28e_460b037c",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "515f34f5_eeab5caf",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8527847_d9dd895c",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 534,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "we still probably need here something like:\n\n  runs_with_traces \u003d list(self.IterRunsWithTraces())\n\nso you can exit early if there are no traces and use these instead of _all_page_runs when estimating the threads_count.",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8ce09c7_d7b19ab8",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 534,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8527847_d9dd895c",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5467245_dae7ed41",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 723,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "As we spoke offline, let\u0027s try to see if we can reduce the number of places where traces are serialized/uploaded.",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f8a61af_b6b4d7a0",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 723,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "There are currently three of them.\n\nOne is inside _ComputeMetricsInPool, it\u0027s there because we want to serialize traces in parallel to speed things up.\n\nThe other one is here, in PrintSummary, to obtain the trace in case there were no metrics to compute.\n\nThe third one is in PopulateHistogramSet. Perhaps we will be able to get rid of this function at some point. So far, we have to serialize trace inside it because chart_json formatter expects traces to have their URL set.",
      "parentUuid": "c5467245_dae7ed41",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e9a64f_c27ce09c",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 759,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-06-28T15:11:11Z",
      "side": 1,
      "message": "This is a bit strange to read. Maybe there should be a run.HasArtifacts(dirname) to make this clearer. You can implement that as something like\n\n   return next(self.IterArticats(dirname), None) is not None\n\nI also think the intent is a bit more explicit if you pass \u0027trace/\u0027 as the dir.",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b024cf4_4c1e7cae",
        "filename": "telemetry/telemetry/internal/results/page_test_results.py",
        "patchSetId": 1
      },
      "lineNbr": 759,
      "author": {
        "id": 1328067
      },
      "writtenOn": "2019-06-28T16:51:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2e9a64f_c27ce09c",
      "revId": "80ecbb6a2abb10e8ad2a5362bfe6202caaab581c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}