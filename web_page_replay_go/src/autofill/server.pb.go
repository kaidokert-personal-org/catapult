// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package autofill

import (
  fmt "fmt"
  proto "github.com/golang/protobuf/proto"
  math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AutofillRandomizedValue_EncodingType int32

const (
  // Reserved default value. Should never be sent over the wire.
  AutofillRandomizedValue_UNSPECIFIED_ENCODING_TYPE AutofillRandomizedValue_EncodingType = -1
  // This string encodes only one bit, bit N, for each byte.
  AutofillRandomizedValue_BIT_0 AutofillRandomizedValue_EncodingType = 0
  AutofillRandomizedValue_BIT_1 AutofillRandomizedValue_EncodingType = 1
  AutofillRandomizedValue_BIT_2 AutofillRandomizedValue_EncodingType = 2
  AutofillRandomizedValue_BIT_3 AutofillRandomizedValue_EncodingType = 3
  AutofillRandomizedValue_BIT_4 AutofillRandomizedValue_EncodingType = 4
  AutofillRandomizedValue_BIT_5 AutofillRandomizedValue_EncodingType = 5
  AutofillRandomizedValue_BIT_6 AutofillRandomizedValue_EncodingType = 6
  AutofillRandomizedValue_BIT_7 AutofillRandomizedValue_EncodingType = 7
  // For each byte, the encoded value contains even or odd bits only.
  AutofillRandomizedValue_EVEN_BITS AutofillRandomizedValue_EncodingType = 8
  AutofillRandomizedValue_ODD_BITS  AutofillRandomizedValue_EncodingType = 9
  // The encoded value contains all of the bits.
  AutofillRandomizedValue_ALL_BITS AutofillRandomizedValue_EncodingType = 10
)

var AutofillRandomizedValue_EncodingType_name = map[int32]string{
  -1: "UNSPECIFIED_ENCODING_TYPE",
  0:  "BIT_0",
  1:  "BIT_1",
  2:  "BIT_2",
  3:  "BIT_3",
  4:  "BIT_4",
  5:  "BIT_5",
  6:  "BIT_6",
  7:  "BIT_7",
  8:  "EVEN_BITS",
  9:  "ODD_BITS",
  10: "ALL_BITS",
}

var AutofillRandomizedValue_EncodingType_value = map[string]int32{
  "UNSPECIFIED_ENCODING_TYPE": -1,
  "BIT_0":                     0,
  "BIT_1":                     1,
  "BIT_2":                     2,
  "BIT_3":                     3,
  "BIT_4":                     4,
  "BIT_5":                     5,
  "BIT_6":                     6,
  "BIT_7":                     7,
  "EVEN_BITS":                 8,
  "ODD_BITS":                  9,
  "ALL_BITS":                  10,
}

func (x AutofillRandomizedValue_EncodingType) Enum() *AutofillRandomizedValue_EncodingType {
  p := new(AutofillRandomizedValue_EncodingType)
  *p = x
  return p
}

func (x AutofillRandomizedValue_EncodingType) String() string {
  return proto.EnumName(AutofillRandomizedValue_EncodingType_name, int32(x))
}

func (x *AutofillRandomizedValue_EncodingType) UnmarshalJSON(data []byte) error {
  value, err := proto.UnmarshalJSONEnum(AutofillRandomizedValue_EncodingType_value, data, "AutofillRandomizedValue_EncodingType")
  if err != nil {
    return err
  }
  *x = AutofillRandomizedValue_EncodingType(value)
  return nil
}

func (AutofillRandomizedValue_EncodingType) EnumDescriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{2, 0}
}

// Event observed by the password manager which indicated that the form was
// successfully submitted. Corresponds to
// |PasswordForm::SubmissionIndicatorEvent|.
type AutofillUploadContents_SubmissionIndicatorEvent int32

const (
  AutofillUploadContents_NONE                                                       AutofillUploadContents_SubmissionIndicatorEvent = 0
  AutofillUploadContents_HTML_FORM_SUBMISSION                                       AutofillUploadContents_SubmissionIndicatorEvent = 1
  AutofillUploadContents_SAME_DOCUMENT_NAVIGATION                                   AutofillUploadContents_SubmissionIndicatorEvent = 2
  AutofillUploadContents_XHR_SUCCEEDED                                              AutofillUploadContents_SubmissionIndicatorEvent = 3
  AutofillUploadContents_FRAME_DETACHED                                             AutofillUploadContents_SubmissionIndicatorEvent = 4
  AutofillUploadContents_DEPRECATED_MANUAL_SAVE                                     AutofillUploadContents_SubmissionIndicatorEvent = 5
  AutofillUploadContents_DOM_MUTATION_AFTER_XHR                                     AutofillUploadContents_SubmissionIndicatorEvent = 6
  AutofillUploadContents_PROVISIONALLY_SAVED_FORM_ON_START_PROVISIONAL_LOAD         AutofillUploadContents_SubmissionIndicatorEvent = 7
  AutofillUploadContents_DEPRECATED_FILLED_FORM_ON_START_PROVISIONAL_LOAD           AutofillUploadContents_SubmissionIndicatorEvent = 8
  AutofillUploadContents_DEPRECATED_FILLED_INPUT_ELEMENTS_ON_START_PROVISIONAL_LOAD AutofillUploadContents_SubmissionIndicatorEvent = 9
  AutofillUploadContents_PROBABLE_FORM_SUBMISSION                                   AutofillUploadContents_SubmissionIndicatorEvent = 10
)

var AutofillUploadContents_SubmissionIndicatorEvent_name = map[int32]string{
  0:  "NONE",
  1:  "HTML_FORM_SUBMISSION",
  2:  "SAME_DOCUMENT_NAVIGATION",
  3:  "XHR_SUCCEEDED",
  4:  "FRAME_DETACHED",
  5:  "DEPRECATED_MANUAL_SAVE",
  6:  "DOM_MUTATION_AFTER_XHR",
  7:  "PROVISIONALLY_SAVED_FORM_ON_START_PROVISIONAL_LOAD",
  8:  "DEPRECATED_FILLED_FORM_ON_START_PROVISIONAL_LOAD",
  9:  "DEPRECATED_FILLED_INPUT_ELEMENTS_ON_START_PROVISIONAL_LOAD",
  10: "PROBABLE_FORM_SUBMISSION",
}

var AutofillUploadContents_SubmissionIndicatorEvent_value = map[string]int32{
  "NONE":                     0,
  "HTML_FORM_SUBMISSION":     1,
  "SAME_DOCUMENT_NAVIGATION": 2,
  "XHR_SUCCEEDED":            3,
  "FRAME_DETACHED":           4,
  "DEPRECATED_MANUAL_SAVE":   5,
  "DOM_MUTATION_AFTER_XHR":   6,
  "PROVISIONALLY_SAVED_FORM_ON_START_PROVISIONAL_LOAD":         7,
  "DEPRECATED_FILLED_FORM_ON_START_PROVISIONAL_LOAD":           8,
  "DEPRECATED_FILLED_INPUT_ELEMENTS_ON_START_PROVISIONAL_LOAD": 9,
  "PROBABLE_FORM_SUBMISSION":                                   10,
}

func (x AutofillUploadContents_SubmissionIndicatorEvent) Enum() *AutofillUploadContents_SubmissionIndicatorEvent {
  p := new(AutofillUploadContents_SubmissionIndicatorEvent)
  *p = x
  return p
}

func (x AutofillUploadContents_SubmissionIndicatorEvent) String() string {
  return proto.EnumName(AutofillUploadContents_SubmissionIndicatorEvent_name, int32(x))
}

func (x *AutofillUploadContents_SubmissionIndicatorEvent) UnmarshalJSON(data []byte) error {
  value, err := proto.UnmarshalJSONEnum(AutofillUploadContents_SubmissionIndicatorEvent_value, data, "AutofillUploadContents_SubmissionIndicatorEvent")
  if err != nil {
    return err
  }
  *x = AutofillUploadContents_SubmissionIndicatorEvent(value)
  return nil
}

func (AutofillUploadContents_SubmissionIndicatorEvent) EnumDescriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5, 0}
}

type AutofillUploadContents_Field_PasswordGenerationType int32

const (
  AutofillUploadContents_Field_NO_GENERATION                                              AutofillUploadContents_Field_PasswordGenerationType = 0
  AutofillUploadContents_Field_AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM         AutofillUploadContents_Field_PasswordGenerationType = 1
  AutofillUploadContents_Field_AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM AutofillUploadContents_Field_PasswordGenerationType = 2
  AutofillUploadContents_Field_MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM              AutofillUploadContents_Field_PasswordGenerationType = 3
  AutofillUploadContents_Field_MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM      AutofillUploadContents_Field_PasswordGenerationType = 4
  AutofillUploadContents_Field_IGNORED_GENERATION_POPUP                                   AutofillUploadContents_Field_PasswordGenerationType = 5
)

var AutofillUploadContents_Field_PasswordGenerationType_name = map[int32]string{
  0: "NO_GENERATION",
  1: "AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM",
  2: "AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM",
  3: "MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM",
  4: "MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM",
  5: "IGNORED_GENERATION_POPUP",
}

var AutofillUploadContents_Field_PasswordGenerationType_value = map[string]int32{
  "NO_GENERATION": 0,
  "AUTOMATICALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM":         1,
  "AUTOMATICALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM": 2,
  "MANUALLY_TRIGGERED_GENERATION_ON_SIGN_UP_FORM":              3,
  "MANUALLY_TRIGGERED_GENERATION_ON_CHANGE_PASSWORD_FORM":      4,
  "IGNORED_GENERATION_POPUP":                                   5,
}

func (x AutofillUploadContents_Field_PasswordGenerationType) Enum() *AutofillUploadContents_Field_PasswordGenerationType {
  p := new(AutofillUploadContents_Field_PasswordGenerationType)
  *p = x
  return p
}

func (x AutofillUploadContents_Field_PasswordGenerationType) String() string {
  return proto.EnumName(AutofillUploadContents_Field_PasswordGenerationType_name, int32(x))
}

func (x *AutofillUploadContents_Field_PasswordGenerationType) UnmarshalJSON(data []byte) error {
  value, err := proto.UnmarshalJSONEnum(AutofillUploadContents_Field_PasswordGenerationType_value, data, "AutofillUploadContents_Field_PasswordGenerationType")
  if err != nil {
    return err
  }
  *x = AutofillUploadContents_Field_PasswordGenerationType(value)
  return nil
}

func (AutofillUploadContents_Field_PasswordGenerationType) EnumDescriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5, 0, 0}
}

type AutofillUploadContents_Field_VoteType int32

const (
  AutofillUploadContents_Field_NO_INFORMATION AutofillUploadContents_Field_VoteType = 0
  // A credential saved on one form (typically a signup form) was used on a
  // login form. The vote applies to the first (signup) form.
  AutofillUploadContents_Field_CREDENTIALS_REUSED AutofillUploadContents_Field_VoteType = 1
  // When reusing a credential, the username value is not the saved
  // username, but another value, which appeared on the form where we saved.
  // The correct field is voted for.
  AutofillUploadContents_Field_USERNAME_OVERWRITTEN AutofillUploadContents_Field_VoteType = 2
  // In the save prompt, the user corrected the username value to another
  // value from the form. The new field is voted for.
  AutofillUploadContents_Field_USERNAME_EDITED AutofillUploadContents_Field_VoteType = 3
  // The username field was detected by the base heuristic (take the last
  // non-password field before the first password field). The value is not
  // used at this point.
  AutofillUploadContents_Field_BASE_HEURISTIC AutofillUploadContents_Field_VoteType = 4
  // The username field was detected by HTML-based detector. The value is
  // not used at this point.
  AutofillUploadContents_Field_HTML_CLASSIFIER AutofillUploadContents_Field_VoteType = 5
  // A saved credential was used for the first time on a submitted form. The
  // vote applies to the form being submitted.
  AutofillUploadContents_Field_FIRST_USE AutofillUploadContents_Field_VoteType = 6
)

var AutofillUploadContents_Field_VoteType_name = map[int32]string{
  0: "NO_INFORMATION",
  1: "CREDENTIALS_REUSED",
  2: "USERNAME_OVERWRITTEN",
  3: "USERNAME_EDITED",
  4: "BASE_HEURISTIC",
  5: "HTML_CLASSIFIER",
  6: "FIRST_USE",
}

var AutofillUploadContents_Field_VoteType_value = map[string]int32{
  "NO_INFORMATION":       0,
  "CREDENTIALS_REUSED":   1,
  "USERNAME_OVERWRITTEN": 2,
  "USERNAME_EDITED":      3,
  "BASE_HEURISTIC":       4,
  "HTML_CLASSIFIER":      5,
  "FIRST_USE":            6,
}

func (x AutofillUploadContents_Field_VoteType) Enum() *AutofillUploadContents_Field_VoteType {
  p := new(AutofillUploadContents_Field_VoteType)
  *p = x
  return p
}

func (x AutofillUploadContents_Field_VoteType) String() string {
  return proto.EnumName(AutofillUploadContents_Field_VoteType_name, int32(x))
}

func (x *AutofillUploadContents_Field_VoteType) UnmarshalJSON(data []byte) error {
  value, err := proto.UnmarshalJSONEnum(AutofillUploadContents_Field_VoteType_value, data, "AutofillUploadContents_Field_VoteType")
  if err != nil {
    return err
  }
  *x = AutofillUploadContents_Field_VoteType(value)
  return nil
}

func (AutofillUploadContents_Field_VoteType) EnumDescriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5, 0, 1}
}

// The message is sent when a client needs to autofill forms on web pages and
// asks the server about known field types.
// Next available id: 11
type AutofillQueryContents struct {
  ClientVersion        *string                       `protobuf:"bytes,1,req,name=client_version,json=clientVersion" json:"client_version,omitempty"`
  Form                 []*AutofillQueryContents_Form `protobuf:"group,2,rep,name=Form,json=form" json:"form,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
  XXX_unrecognized     []byte                        `json:"-"`
  XXX_sizecache        int32                         `json:"-"`
}

func (m *AutofillQueryContents) Reset()         { *m = AutofillQueryContents{} }
func (m *AutofillQueryContents) String() string { return proto.CompactTextString(m) }
func (*AutofillQueryContents) ProtoMessage()    {}
func (*AutofillQueryContents) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *AutofillQueryContents) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryContents.Unmarshal(m, b)
}
func (m *AutofillQueryContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryContents.Marshal(b, m, deterministic)
}
func (m *AutofillQueryContents) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryContents.Merge(m, src)
}
func (m *AutofillQueryContents) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryContents.Size(m)
}
func (m *AutofillQueryContents) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryContents.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryContents proto.InternalMessageInfo

func (m *AutofillQueryContents) GetClientVersion() string {
  if m != nil && m.ClientVersion != nil {
    return *m.ClientVersion
  }
  return ""
}

func (m *AutofillQueryContents) GetForm() []*AutofillQueryContents_Form {
  if m != nil {
    return m.Form
  }
  return nil
}

type AutofillQueryContents_Form struct {
  Signature            *uint64                             `protobuf:"fixed64,3,req,name=signature" json:"signature,omitempty"`
  Field                []*AutofillQueryContents_Form_Field `protobuf:"group,4,rep,name=Field,json=field" json:"field,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
  XXX_unrecognized     []byte                              `json:"-"`
  XXX_sizecache        int32                               `json:"-"`
}

func (m *AutofillQueryContents_Form) Reset()         { *m = AutofillQueryContents_Form{} }
func (m *AutofillQueryContents_Form) String() string { return proto.CompactTextString(m) }
func (*AutofillQueryContents_Form) ProtoMessage()    {}
func (*AutofillQueryContents_Form) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{0, 0}
}

func (m *AutofillQueryContents_Form) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryContents_Form.Unmarshal(m, b)
}
func (m *AutofillQueryContents_Form) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryContents_Form.Marshal(b, m, deterministic)
}
func (m *AutofillQueryContents_Form) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryContents_Form.Merge(m, src)
}
func (m *AutofillQueryContents_Form) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryContents_Form.Size(m)
}
func (m *AutofillQueryContents_Form) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryContents_Form.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryContents_Form proto.InternalMessageInfo

func (m *AutofillQueryContents_Form) GetSignature() uint64 {
  if m != nil && m.Signature != nil {
    return *m.Signature
  }
  return 0
}

func (m *AutofillQueryContents_Form) GetField() []*AutofillQueryContents_Form_Field {
  if m != nil {
    return m.Field
  }
  return nil
}

type AutofillQueryContents_Form_Field struct {
  Signature            *uint32  `protobuf:"fixed32,5,req,name=signature" json:"signature,omitempty"`
  Name                 *string  `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
  Type                 *string  `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
  XXX_NoUnkeyedLiteral struct{} `json:"-"`
  XXX_unrecognized     []byte   `json:"-"`
  XXX_sizecache        int32    `json:"-"`
}

func (m *AutofillQueryContents_Form_Field) Reset()         { *m = AutofillQueryContents_Form_Field{} }
func (m *AutofillQueryContents_Form_Field) String() string { return proto.CompactTextString(m) }
func (*AutofillQueryContents_Form_Field) ProtoMessage()    {}
func (*AutofillQueryContents_Form_Field) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{0, 0, 0}
}

func (m *AutofillQueryContents_Form_Field) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryContents_Form_Field.Unmarshal(m, b)
}
func (m *AutofillQueryContents_Form_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryContents_Form_Field.Marshal(b, m, deterministic)
}
func (m *AutofillQueryContents_Form_Field) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryContents_Form_Field.Merge(m, src)
}
func (m *AutofillQueryContents_Form_Field) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryContents_Form_Field.Size(m)
}
func (m *AutofillQueryContents_Form_Field) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryContents_Form_Field.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryContents_Form_Field proto.InternalMessageInfo

func (m *AutofillQueryContents_Form_Field) GetSignature() uint32 {
  if m != nil && m.Signature != nil {
    return *m.Signature
  }
  return 0
}

func (m *AutofillQueryContents_Form_Field) GetName() string {
  if m != nil && m.Name != nil {
    return *m.Name
  }
  return ""
}

func (m *AutofillQueryContents_Form_Field) GetType() string {
  if m != nil && m.Type != nil {
    return *m.Type
  }
  return ""
}

// This message is the result of an Autofill query. It holds the field type
// information.
// Next available id: 10
type AutofillQueryResponseContents struct {
  UploadRequired       *bool                                  `protobuf:"varint,1,opt,name=upload_required,json=uploadRequired" json:"upload_required,omitempty"`
  Field                []*AutofillQueryResponseContents_Field `protobuf:"group,2,rep,name=Field,json=field" json:"field,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
  XXX_unrecognized     []byte                                 `json:"-"`
  XXX_sizecache        int32                                  `json:"-"`
}

func (m *AutofillQueryResponseContents) Reset()         { *m = AutofillQueryResponseContents{} }
func (m *AutofillQueryResponseContents) String() string { return proto.CompactTextString(m) }
func (*AutofillQueryResponseContents) ProtoMessage()    {}
func (*AutofillQueryResponseContents) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *AutofillQueryResponseContents) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryResponseContents.Unmarshal(m, b)
}
func (m *AutofillQueryResponseContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryResponseContents.Marshal(b, m, deterministic)
}
func (m *AutofillQueryResponseContents) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryResponseContents.Merge(m, src)
}
func (m *AutofillQueryResponseContents) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryResponseContents.Size(m)
}
func (m *AutofillQueryResponseContents) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryResponseContents.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryResponseContents proto.InternalMessageInfo

func (m *AutofillQueryResponseContents) GetUploadRequired() bool {
  if m != nil && m.UploadRequired != nil {
    return *m.UploadRequired
  }
  return false
}

func (m *AutofillQueryResponseContents) GetField() []*AutofillQueryResponseContents_Field {
  if m != nil {
    return m.Field
  }
  return nil
}

type AutofillQueryResponseContents_Field struct {
  OverallTypePrediction *uint32                                                `protobuf:"fixed32,3,req,name=overall_type_prediction,json=overallTypePrediction" json:"overall_type_prediction,omitempty"`
  Predictions           []*AutofillQueryResponseContents_Field_FieldPrediction `protobuf:"bytes,7,rep,name=predictions" json:"predictions,omitempty"`
  // For fields of type NEW_PASSWORD and ACCOUNT_CREATION_PASSWORD, this may
  // specify requirements for the generation of passwords.
  PasswordRequirements *PasswordRequirementsSpec `protobuf:"bytes,9,opt,name=password_requirements,json=passwordRequirements" json:"password_requirements,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
  XXX_unrecognized     []byte                    `json:"-"`
  XXX_sizecache        int32                     `json:"-"`
}

func (m *AutofillQueryResponseContents_Field) Reset()         { *m = AutofillQueryResponseContents_Field{} }
func (m *AutofillQueryResponseContents_Field) String() string { return proto.CompactTextString(m) }
func (*AutofillQueryResponseContents_Field) ProtoMessage()    {}
func (*AutofillQueryResponseContents_Field) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{1, 0}
}

func (m *AutofillQueryResponseContents_Field) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryResponseContents_Field.Unmarshal(m, b)
}
func (m *AutofillQueryResponseContents_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryResponseContents_Field.Marshal(b, m, deterministic)
}
func (m *AutofillQueryResponseContents_Field) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryResponseContents_Field.Merge(m, src)
}
func (m *AutofillQueryResponseContents_Field) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryResponseContents_Field.Size(m)
}
func (m *AutofillQueryResponseContents_Field) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryResponseContents_Field.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryResponseContents_Field proto.InternalMessageInfo

func (m *AutofillQueryResponseContents_Field) GetOverallTypePrediction() uint32 {
  if m != nil && m.OverallTypePrediction != nil {
    return *m.OverallTypePrediction
  }
  return 0
}

func (m *AutofillQueryResponseContents_Field) GetPredictions() []*AutofillQueryResponseContents_Field_FieldPrediction {
  if m != nil {
    return m.Predictions
  }
  return nil
}

func (m *AutofillQueryResponseContents_Field) GetPasswordRequirements() *PasswordRequirementsSpec {
  if m != nil {
    return m.PasswordRequirements
  }
  return nil
}

// Detailed list of all possible predictions (including
// |overall_type_prediction| as the first item).
type AutofillQueryResponseContents_Field_FieldPrediction struct {
  // The predicted field type.
  Type *uint32 `protobuf:"fixed32,1,opt,name=type" json:"type,omitempty"`
  // True if the serverside classification believes that the field
  // may be pre-filled with a placeholder in the value attribute.
  MayUsePrefilledPlaceholder *bool    `protobuf:"varint,2,opt,name=may_use_prefilled_placeholder,json=mayUsePrefilledPlaceholder" json:"may_use_prefilled_placeholder,omitempty"`
  XXX_NoUnkeyedLiteral       struct{} `json:"-"`
  XXX_unrecognized           []byte   `json:"-"`
  XXX_sizecache              int32    `json:"-"`
}

func (m *AutofillQueryResponseContents_Field_FieldPrediction) Reset() {
  *m = AutofillQueryResponseContents_Field_FieldPrediction{}
}
func (m *AutofillQueryResponseContents_Field_FieldPrediction) String() string {
  return proto.CompactTextString(m)
}
func (*AutofillQueryResponseContents_Field_FieldPrediction) ProtoMessage() {}
func (*AutofillQueryResponseContents_Field_FieldPrediction) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{1, 0, 0}
}

func (m *AutofillQueryResponseContents_Field_FieldPrediction) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction.Unmarshal(m, b)
}
func (m *AutofillQueryResponseContents_Field_FieldPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction.Marshal(b, m, deterministic)
}
func (m *AutofillQueryResponseContents_Field_FieldPrediction) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction.Merge(m, src)
}
func (m *AutofillQueryResponseContents_Field_FieldPrediction) XXX_Size() int {
  return xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction.Size(m)
}
func (m *AutofillQueryResponseContents_Field_FieldPrediction) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillQueryResponseContents_Field_FieldPrediction proto.InternalMessageInfo

func (m *AutofillQueryResponseContents_Field_FieldPrediction) GetType() uint32 {
  if m != nil && m.Type != nil {
    return *m.Type
  }
  return 0
}

func (m *AutofillQueryResponseContents_Field_FieldPrediction) GetMayUsePrefilledPlaceholder() bool {
  if m != nil && m.MayUsePrefilledPlaceholder != nil {
    return *m.MayUsePrefilledPlaceholder
  }
  return false
}

// This message contains a randomized encoding of a string, where each bit
// in the encoded string is randomly sent as either the true value seen by
// the client, or random noise. The mapping of specific bits in the encoded
// string back to bits in the original string is specified by the EncodingType.
type AutofillRandomizedValue struct {
  // Selector denoting the source bits to which the encoded bits correspond.
  EncodingType *AutofillRandomizedValue_EncodingType `protobuf:"varint,1,opt,name=encoding_type,json=encodingType,enum=autofill.AutofillRandomizedValue_EncodingType,def=-1" json:"encoding_type,omitempty"`
  // The encoded bits. Only the bits denoted by |encoding_type| are included in
  // |encoded_bits|.
  //
  // BIT_K encodings:
  //    each randomized bit i in |encoded_bits| corresponds to bit k of the byte
  //    at the corresponsding offset i of the original metadata value, up to
  //    i=64 (8 bytes).
  //
  // EVEN_BITS encoding:
  //     each randomized bit i in |encoded_bits| corresponds to bit 2*i of the
  //     original metadata value, up to i=256 (32 bytes).
  //
  // ODD_BITS encoding:
  //     each randomized bit i in |encoded_bits| corresponds to bit 2*i+1 of the
  //     original metadata value, up to i=256 (32 bytes).
  //
  // ALL_BITS encding:
  //     each bit i in |encoded_bits| corresponds to bit i of the original
  //     metadata value, up to i=512 (64 bytes).
  //
  // The encoded data is generally not user data, however, it is possible that
  // user visible metadata (like the Label for an input field) could be
  // personalized and thus contains user data (possibly PII). For the ALL_BITS
  // encoding, each randomized byte has a 10% probability of being encoded 1:1
  // as the true byte seen by the client, even if some of those bits were
  // transmitted as noise. For all of the other encodings, the encoded bits
  // does not encode any full bytes.
  EncodedBits          []byte   `protobuf:"bytes,2,opt,name=encoded_bits,json=encodedBits" json:"encoded_bits,omitempty"`
  XXX_NoUnkeyedLiteral struct{} `json:"-"`
  XXX_unrecognized     []byte   `json:"-"`
  XXX_sizecache        int32    `json:"-"`
}

func (m *AutofillRandomizedValue) Reset()         { *m = AutofillRandomizedValue{} }
func (m *AutofillRandomizedValue) String() string { return proto.CompactTextString(m) }
func (*AutofillRandomizedValue) ProtoMessage()    {}
func (*AutofillRandomizedValue) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *AutofillRandomizedValue) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillRandomizedValue.Unmarshal(m, b)
}
func (m *AutofillRandomizedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillRandomizedValue.Marshal(b, m, deterministic)
}
func (m *AutofillRandomizedValue) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillRandomizedValue.Merge(m, src)
}
func (m *AutofillRandomizedValue) XXX_Size() int {
  return xxx_messageInfo_AutofillRandomizedValue.Size(m)
}
func (m *AutofillRandomizedValue) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillRandomizedValue.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillRandomizedValue proto.InternalMessageInfo

const Default_AutofillRandomizedValue_EncodingType AutofillRandomizedValue_EncodingType = AutofillRandomizedValue_UNSPECIFIED_ENCODING_TYPE

func (m *AutofillRandomizedValue) GetEncodingType() AutofillRandomizedValue_EncodingType {
  if m != nil && m.EncodingType != nil {
    return *m.EncodingType
  }
  return Default_AutofillRandomizedValue_EncodingType
}

func (m *AutofillRandomizedValue) GetEncodedBits() []byte {
  if m != nil {
    return m.EncodedBits
  }
  return nil
}

// The collection of autofill field metadata to be sent using randomization.
type AutofillRandomizedFormMetadata struct {
  // Form element id. Example: <form id="XXXXXXXX">
  Id *AutofillRandomizedValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
  // Form element name. Example: <form name="XXXXXXXX">
  Name *AutofillRandomizedValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
  // Form element action. Example: <form action="XXXXXXXX">
  Action               *AutofillRandomizedValue `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
  XXX_unrecognized     []byte                   `json:"-"`
  XXX_sizecache        int32                    `json:"-"`
}

func (m *AutofillRandomizedFormMetadata) Reset()         { *m = AutofillRandomizedFormMetadata{} }
func (m *AutofillRandomizedFormMetadata) String() string { return proto.CompactTextString(m) }
func (*AutofillRandomizedFormMetadata) ProtoMessage()    {}
func (*AutofillRandomizedFormMetadata) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *AutofillRandomizedFormMetadata) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillRandomizedFormMetadata.Unmarshal(m, b)
}
func (m *AutofillRandomizedFormMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillRandomizedFormMetadata.Marshal(b, m, deterministic)
}
func (m *AutofillRandomizedFormMetadata) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillRandomizedFormMetadata.Merge(m, src)
}
func (m *AutofillRandomizedFormMetadata) XXX_Size() int {
  return xxx_messageInfo_AutofillRandomizedFormMetadata.Size(m)
}
func (m *AutofillRandomizedFormMetadata) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillRandomizedFormMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillRandomizedFormMetadata proto.InternalMessageInfo

func (m *AutofillRandomizedFormMetadata) GetId() *AutofillRandomizedValue {
  if m != nil {
    return m.Id
  }
  return nil
}

func (m *AutofillRandomizedFormMetadata) GetName() *AutofillRandomizedValue {
  if m != nil {
    return m.Name
  }
  return nil
}

func (m *AutofillRandomizedFormMetadata) GetAction() *AutofillRandomizedValue {
  if m != nil {
    return m.Action
  }
  return nil
}

// The collection of autofill field metadata to be sent using randomization.
type AutofillRandomizedFieldMetadata struct {
  // Input element id. Example: <input id="XXXXXXXX">
  Id *AutofillRandomizedValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
  // Input element name. Example:  <input name="XXXXXXXX">
  Name *AutofillRandomizedValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
  // Input element type. Example: <input type="XXXXXXXX">
  Type *AutofillRandomizedValue `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
  // Input field label value seen by the user, either explicitly annotated in
  // the DOM or inferred by the client.
  //
  // The value encountered by the client may be personalized (for example:
  // "Please enter the password for foo@bar.net"). The system will learn the
  // common/static prefix and determine that the personalized substring is
  // noise. That said, for a given upload using the ALL_BITS encoding, each
  // byte has a 10% probability or matching the original plaintext byte and
  // a 1 in 10^m chance of the full m-character string being uploaded as
  // plaintext. The other encodings only send partial bytes.
  //
  // Example:  <label for="id">XXXXXXX</label>
  Label *AutofillRandomizedValue `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
  // Input field label value exposed to the user via ARIA.
  // Example 1: <input aria-label="XXXXXX>
  // Example 2: <div id="foo">XXXXXXX</div>
  //            <input aria-labelledby="foo">
  AriaLabel *AutofillRandomizedValue `protobuf:"bytes,5,opt,name=aria_label,json=ariaLabel" json:"aria_label,omitempty"`
  // Input field description exposed to the user via ARIA.
  // Example:
  //     <div id="foo">XXXXXXX</div>
  //     <input aria-describedby="foo">
  AriaDescription *AutofillRandomizedValue `protobuf:"bytes,6,opt,name=aria_description,json=ariaDescription" json:"aria_description,omitempty"`
  // CSS class for the input element.
  // Example: <input class="XXXXXXXX">
  CssClass *AutofillRandomizedValue `protobuf:"bytes,7,opt,name=css_class,json=cssClass" json:"css_class,omitempty"`
  // Placeholder text for the input element.
  // Example: <input placeholder="XXXXXXXX">
  Placeholder *AutofillRandomizedValue `protobuf:"bytes,8,opt,name=placeholder" json:"placeholder,omitempty"`
  // Hash of the initial value of the field. We want to learn if the initial
  // value of this field is personalized to the user (we will learn that the
  // value is noise) or if it is a placeholder in disguise (we will learn a
  // constant hash).
  //
  // Example: <input value="VVVVVVV">
  //          XXXXXXXX = hash("VVVVVVV"")
  InitialValueHash     *AutofillRandomizedValue `protobuf:"bytes,9,opt,name=initial_value_hash,json=initialValueHash" json:"initial_value_hash,omitempty"`
  XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
  XXX_unrecognized     []byte                   `json:"-"`
  XXX_sizecache        int32                    `json:"-"`
}

func (m *AutofillRandomizedFieldMetadata) Reset()         { *m = AutofillRandomizedFieldMetadata{} }
func (m *AutofillRandomizedFieldMetadata) String() string { return proto.CompactTextString(m) }
func (*AutofillRandomizedFieldMetadata) ProtoMessage()    {}
func (*AutofillRandomizedFieldMetadata) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *AutofillRandomizedFieldMetadata) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillRandomizedFieldMetadata.Unmarshal(m, b)
}
func (m *AutofillRandomizedFieldMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillRandomizedFieldMetadata.Marshal(b, m, deterministic)
}
func (m *AutofillRandomizedFieldMetadata) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillRandomizedFieldMetadata.Merge(m, src)
}
func (m *AutofillRandomizedFieldMetadata) XXX_Size() int {
  return xxx_messageInfo_AutofillRandomizedFieldMetadata.Size(m)
}
func (m *AutofillRandomizedFieldMetadata) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillRandomizedFieldMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillRandomizedFieldMetadata proto.InternalMessageInfo

func (m *AutofillRandomizedFieldMetadata) GetId() *AutofillRandomizedValue {
  if m != nil {
    return m.Id
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetName() *AutofillRandomizedValue {
  if m != nil {
    return m.Name
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetType() *AutofillRandomizedValue {
  if m != nil {
    return m.Type
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetLabel() *AutofillRandomizedValue {
  if m != nil {
    return m.Label
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetAriaLabel() *AutofillRandomizedValue {
  if m != nil {
    return m.AriaLabel
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetAriaDescription() *AutofillRandomizedValue {
  if m != nil {
    return m.AriaDescription
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetCssClass() *AutofillRandomizedValue {
  if m != nil {
    return m.CssClass
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetPlaceholder() *AutofillRandomizedValue {
  if m != nil {
    return m.Placeholder
  }
  return nil
}

func (m *AutofillRandomizedFieldMetadata) GetInitialValueHash() *AutofillRandomizedValue {
  if m != nil {
    return m.InitialValueHash
  }
  return nil
}

// This message contains information about the field types in a single form.
// It is sent by the toolbar to contribute to the field type statistics.
// Next available id: 35
type AutofillUploadContents struct {
  ClientVersion *string `protobuf:"bytes,1,req,name=client_version,json=clientVersion" json:"client_version,omitempty"`
  FormSignature *uint64 `protobuf:"fixed64,2,req,name=form_signature,json=formSignature" json:"form_signature,omitempty"`
  // The secondary form signature is calculated based on field types instead of
  // names and is used if the primary one is unstable, i.e. the field names
  // change on every page load.
  SecondaryFormSignature *uint64 `protobuf:"fixed64,34,opt,name=secondary_form_signature,json=secondaryFormSignature" json:"secondary_form_signature,omitempty"`
  // True if the autofill feature was used to fill this form, false otherwise.
  AutofillUsed *bool `protobuf:"varint,3,req,name=autofill_used,json=autofillUsed" json:"autofill_used,omitempty"`
  // A string representing a bit array of what personal information items
  // the user has entered in the autofill settings dialog.
  // The corresponding bit is set if the user has that particular
  // item entered and is not set otherwise.
  DataPresent *string                         `protobuf:"bytes,4,req,name=data_present,json=dataPresent" json:"data_present,omitempty"`
  Field       []*AutofillUploadContents_Field `protobuf:"group,5,rep,name=Field,json=field" json:"field,omitempty"`
  // Signature of the form action host (e.g. Hash64Bit("example.com")).
  ActionSignature *uint64 `protobuf:"fixed64,13,opt,name=action_signature,json=actionSignature" json:"action_signature,omitempty"`
  // Signature of the form which is used for password generation debugging.
  // Currently is used when password generated on a password field of a
  // registration form is used on a password field of a login form.
  LoginFormSignature *uint64 `protobuf:"fixed64,14,opt,name=login_form_signature,json=loginFormSignature" json:"login_form_signature,omitempty"`
  // Whether a form submission event was observed.
  Submission *bool `protobuf:"varint,15,opt,name=submission" json:"submission,omitempty"`
  // The form name.
  FormName *string `protobuf:"bytes,16,opt,name=form_name,json=formName" json:"form_name,omitempty"`
  // True iff the the non-obfuscated password values were shown to the user.
  PasswordsRevealed *bool `protobuf:"varint,24,opt,name=passwords_revealed,json=passwordsRevealed" json:"passwords_revealed,omitempty"`
  // Whether the password has any lowercase letter.
  PasswordHasLowercaseLetter *bool `protobuf:"varint,25,opt,name=password_has_lowercase_letter,json=passwordHasLowercaseLetter" json:"password_has_lowercase_letter,omitempty"`
  // Whether the password has any uppercase letter.
  PasswordHasUppercaseLetter *bool `protobuf:"varint,26,opt,name=password_has_uppercase_letter,json=passwordHasUppercaseLetter" json:"password_has_uppercase_letter,omitempty"`
  // Whether the password has any digit.
  PasswordHasNumeric *bool `protobuf:"varint,27,opt,name=password_has_numeric,json=passwordHasNumeric" json:"password_has_numeric,omitempty"`
  // Whether the password has any special symbol.
  PasswordHasSpecialSymbol *bool `protobuf:"varint,28,opt,name=password_has_special_symbol,json=passwordHasSpecialSymbol" json:"password_has_special_symbol,omitempty"`
  // Noisifed password length.
  PasswordLength *uint32 `protobuf:"varint,29,opt,name=password_length,json=passwordLength" json:"password_length,omitempty"`
  // The type of the event that was taken as an indication that the form has
  // been successfully submitted.
  SubmissionEvent *AutofillUploadContents_SubmissionIndicatorEvent `protobuf:"varint,30,opt,name=submission_event,json=submissionEvent,enum=autofill.AutofillUploadContents_SubmissionIndicatorEvent" json:"submission_event,omitempty"`
  // The language of the page on which this form appears.
  Language *string `protobuf:"bytes,31,opt,name=language" json:"language,omitempty"`
  // Form-level metadata observed by the client, randomized.
  RandomizedFormMetadata *AutofillRandomizedFormMetadata `protobuf:"bytes,32,opt,name=randomized_form_metadata,json=randomizedFormMetadata" json:"randomized_form_metadata,omitempty"`
  XXX_NoUnkeyedLiteral   struct{}                        `json:"-"`
  XXX_unrecognized       []byte                          `json:"-"`
  XXX_sizecache          int32                           `json:"-"`
}

func (m *AutofillUploadContents) Reset()         { *m = AutofillUploadContents{} }
func (m *AutofillUploadContents) String() string { return proto.CompactTextString(m) }
func (*AutofillUploadContents) ProtoMessage()    {}
func (*AutofillUploadContents) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *AutofillUploadContents) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillUploadContents.Unmarshal(m, b)
}
func (m *AutofillUploadContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillUploadContents.Marshal(b, m, deterministic)
}
func (m *AutofillUploadContents) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillUploadContents.Merge(m, src)
}
func (m *AutofillUploadContents) XXX_Size() int {
  return xxx_messageInfo_AutofillUploadContents.Size(m)
}
func (m *AutofillUploadContents) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillUploadContents.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillUploadContents proto.InternalMessageInfo

func (m *AutofillUploadContents) GetClientVersion() string {
  if m != nil && m.ClientVersion != nil {
    return *m.ClientVersion
  }
  return ""
}

func (m *AutofillUploadContents) GetFormSignature() uint64 {
  if m != nil && m.FormSignature != nil {
    return *m.FormSignature
  }
  return 0
}

func (m *AutofillUploadContents) GetSecondaryFormSignature() uint64 {
  if m != nil && m.SecondaryFormSignature != nil {
    return *m.SecondaryFormSignature
  }
  return 0
}

func (m *AutofillUploadContents) GetAutofillUsed() bool {
  if m != nil && m.AutofillUsed != nil {
    return *m.AutofillUsed
  }
  return false
}

func (m *AutofillUploadContents) GetDataPresent() string {
  if m != nil && m.DataPresent != nil {
    return *m.DataPresent
  }
  return ""
}

func (m *AutofillUploadContents) GetField() []*AutofillUploadContents_Field {
  if m != nil {
    return m.Field
  }
  return nil
}

func (m *AutofillUploadContents) GetActionSignature() uint64 {
  if m != nil && m.ActionSignature != nil {
    return *m.ActionSignature
  }
  return 0
}

func (m *AutofillUploadContents) GetLoginFormSignature() uint64 {
  if m != nil && m.LoginFormSignature != nil {
    return *m.LoginFormSignature
  }
  return 0
}

func (m *AutofillUploadContents) GetSubmission() bool {
  if m != nil && m.Submission != nil {
    return *m.Submission
  }
  return false
}

func (m *AutofillUploadContents) GetFormName() string {
  if m != nil && m.FormName != nil {
    return *m.FormName
  }
  return ""
}

func (m *AutofillUploadContents) GetPasswordsRevealed() bool {
  if m != nil && m.PasswordsRevealed != nil {
    return *m.PasswordsRevealed
  }
  return false
}

func (m *AutofillUploadContents) GetPasswordHasLowercaseLetter() bool {
  if m != nil && m.PasswordHasLowercaseLetter != nil {
    return *m.PasswordHasLowercaseLetter
  }
  return false
}

func (m *AutofillUploadContents) GetPasswordHasUppercaseLetter() bool {
  if m != nil && m.PasswordHasUppercaseLetter != nil {
    return *m.PasswordHasUppercaseLetter
  }
  return false
}

func (m *AutofillUploadContents) GetPasswordHasNumeric() bool {
  if m != nil && m.PasswordHasNumeric != nil {
    return *m.PasswordHasNumeric
  }
  return false
}

func (m *AutofillUploadContents) GetPasswordHasSpecialSymbol() bool {
  if m != nil && m.PasswordHasSpecialSymbol != nil {
    return *m.PasswordHasSpecialSymbol
  }
  return false
}

func (m *AutofillUploadContents) GetPasswordLength() uint32 {
  if m != nil && m.PasswordLength != nil {
    return *m.PasswordLength
  }
  return 0
}

func (m *AutofillUploadContents) GetSubmissionEvent() AutofillUploadContents_SubmissionIndicatorEvent {
  if m != nil && m.SubmissionEvent != nil {
    return *m.SubmissionEvent
  }
  return AutofillUploadContents_NONE
}

func (m *AutofillUploadContents) GetLanguage() string {
  if m != nil && m.Language != nil {
    return *m.Language
  }
  return ""
}

func (m *AutofillUploadContents) GetRandomizedFormMetadata() *AutofillRandomizedFormMetadata {
  if m != nil {
    return m.RandomizedFormMetadata
  }
  return nil
}

// List of the fields in the form and their types.
type AutofillUploadContents_Field struct {
  // Field identification inside the current form.
  Signature *uint32 `protobuf:"fixed32,6,req,name=signature" json:"signature,omitempty"`
  // Type of the field, e.g. what type of personal information did the user
  // enter in that field before form submission. There is a predefined
  // enum of types located at
  // components/autofill/core/browser/field_types.h
  // AutoFillFieldType
  AutofillType []uint32 `protobuf:"fixed32,7,rep,name=autofill_type,json=autofillType" json:"autofill_type,omitempty"`
  // The value of the name attribute on the field, if present. Otherwise, the
  // value of the id attribute. See HTMLFormControlElement::nameForAutofill.
  // TODO(850606): Deprecate once randomized metadata is launched.
  Name *string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
  // The value of the autocomplete attribute on the field, if present.
  // TODO(850606): Deprecate once randomized metadata is launched.
  Autocomplete *string `protobuf:"bytes,9,opt,name=autocomplete" json:"autocomplete,omitempty"`
  // The type of input control for this field (e.g. text, textarea, email).
  // TODO(850606): Deprecate once randomized metadata is launched.
  Type *string `protobuf:"bytes,10,opt,name=type" json:"type,omitempty"`
  // The field-level metadata associated with this field, randomized.
  RandomizedFieldMetadata *AutofillRandomizedFieldMetadata `protobuf:"bytes,33,opt,name=randomized_field_metadata,json=randomizedFieldMetadata" json:"randomized_field_metadata,omitempty"`
  // The type of password generation, if it happened.
  GenerationType *AutofillUploadContents_Field_PasswordGenerationType `protobuf:"varint,17,opt,name=generation_type,json=generationType,enum=autofill.AutofillUploadContents_Field_PasswordGenerationType" json:"generation_type,omitempty"`
  // The value of the class attribute on the field, if present.
  // TODO(850606): Deprecate once randomized metadata is launched.
  CssClasses *string `protobuf:"bytes,19,opt,name=css_classes,json=cssClasses" json:"css_classes,omitempty"`
  // The properties mask (i.e. whether the field was autofilled, user
  // modified, etc.) See FieldPropertiesFlags.
  PropertiesMask *uint32 `protobuf:"varint,20,opt,name=properties_mask,json=propertiesMask" json:"properties_mask,omitempty"`
  // The value of the id attribute, if it differs from the name attribute.
  // Otherwise, this field is absent.
  // TODO(850606): Deprecate once randomized metadata is launched.
  Id *string `protobuf:"bytes,21,opt,name=id" json:"id,omitempty"`
  // True iff the user changed generated password. If there was no generation,
  // the field is absent.
  GeneratedPasswordChanged *bool `protobuf:"varint,22,opt,name=generated_password_changed,json=generatedPasswordChanged" json:"generated_password_changed,omitempty"`
  // The type of password-related vote. If |autofill_type| is not a USERNAME
  // or any PASSWORD vote, then the field is absent. This field describes the
  // context of the vote.
  VoteType               *AutofillUploadContents_Field_VoteType                     `protobuf:"varint,23,opt,name=vote_type,json=voteType,enum=autofill.AutofillUploadContents_Field_VoteType" json:"vote_type,omitempty"`
  AutofillTypeValidities []*AutofillUploadContents_Field_AutofillTypeValiditiesPair `protobuf:"bytes,24,rep,name=autofill_type_validities,json=autofillTypeValidities" json:"autofill_type_validities,omitempty"`
  XXX_NoUnkeyedLiteral   struct{}                                                   `json:"-"`
  XXX_unrecognized       []byte                                                     `json:"-"`
  XXX_sizecache          int32                                                      `json:"-"`
}

func (m *AutofillUploadContents_Field) Reset()         { *m = AutofillUploadContents_Field{} }
func (m *AutofillUploadContents_Field) String() string { return proto.CompactTextString(m) }
func (*AutofillUploadContents_Field) ProtoMessage()    {}
func (*AutofillUploadContents_Field) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5, 0}
}

func (m *AutofillUploadContents_Field) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillUploadContents_Field.Unmarshal(m, b)
}
func (m *AutofillUploadContents_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillUploadContents_Field.Marshal(b, m, deterministic)
}
func (m *AutofillUploadContents_Field) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillUploadContents_Field.Merge(m, src)
}
func (m *AutofillUploadContents_Field) XXX_Size() int {
  return xxx_messageInfo_AutofillUploadContents_Field.Size(m)
}
func (m *AutofillUploadContents_Field) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillUploadContents_Field.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillUploadContents_Field proto.InternalMessageInfo

func (m *AutofillUploadContents_Field) GetSignature() uint32 {
  if m != nil && m.Signature != nil {
    return *m.Signature
  }
  return 0
}

func (m *AutofillUploadContents_Field) GetAutofillType() []uint32 {
  if m != nil {
    return m.AutofillType
  }
  return nil
}

func (m *AutofillUploadContents_Field) GetName() string {
  if m != nil && m.Name != nil {
    return *m.Name
  }
  return ""
}

func (m *AutofillUploadContents_Field) GetAutocomplete() string {
  if m != nil && m.Autocomplete != nil {
    return *m.Autocomplete
  }
  return ""
}

func (m *AutofillUploadContents_Field) GetType() string {
  if m != nil && m.Type != nil {
    return *m.Type
  }
  return ""
}

func (m *AutofillUploadContents_Field) GetRandomizedFieldMetadata() *AutofillRandomizedFieldMetadata {
  if m != nil {
    return m.RandomizedFieldMetadata
  }
  return nil
}

func (m *AutofillUploadContents_Field) GetGenerationType() AutofillUploadContents_Field_PasswordGenerationType {
  if m != nil && m.GenerationType != nil {
    return *m.GenerationType
  }
  return AutofillUploadContents_Field_NO_GENERATION
}

func (m *AutofillUploadContents_Field) GetCssClasses() string {
  if m != nil && m.CssClasses != nil {
    return *m.CssClasses
  }
  return ""
}

func (m *AutofillUploadContents_Field) GetPropertiesMask() uint32 {
  if m != nil && m.PropertiesMask != nil {
    return *m.PropertiesMask
  }
  return 0
}

func (m *AutofillUploadContents_Field) GetId() string {
  if m != nil && m.Id != nil {
    return *m.Id
  }
  return ""
}

func (m *AutofillUploadContents_Field) GetGeneratedPasswordChanged() bool {
  if m != nil && m.GeneratedPasswordChanged != nil {
    return *m.GeneratedPasswordChanged
  }
  return false
}

func (m *AutofillUploadContents_Field) GetVoteType() AutofillUploadContents_Field_VoteType {
  if m != nil && m.VoteType != nil {
    return *m.VoteType
  }
  return AutofillUploadContents_Field_NO_INFORMATION
}

func (m *AutofillUploadContents_Field) GetAutofillTypeValidities() []*AutofillUploadContents_Field_AutofillTypeValiditiesPair {
  if m != nil {
    return m.AutofillTypeValidities
  }
  return nil
}

type AutofillUploadContents_Field_AutofillTypeValiditiesPair struct {
  Type                 *int32   `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
  Validity             []int32  `protobuf:"varint,2,rep,name=validity" json:"validity,omitempty"`
  XXX_NoUnkeyedLiteral struct{} `json:"-"`
  XXX_unrecognized     []byte   `json:"-"`
  XXX_sizecache        int32    `json:"-"`
}

func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) Reset() {
  *m = AutofillUploadContents_Field_AutofillTypeValiditiesPair{}
}
func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) String() string {
  return proto.CompactTextString(m)
}
func (*AutofillUploadContents_Field_AutofillTypeValiditiesPair) ProtoMessage() {}
func (*AutofillUploadContents_Field_AutofillTypeValiditiesPair) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{5, 0, 0}
}

func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair.Unmarshal(m, b)
}
func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair.Marshal(b, m, deterministic)
}
func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) XXX_Merge(src proto.Message) {
  xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair.Merge(m, src)
}
func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) XXX_Size() int {
  return xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair.Size(m)
}
func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) XXX_DiscardUnknown() {
  xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillUploadContents_Field_AutofillTypeValiditiesPair proto.InternalMessageInfo

func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) GetType() int32 {
  if m != nil && m.Type != nil {
    return *m.Type
  }
  return 0
}

func (m *AutofillUploadContents_Field_AutofillTypeValiditiesPair) GetValidity() []int32 {
  if m != nil {
    return m.Validity
  }
  return nil
}

// This proto contains information about the validity of each field in an
// autofill profile. It is used to transfer the results of running the profile
// validation pipeline on the server side to the client via ChromeSync
// PriorityPreferences. An identical copy of this proto is maintained in
// the server code base.
type ProfileValidityMap struct {
  // Map from autofill type to the validity of its value in the profile.
  //
  // Key should be one of the enum values from ServerFieldType. Values should be
  // from the AutofillProfile::ValidityState. Plain integers are used
  // instead of enums because proto2 treats unknown enum values as unknown
  // fields, which is confusing when the enums are in maps.
  FieldValidityStates  map[int32]int32 `protobuf:"bytes,1,rep,name=field_validity_states,json=fieldValidityStates" json:"field_validity_states,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
  XXX_NoUnkeyedLiteral struct{}        `json:"-"`
  XXX_unrecognized     []byte          `json:"-"`
  XXX_sizecache        int32           `json:"-"`
}

func (m *ProfileValidityMap) Reset()         { *m = ProfileValidityMap{} }
func (m *ProfileValidityMap) String() string { return proto.CompactTextString(m) }
func (*ProfileValidityMap) ProtoMessage()    {}
func (*ProfileValidityMap) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *ProfileValidityMap) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_ProfileValidityMap.Unmarshal(m, b)
}
func (m *ProfileValidityMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_ProfileValidityMap.Marshal(b, m, deterministic)
}
func (m *ProfileValidityMap) XXX_Merge(src proto.Message) {
  xxx_messageInfo_ProfileValidityMap.Merge(m, src)
}
func (m *ProfileValidityMap) XXX_Size() int {
  return xxx_messageInfo_ProfileValidityMap.Size(m)
}
func (m *ProfileValidityMap) XXX_DiscardUnknown() {
  xxx_messageInfo_ProfileValidityMap.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileValidityMap proto.InternalMessageInfo

func (m *ProfileValidityMap) GetFieldValidityStates() map[int32]int32 {
  if m != nil {
    return m.FieldValidityStates
  }
  return nil
}

// Map from profile GUIDs to profile validity maps for that profile. Each
// message should contain entries for all profiles from a single user.
type UserProfileValidityMap struct {
  ProfileValidity      map[string]*ProfileValidityMap `protobuf:"bytes,1,rep,name=profile_validity,json=profileValidity" json:"profile_validity,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
  XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
  XXX_unrecognized     []byte                         `json:"-"`
  XXX_sizecache        int32                          `json:"-"`
}

func (m *UserProfileValidityMap) Reset()         { *m = UserProfileValidityMap{} }
func (m *UserProfileValidityMap) String() string { return proto.CompactTextString(m) }
func (*UserProfileValidityMap) ProtoMessage()    {}
func (*UserProfileValidityMap) Descriptor() ([]byte, []int) {
  return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *UserProfileValidityMap) XXX_Unmarshal(b []byte) error {
  return xxx_messageInfo_UserProfileValidityMap.Unmarshal(m, b)
}
func (m *UserProfileValidityMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
  return xxx_messageInfo_UserProfileValidityMap.Marshal(b, m, deterministic)
}
func (m *UserProfileValidityMap) XXX_Merge(src proto.Message) {
  xxx_messageInfo_UserProfileValidityMap.Merge(m, src)
}
func (m *UserProfileValidityMap) XXX_Size() int {
  return xxx_messageInfo_UserProfileValidityMap.Size(m)
}
func (m *UserProfileValidityMap) XXX_DiscardUnknown() {
  xxx_messageInfo_UserProfileValidityMap.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfileValidityMap proto.InternalMessageInfo

func (m *UserProfileValidityMap) GetProfileValidity() map[string]*ProfileValidityMap {
  if m != nil {
    return m.ProfileValidity
  }
  return nil
}

func init() {
  proto.RegisterEnum("autofill.AutofillRandomizedValue_EncodingType", AutofillRandomizedValue_EncodingType_name, AutofillRandomizedValue_EncodingType_value)
  proto.RegisterEnum("autofill.AutofillUploadContents_SubmissionIndicatorEvent", AutofillUploadContents_SubmissionIndicatorEvent_name, AutofillUploadContents_SubmissionIndicatorEvent_value)
  proto.RegisterEnum("autofill.AutofillUploadContents_Field_PasswordGenerationType", AutofillUploadContents_Field_PasswordGenerationType_name, AutofillUploadContents_Field_PasswordGenerationType_value)
  proto.RegisterEnum("autofill.AutofillUploadContents_Field_VoteType", AutofillUploadContents_Field_VoteType_name, AutofillUploadContents_Field_VoteType_value)
  proto.RegisterType((*AutofillQueryContents)(nil), "autofill.AutofillQueryContents")
  proto.RegisterType((*AutofillQueryContents_Form)(nil), "autofill.AutofillQueryContents.Form")
  proto.RegisterType((*AutofillQueryContents_Form_Field)(nil), "autofill.AutofillQueryContents.Form.Field")
  proto.RegisterType((*AutofillQueryResponseContents)(nil), "autofill.AutofillQueryResponseContents")
  proto.RegisterType((*AutofillQueryResponseContents_Field)(nil), "autofill.AutofillQueryResponseContents.Field")
  proto.RegisterType((*AutofillQueryResponseContents_Field_FieldPrediction)(nil), "autofill.AutofillQueryResponseContents.Field.FieldPrediction")
  proto.RegisterType((*AutofillRandomizedValue)(nil), "autofill.AutofillRandomizedValue")
  proto.RegisterType((*AutofillRandomizedFormMetadata)(nil), "autofill.AutofillRandomizedFormMetadata")
  proto.RegisterType((*AutofillRandomizedFieldMetadata)(nil), "autofill.AutofillRandomizedFieldMetadata")
  proto.RegisterType((*AutofillUploadContents)(nil), "autofill.AutofillUploadContents")
  proto.RegisterType((*AutofillUploadContents_Field)(nil), "autofill.AutofillUploadContents.Field")
  proto.RegisterType((*AutofillUploadContents_Field_AutofillTypeValiditiesPair)(nil), "autofill.AutofillUploadContents.Field.AutofillTypeValiditiesPair")
  proto.RegisterType((*ProfileValidityMap)(nil), "autofill.ProfileValidityMap")
  proto.RegisterMapType((map[int32]int32)(nil), "autofill.ProfileValidityMap.FieldValidityStatesEntry")
  proto.RegisterType((*UserProfileValidityMap)(nil), "autofill.UserProfileValidityMap")
  proto.RegisterMapType((map[string]*ProfileValidityMap)(nil), "autofill.UserProfileValidityMap.ProfileValidityEntry")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
  // 1981 bytes of a gzipped FileDescriptorProto
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xcd, 0x72, 0xdb, 0xc8,
  0x11, 0x5e, 0xfe, 0x49, 0x64, 0xeb, 0x0f, 0x1e, 0xcb, 0x32, 0x4c, 0xff, 0xc9, 0x4c, 0x76, 0xc3,
  0x4d, 0x95, 0x15, 0x5b, 0x59, 0x7b, 0x6d, 0xd7, 0x7a, 0x6b, 0x21, 0x72, 0x24, 0xa1, 0x8a, 0x04,
  0x99, 0x01, 0x28, 0xef, 0x9e, 0x66, 0x61, 0x62, 0x2c, 0xa1, 0x0c, 0x02, 0x08, 0x00, 0x6a, 0x8b,
  0xc9, 0x03, 0xe4, 0x29, 0xf2, 0x0c, 0xc9, 0x25, 0x87, 0x3c, 0x40, 0x2a, 0x2f, 0x91, 0x4b, 0x2a,
  0x97, 0xad, 0x5c, 0xf3, 0x00, 0x49, 0xcd, 0x0c, 0x01, 0x82, 0x22, 0x65, 0x73, 0x4f, 0xe1, 0x81,
  0x35, 0xd3, 0xdd, 0x5f, 0x4f, 0x7f, 0x3d, 0xd3, 0xd3, 0x03, 0xd8, 0x8c, 0x59, 0x74, 0xc9, 0xa2,
  0x83, 0x30, 0x0a, 0x92, 0x00, 0x55, 0xed, 0x71, 0x12, 0xbc, 0x73, 0x3d, 0xaf, 0x7e, 0x37, 0xb4,
  0xe3, 0xf8, 0x87, 0x20, 0x72, 0x68, 0xc4, 0x7e, 0x3b, 0x76, 0x23, 0x36, 0x62, 0x7e, 0x12, 0x4b,
  0xb3, 0xc6, 0x9f, 0x8b, 0x70, 0x4b, 0x9b, 0x5a, 0xfe, 0x66, 0xcc, 0xa2, 0x49, 0x2b, 0xf0, 0x13,
  0xae, 0x47, 0x9f, 0xc2, 0xf6, 0xd0, 0x73, 0x99, 0x9f, 0xd0, 0x4b, 0x16, 0xc5, 0x6e, 0xe0, 0xab,
  0x85, 0xfd, 0x62, 0xb3, 0x46, 0xb6, 0xa4, 0xf4, 0x4c, 0x0a, 0xd1, 0x0b, 0x28, 0xbf, 0x0b, 0xa2,
  0x91, 0x5a, 0xdc, 0x2f, 0x35, 0xe1, 0xf0, 0xe7, 0x07, 0xe9, 0xb2, 0x07, 0x4b, 0xbd, 0x1e, 0x1c,
  0x07, 0xd1, 0x88, 0x08, 0x44, 0xfd, 0x2f, 0x05, 0x28, 0xf3, 0x29, 0xba, 0x07, 0xb5, 0xd8, 0x3d,
  0xf7, 0xed, 0x64, 0x1c, 0x31, 0xb5, 0xb4, 0x5f, 0x6c, 0xae, 0x91, 0x99, 0x00, 0x7d, 0x03, 0x95,
  0x77, 0x2e, 0xf3, 0x1c, 0xb5, 0x2c, 0x56, 0xf8, 0xe5, 0x2a, 0x2b, 0x1c, 0x1c, 0x73, 0x04, 0x91,
  0xc0, 0x7a, 0x17, 0x2a, 0x62, 0x3e, 0xbf, 0x50, 0x65, 0xbf, 0xd8, 0x5c, 0xcf, 0x2f, 0x84, 0xa0,
  0xec, 0xdb, 0x23, 0xa6, 0x56, 0xf7, 0x0b, 0xcd, 0x1a, 0x11, 0x63, 0x2e, 0x4b, 0x26, 0x21, 0x53,
  0x6b, 0x52, 0xc6, 0xc7, 0x8d, 0xff, 0x94, 0xe0, 0xfe, 0xdc, 0xd2, 0x84, 0xc5, 0x61, 0xe0, 0xc7,
  0x2c, 0x4b, 0xdd, 0x2f, 0x60, 0x67, 0x1c, 0x7a, 0x81, 0x9d, 0x65, 0xdc, 0x51, 0x0b, 0xfb, 0x85,
  0x66, 0x95, 0x6c, 0x4b, 0x31, 0x99, 0x4a, 0x51, 0x2b, 0xe5, 0x26, 0xb3, 0xf7, 0xf8, 0x1a, 0x6e,
  0x57, 0x17, 0x98, 0xa7, 0xf7, 0xaf, 0x62, 0xca, 0xef, 0x39, 0xdc, 0x0e, 0x2e, 0x59, 0x64, 0x7b,
  0x1e, 0xe5, 0x91, 0xd2, 0x30, 0x62, 0x8e, 0x3b, 0x4c, 0xf8, 0xde, 0x95, 0x04, 0xdb, 0x5b, 0x53,
  0xb5, 0x35, 0x09, 0x59, 0x3f, 0x53, 0x22, 0x0a, 0x1b, 0x33, 0xd3, 0x58, 0x5d, 0xdf, 0x2f, 0x35,
  0x37, 0x0e, 0x5f, 0xff, 0xa4, 0x60, 0xe4, 0xff, 0xcc, 0x27, 0xc9, 0x7b, 0x44, 0x6f, 0xe0, 0xd6,
  0xd2, 0x43, 0x28, 0xf2, 0xba, 0x71, 0xd8, 0x98, 0x2d, 0xd5, 0x9f, 0x9a, 0x91, 0x9c, 0x95, 0x19,
  0xb2, 0x21, 0xd9, 0x0d, 0x97, 0x68, 0xea, 0x17, 0xb0, 0x73, 0x65, 0xe1, 0x6c, 0xcb, 0x78, 0xc6,
  0xd7, 0xe5, 0x96, 0x21, 0x0d, 0xee, 0x8f, 0xec, 0x09, 0x1d, 0xc7, 0x22, 0x27, 0x7c, 0x21, 0xe6,
  0xd0, 0xd0, 0xb3, 0x87, 0xec, 0x22, 0xf0, 0x1c, 0x16, 0xa9, 0x45, 0xb1, 0x3d, 0xf5, 0x91, 0x3d,
  0x19, 0xc4, 0x3c, 0x33, 0xd2, 0xa4, 0x3f, 0xb3, 0x68, 0xfc, 0x58, 0x84, 0xdb, 0x69, 0x1e, 0x88,
  0xed, 0x3b, 0xc1, 0xc8, 0xfd, 0x1d, 0x73, 0xce, 0x6c, 0x6f, 0xcc, 0x90, 0x0f, 0x5b, 0xcc, 0x1f,
  0x06, 0x8e, 0xeb, 0x9f, 0xd3, 0x6c, 0xed, 0xed, 0xc3, 0x83, 0xc5, 0x0c, 0x5e, 0x41, 0x1e, 0xe0,
  0x29, 0x8c, 0x6f, 0xc8, 0xab, 0x3b, 0x03, 0xc3, 0xec, 0xe3, 0x96, 0x7e, 0xac, 0xe3, 0x36, 0xc5,
  0x46, 0xab, 0xd7, 0xd6, 0x8d, 0x13, 0x6a, 0x7d, 0xd7, 0xc7, 0x64, 0x93, 0xe5, 0x0c, 0xd1, 0x23,
  0x90, 0x73, 0xe6, 0xd0, 0xb7, 0x6e, 0x12, 0x8b, 0xe8, 0x37, 0xc9, 0xc6, 0x54, 0x76, 0xe4, 0x26,
  0x71, 0xe3, 0xaf, 0x05, 0xd8, 0xcc, 0x3b, 0x47, 0x9f, 0xc1, 0xf5, 0xee, 0x95, 0xff, 0xa6, 0xbf,
  0x02, 0xaa, 0x41, 0xe5, 0x48, 0xb7, 0xe8, 0x13, 0xe5, 0x93, 0x74, 0xf8, 0x54, 0xc9, 0xa4, 0x87,
  0x4a, 0x31, 0x1d, 0xfe, 0x5a, 0x29, 0xa5, 0xc3, 0x2f, 0x94, 0x72, 0x3a, 0x7c, 0xa6, 0x54, 0xd2,
  0xe1, 0x73, 0x65, 0x2d, 0x1d, 0x7e, 0xa9, 0xac, 0xa3, 0x2d, 0xa8, 0xe1, 0x33, 0x6c, 0xd0, 0x23,
  0xdd, 0x32, 0x95, 0x2a, 0xda, 0x84, 0x6a, 0xaf, 0xdd, 0x96, 0xb3, 0x1a, 0x9f, 0x69, 0x9d, 0x8e,
  0x9c, 0x41, 0xe3, 0x6f, 0x05, 0x78, 0xb0, 0x98, 0x30, 0x5e, 0xd7, 0x5d, 0x96, 0xd8, 0x8e, 0x9d,
  0xd8, 0xe8, 0x29, 0x14, 0x5d, 0x59, 0x54, 0x1b, 0x87, 0x8f, 0x3e, 0x9a, 0x66, 0x52, 0x74, 0x1d,
  0xf4, 0x6c, 0x5a, 0xde, 0xc5, 0x55, 0x41, 0xf2, 0x06, 0x78, 0x09, 0x6b, 0x76, 0x5a, 0x42, 0x2b,
  0x02, 0xa7, 0x80, 0xc6, 0x3f, 0xcb, 0xf0, 0x70, 0x09, 0x0f, 0x7e, 0x5e, 0xff, 0x0f, 0x44, 0x9e,
  0x4d, 0xeb, 0x62, 0x65, 0x1a, 0xb2, 0x74, 0xbe, 0x84, 0x8a, 0x67, 0xbf, 0x65, 0x9e, 0x5a, 0x5e,
  0x15, 0x27, 0xed, 0xd1, 0x37, 0x00, 0x76, 0xe4, 0xda, 0x54, 0xa2, 0x2b, 0xab, 0xa2, 0x6b, 0x1c,
  0xd4, 0x11, 0x1e, 0x3a, 0xa0, 0x08, 0x0f, 0x0e, 0x8b, 0x87, 0x91, 0x1b, 0x8a, 0x4d, 0x58, 0x5b,
  0xd5, 0xcf, 0x0e, 0x87, 0xb6, 0x67, 0x48, 0xf4, 0x35, 0xd4, 0x86, 0x71, 0x4c, 0x87, 0x9e, 0x1d,
  0xf3, 0x2b, 0x6e, 0x45, 0x37, 0xd5, 0x61, 0x1c, 0xb7, 0x38, 0x04, 0xb5, 0x60, 0x23, 0x7f, 0x63,
  0x54, 0x57, 0xf5, 0x90, 0x47, 0xa1, 0x1e, 0x20, 0xd7, 0x77, 0x13, 0xd7, 0xf6, 0xe8, 0x25, 0xd7,
  0xd2, 0x0b, 0x3b, 0xbe, 0x98, 0xde, 0x82, 0x2b, 0xf8, 0x52, 0xa6, 0x60, 0x31, 0x3b, 0xb5, 0xe3,
  0x8b, 0xc6, 0xbf, 0x77, 0x61, 0x2f, 0xb5, 0x1e, 0x88, 0xe6, 0xf2, 0x53, 0x1b, 0xf8, 0xa7, 0xb0,
  0xcd, 0xdb, 0x31, 0x9d, 0x75, 0xc6, 0xa2, 0x68, 0xc1, 0x5b, 0x5c, 0x6a, 0x66, 0xdd, 0xf1, 0x05,
  0xa8, 0x31, 0x1b, 0x06, 0xbe, 0x63, 0x47, 0x13, 0x7a, 0x05, 0xd0, 0xd8, 0x2f, 0x34, 0xd7, 0xc8,
  0x5e, 0xa6, 0x3f, 0x9e, 0x43, 0xfe, 0x0c, 0xb6, 0x52, 0x62, 0xfc, 0x06, 0x76, 0x44, 0x2f, 0xaa,
  0x92, 0xcd, 0x54, 0x38, 0x88, 0x99, 0xc3, 0xaf, 0x34, 0x5e, 0x0f, 0xfc, 0x7a, 0x8e, 0x99, 0x9f,
  0xa8, 0x65, 0x11, 0xea, 0x06, 0x97, 0xf5, 0xa5, 0x08, 0x7d, 0x95, 0x36, 0xcb, 0x8a, 0x68, 0x96,
  0x9f, 0x2d, 0xa6, 0x6b, 0x3e, 0x01, 0x73, 0x5d, 0x12, 0x7d, 0x0e, 0x8a, 0x2c, 0xcb, 0x5c, 0xdc,
  0x5b, 0x22, 0xee, 0x1d, 0x29, 0x9f, 0x05, 0xfc, 0x04, 0x76, 0xbd, 0xe0, 0xdc, 0xf5, 0xaf, 0xd2,
  0xdc, 0x16, 0xe6, 0x48, 0xe8, 0xe6, 0x29, 0x3e, 0x00, 0x88, 0xc7, 0x6f, 0x47, 0x6e, 0x2c, 0xd2,
  0xbc, 0x23, 0x9a, 0x49, 0x4e, 0x82, 0xee, 0x42, 0x4d, 0xf8, 0x12, 0x75, 0xab, 0x88, 0xb7, 0x44,
  0x95, 0x0b, 0x0c, 0x5e, 0x98, 0x8f, 0x01, 0xa5, 0xbd, 0x2d, 0xa6, 0x11, 0xbb, 0x64, 0xb6, 0xc7,
  0x1c, 0x55, 0x15, 0x4e, 0x6e, 0x64, 0x1a, 0x32, 0x55, 0xf0, 0x5e, 0x96, 0xf5, 0xd2, 0x0b, 0x3b,
  0xa6, 0x5e, 0xf0, 0x03, 0x8b, 0x86, 0x76, 0xcc, 0xa8, 0xc7, 0x92, 0x84, 0x45, 0xea, 0x1d, 0xd9,
  0xcb, 0x52, 0xa3, 0x53, 0x3b, 0xee, 0xa4, 0x26, 0x1d, 0x61, 0xb1, 0xe0, 0x62, 0x1c, 0x86, 0xf3,
  0x2e, 0xea, 0x0b, 0x2e, 0x06, 0xa9, 0xc9, 0xd4, 0xc5, 0x13, 0xd8, 0x9d, 0x73, 0xe1, 0x8f, 0x47,
  0x2c, 0x72, 0x87, 0xea, 0x5d, 0x81, 0x44, 0x39, 0xa4, 0x21, 0x35, 0xe8, 0x35, 0xdc, 0x9d, 0x43,
  0xc4, 0x21, 0x1b, 0xf2, 0x3a, 0x88, 0x27, 0xa3, 0xb7, 0x81, 0xa7, 0xde, 0x13, 0x40, 0x35, 0x07,
  0x34, 0xa5, 0x81, 0x29, 0xf4, 0xfc, 0x4d, 0x95, 0xc1, 0x3d, 0xe6, 0x9f, 0x27, 0x17, 0xea, 0xfd,
  0xfd, 0x42, 0x73, 0x8b, 0x6c, 0xa7, 0xe2, 0x8e, 0x90, 0x22, 0x07, 0x94, 0x59, 0xe6, 0x29, 0xbb,
  0xe4, 0xa7, 0xe9, 0x81, 0xe8, 0xc7, 0x2f, 0x3f, 0x7a, 0x62, 0xcc, 0x0c, 0xa8, 0xfb, 0x8e, 0x3b,
  0xb4, 0x93, 0x20, 0xc2, 0xdc, 0x01, 0xd9, 0x99, 0xb9, 0x14, 0x02, 0x54, 0x87, 0xaa, 0x67, 0xfb,
  0xe7, 0x63, 0xfb, 0x9c, 0xa9, 0x0f, 0xe5, 0x86, 0xa6, 0x73, 0xf4, 0x16, 0xd4, 0x28, 0x2b, 0x5c,
  0x79, 0x88, 0x46, 0xd3, 0xfb, 0x5e, 0xdd, 0x17, 0xa5, 0xde, 0xfc, 0x50, 0xa9, 0xe7, 0x1b, 0x1d,
  0xd9, 0x8b, 0x96, 0xca, 0xeb, 0x3f, 0xd6, 0x96, 0x3e, 0x6a, 0xd7, 0xae, 0x3e, 0x6a, 0xf3, 0xc5,
  0x27, 0xae, 0x7f, 0xfe, 0xb8, 0x5b, 0x9f, 0x15, 0x9f, 0x78, 0x1b, 0x2c, 0x7b, 0xf9, 0x36, 0x40,
  0xd8, 0x0c, 0x83, 0x51, 0xe8, 0xb1, 0x24, 0x7d, 0x01, 0xcf, 0xc9, 0xb2, 0xa7, 0x16, 0xcc, 0x5e,
  0xc7, 0x88, 0xc1, 0x9d, 0x3c, 0x79, 0x1e, 0xe2, 0x8c, 0xfd, 0x23, 0xc1, 0xfe, 0xf3, 0x0f, 0xb2,
  0xcf, 0xb7, 0x47, 0x72, 0x3b, 0xba, 0xa6, 0x6f, 0xbe, 0x83, 0x9d, 0x73, 0xe6, 0xb3, 0xc8, 0x16,
  0x25, 0x2d, 0xa2, 0xb8, 0x21, 0x36, 0xf9, 0xf5, 0x6a, 0xd7, 0x42, 0xf6, 0xd0, 0x3c, 0xc9, 0xbc,
  0xf0, 0x54, 0x90, 0xed, 0xf3, 0xb9, 0x39, 0x7a, 0x08, 0x1b, 0x59, 0xd7, 0x60, 0xb1, 0x7a, 0x53,
  0x30, 0x85, 0xb4, 0x29, 0x30, 0xf1, 0xd6, 0x0f, 0xa3, 0x20, 0x64, 0x51, 0xe2, 0xb2, 0x98, 0x8e,
  0xec, 0xf8, 0xbd, 0xba, 0x3b, 0x3d, 0x97, 0x99, 0xb8, 0x6b, 0xc7, 0xef, 0xd1, 0xb6, 0xe8, 0xf4,
  0xb7, 0x84, 0x03, 0xde, 0xc6, 0xbf, 0x82, 0xfa, 0x74, 0x2d, 0xfe, 0x16, 0x4d, 0x8f, 0xf6, 0xf0,
  0xc2, 0xf6, 0xcf, 0x99, 0xa3, 0xee, 0xc9, 0x72, 0xc8, 0x2c, 0xd2, 0x70, 0x5b, 0x52, 0x8f, 0x3a,
  0x50, 0xbb, 0x0c, 0x12, 0x26, 0x99, 0xdf, 0x16, 0xcc, 0x7f, 0xb5, 0x22, 0xf3, 0xb3, 0x20, 0x61,
  0x82, 0x6b, 0xf5, 0x72, 0x3a, 0x42, 0xbf, 0x07, 0x75, 0xee, 0x94, 0xf0, 0xe6, 0xe4, 0x3a, 0x2e,
  0x8f, 0x5d, 0x55, 0xc5, 0xd7, 0x80, 0xb6, 0xa2, 0x73, 0x2d, 0x77, 0xae, 0xce, 0x32, 0x27, 0x7d,
  0xdb, 0x8d, 0xc8, 0x9e, 0xbd, 0x54, 0x57, 0xef, 0x40, 0xfd, 0x7a, 0x54, 0xee, 0x39, 0x5f, 0x6c,
  0x56, 0xa6, 0x67, 0xac, 0x0e, 0xd5, 0x69, 0x80, 0x13, 0xf1, 0xe5, 0x54, 0x21, 0xd9, 0xbc, 0xf1,
  0xa7, 0x22, 0xec, 0x2d, 0xdf, 0x5b, 0x74, 0x03, 0xb6, 0x8c, 0x1e, 0x3d, 0xc1, 0x06, 0x26, 0x9a,
  0xa5, 0xf7, 0x0c, 0xe5, 0x13, 0xf4, 0x1c, 0x0e, 0xb5, 0x81, 0xd5, 0xeb, 0x6a, 0x96, 0xde, 0xd2,
  0x3a, 0x9d, 0xef, 0xa8, 0x45, 0xf4, 0x93, 0x13, 0x4c, 0x70, 0x3b, 0x67, 0x47, 0x7b, 0x06, 0x35,
  0xf5, 0x13, 0x83, 0x0e, 0xfa, 0xf4, 0xb8, 0x47, 0xba, 0x4a, 0x01, 0x7d, 0x0d, 0xaf, 0x56, 0xc3,
  0xb5, 0x4e, 0x35, 0xe3, 0x04, 0xd3, 0xbe, 0x66, 0x9a, 0x6f, 0x7a, 0xa4, 0x2d, 0xf1, 0x45, 0xf4,
  0x14, 0x1e, 0x77, 0x35, 0x63, 0xb0, 0xfa, 0x92, 0x25, 0xf4, 0x12, 0x9e, 0x7d, 0x14, 0xb2, 0x74,
  0xb5, 0x32, 0xba, 0x07, 0xaa, 0x7e, 0x62, 0xf4, 0xae, 0xd8, 0xf7, 0x7b, 0xfd, 0x41, 0x5f, 0xa9,
  0x34, 0xfe, 0x58, 0x80, 0x6a, 0x7a, 0x26, 0x10, 0x82, 0x6d, 0xa3, 0x47, 0x75, 0x83, 0x23, 0xd3,
  0x24, 0xed, 0x01, 0x6a, 0x11, 0xdc, 0xc6, 0x86, 0xa5, 0x6b, 0x1d, 0x93, 0x12, 0x3c, 0x30, 0x71,
  0x5b, 0x29, 0x20, 0x15, 0x76, 0x07, 0x26, 0x26, 0x86, 0xd6, 0xc5, 0xb4, 0x77, 0x86, 0xc9, 0x1b,
  0xa2, 0x5b, 0x16, 0x36, 0x94, 0x22, 0xba, 0x09, 0x3b, 0x99, 0x06, 0xb7, 0x75, 0x0b, 0xb7, 0x95,
  0x12, 0x77, 0x7d, 0xa4, 0x99, 0x98, 0x9e, 0xe2, 0x01, 0xd1, 0x4d, 0x4b, 0x6f, 0x29, 0x65, 0x6e,
  0x78, 0x6a, 0x75, 0x3b, 0xb4, 0xd5, 0xd1, 0x4c, 0x93, 0x7f, 0x99, 0x10, 0xa5, 0xc2, 0x3f, 0x15,
  0x8e, 0x75, 0x62, 0x5a, 0x74, 0x60, 0x62, 0x65, 0xad, 0xf1, 0x87, 0x12, 0xa8, 0xd7, 0x5d, 0xcc,
  0xa8, 0x0a, 0x65, 0xa3, 0x67, 0x60, 0xe5, 0x13, 0x1e, 0x8d, 0x70, 0xc5, 0x23, 0xa7, 0xe6, 0xe0,
  0xa8, 0xab, 0x9b, 0x26, 0x8f, 0xbf, 0xc0, 0xe9, 0x9b, 0x3c, 0x92, 0x76, 0xaf, 0x35, 0xe8, 0x62,
  0xc3, 0xa2, 0x86, 0x76, 0xa6, 0x9f, 0x48, 0x76, 0x45, 0x7e, 0x2a, 0xbe, 0x3d, 0x25, 0xd4, 0x1c,
  0xb4, 0x5a, 0x18, 0xb7, 0xd3, 0x48, 0x8f, 0x89, 0x40, 0x60, 0x4b, 0x6b, 0x9d, 0xe2, 0xb6, 0x52,
  0x46, 0x75, 0xd8, 0x6b, 0xe3, 0x3e, 0xc1, 0x2d, 0xcd, 0xc2, 0x6d, 0x2a, 0x77, 0x82, 0x9a, 0xda,
  0x19, 0x56, 0x2a, 0x42, 0xd7, 0xeb, 0xd2, 0xee, 0xc0, 0x92, 0x99, 0xd5, 0x8e, 0x2d, 0x4c, 0xe8,
  0xb7, 0xa7, 0x44, 0x59, 0xe3, 0x27, 0xac, 0x4f, 0x7a, 0x67, 0x3a, 0x8f, 0x45, 0xec, 0x1d, 0xc7,
  0xc8, 0x9d, 0x11, 0x9b, 0x6c, 0x69, 0xc4, 0xa2, 0x39, 0x0b, 0xda, 0xe9, 0x69, 0x6d, 0x65, 0x1d,
  0x7d, 0x01, 0x4f, 0x72, 0xeb, 0x1d, 0xeb, 0x9d, 0xce, 0xc7, 0x51, 0x55, 0x7e, 0x2e, 0x17, 0x51,
  0xba, 0xd1, 0x1f, 0x58, 0x14, 0x77, 0x30, 0x27, 0x6f, 0x7e, 0x00, 0x5f, 0xe3, 0xa9, 0xea, 0x93,
  0xde, 0x91, 0x76, 0xd4, 0xc1, 0x0b, 0x89, 0x84, 0xc6, 0xdf, 0x0b, 0x80, 0xfa, 0x11, 0xaf, 0xd4,
  0xb4, 0x4a, 0x27, 0x5d, 0x3b, 0x44, 0x2e, 0xdc, 0x92, 0xf7, 0x7c, 0x5a, 0x84, 0x34, 0x4e, 0xec,
  0x84, 0xc5, 0x6a, 0x41, 0x5c, 0x1d, 0xcf, 0x72, 0x5f, 0xf7, 0x0b, 0x60, 0x79, 0x6d, 0xa4, 0x02,
  0x53, 0xe0, 0xb0, 0x9f, 0x44, 0x13, 0x72, 0xf3, 0xdd, 0xa2, 0xa6, 0x7e, 0x0c, 0xea, 0x75, 0x00,
  0xa4, 0x40, 0xe9, 0x3d, 0x9b, 0x88, 0x6f, 0xa9, 0x0a, 0xe1, 0x43, 0xb4, 0x0b, 0x15, 0xf1, 0xca,
  0x16, 0x9f, 0x4a, 0x15, 0x22, 0x27, 0xaf, 0x8a, 0x2f, 0x0a, 0x8d, 0x7f, 0x14, 0x60, 0x6f, 0x10,
  0xb3, 0x68, 0x09, 0x9b, 0xef, 0x41, 0x09, 0xa5, 0x34, 0xe3, 0xb3, 0x48, 0x64, 0x39, 0xf6, 0x2a,
  0x3f, 0x49, 0x64, 0x27, 0x9c, 0x97, 0xd6, 0xbf, 0x87, 0xdd, 0x65, 0x86, 0x79, 0x02, 0x35, 0x49,
  0xe0, 0x30, 0x4f, 0x60, 0xe3, 0xf0, 0xde, 0x87, 0x32, 0x99, 0xa3, 0x77, 0x54, 0x3c, 0x2d, 0xfd,
  0x2f, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x15, 0x78, 0x21, 0x0f, 0x14, 0x00, 0x00,
}
