{
  "comments": [
    {
      "key": {
        "uuid": "559e6d51_a4e6c69e",
        "filename": "dashboard/dashboard/pinpoint/elements/jobs-page/new-job-fab.html",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-22T15:42:32Z",
      "side": 1,
      "message": "This is the one where I\u0027m not sure. Clicking \"rerun job\" on the pinpoint UI should replace \u0027tir_label\u0027 in old jobs with \u0027grouping_label\u0027 in requests for new jobs.\n\nBut couldn\u0027t find the right point where arguments are passed to this template.\n\nThe other alternative would be to always write both \u0027tir_label\u0027 and \u0027grouping_label\u0027?",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579fef9a_8c0f39a9",
        "filename": "dashboard/dashboard/pinpoint/elements/jobs-page/new-job-fab.html",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-10-28T00:48:13Z",
      "side": 1,
      "message": "I prefer adding both \u0027tir_label\u0027 and \u0027grouping_label\u0027 for a time, and leaving breadcrumbs to allow us to remove the deprecated input later.\n\nUnfortunately the way these values are set up is through the \u0027arguments\u0027 member of the job object, but that\u0027s just a dictionary (or object in JS). We store and serve whatever the previous arguments were. So if you want to translate the tir_label into grouping_label, you\u0027d have to write a special function that does the translation somewhere. My Polymer-fu is not strong enough to give you a hint as to how to make that happen.",
      "parentUuid": "559e6d51_a4e6c69e",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c6025d1_5d63da93",
        "filename": "dashboard/dashboard/pinpoint/elements/jobs-page/new-job-fab.html",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-28T11:40:51Z",
      "side": 1,
      "message": "Got it. Will keep both for now.",
      "parentUuid": "579fef9a_8c0f39a9",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d192c4be_1812fd60",
        "filename": "dashboard/dashboard/pinpoint/models/quest/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-22T15:42:32Z",
      "side": 1,
      "message": "I believe this is the only point where we read tir_label (or will read grouping_label) from the job arguments.",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f0e548a_ec92bf4b",
        "filename": "dashboard/dashboard/pinpoint/models/quest/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-10-28T00:48:13Z",
      "side": 1,
      "message": "For now, yes -- but there are evaluators that use the tir_label as well, that aren\u0027t yet part of the normal course of Pinpoint job execution, but will be soon-ish.\n\nnit: Maybe something like this instead?\n\ngrouping_label \u003d arguments.get(\u0027grouping_label\u0027) or arguments.get(\u0027tir_label\u0027)",
      "parentUuid": "d192c4be_1812fd60",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c535051a_22af969a",
        "filename": "dashboard/dashboard/pinpoint/models/quest/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-28T11:41:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f0e548a_ec92bf4b",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5654e375_266dc83c",
        "filename": "dashboard/dashboard/pinpoint/models/tasks/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-22T15:42:32Z",
      "side": 1,
      "message": "Also wanted to check here. Is there a way that old tasks that were written using tir_label may suddenly be read by a new pinpoint instance which is expecting grouping_label? I hope not.",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beaa2ff7_923e1c64",
        "filename": "dashboard/dashboard/pinpoint/models/tasks/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-10-28T00:48:13Z",
      "side": 1,
      "message": "Yes, that\u0027s possible (and is a constant source of pain for us when changing these state-dependent codepaths). In this case however, we don\u0027t run this code yet so the risk of non-backwards-compatible changes is low to none.",
      "parentUuid": "5654e375_266dc83c",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebd61330_d0c2d487",
        "filename": "dashboard/dashboard/pinpoint/models/tasks/read_value.py",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-28T11:40:51Z",
      "side": 1,
      "message": "Sounds good. Thanks for the explanation!",
      "parentUuid": "beaa2ff7_923e1c64",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa9c92d6_14618aba",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 366,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-22T15:42:32Z",
      "side": 1,
      "message": "If I understand things right, the plan would be to:\n1) Land this CL.\n2) Deploy a new version of pinpoint (which will read from either tir_label or grouping_label).\n3) Land a follow up CL making this start writing \u0027grouping_label\u0027 in the request.",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7844628_b84facf5",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 366,
      "author": {
        "id": 1327821
      },
      "writtenOn": "2019-10-28T00:48:13Z",
      "side": 1,
      "message": "You can make this easier by adding both the tir_label and grouping_label arguments to the request. This makes it so that we can deploy and/or roll-back the Dashboard independently of Pinpoint.",
      "parentUuid": "fa9c92d6_14618aba",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f85ef552_14fb23ea",
        "filename": "dashboard/dashboard/pinpoint_request.py",
        "patchSetId": 2
      },
      "lineNbr": 366,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-10-28T11:40:51Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "b7844628_b84facf5",
      "revId": "ffc53583fa52c17502a1c8786c042352f2b59457",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}