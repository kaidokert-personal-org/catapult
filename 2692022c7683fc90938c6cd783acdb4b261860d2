{
  "comments": [
    {
      "key": {
        "uuid": "5e326967_2020f283",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "Is this OK, shouldn\u0027t it be the sum of all thread %-s?",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3e28dc_71c3eea0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "Oh, maybe I misunderstood what it is supposed to mean. The way I implemented it, cpu_percent_{group}_thread shows the average CPU usage of threads in the group, not sum. Should it be the sum? Assuming that the number of threads in a group does not change, it\u0027s not a big difference (just a constant factor), but if we show the sum it can potentially get \u003e 100% (if cores \u003e 1); wouldn\u0027t that be weird?",
      "parentUuid": "5e326967_2020f283",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c350e2_5b3a79cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T23:01:47Z",
      "side": 1,
      "message": "I definitely prefer sum.\n\nThe average of some number of threads doesn\u0027t seem very intuitive for one, it\u0027s hard for me to tell % of what is being measured.\n\nIf I have 1 busy worker thread vs 4 busy worker threads I expect the latter to show 4 times more work somewhere, but I think the current implementation actually hides that.\n\nI don\u0027t think it would be too weird to go over 100% (if it is, maybe % is not the right unit?).\n OS X Activity Monitor uses this scheme (apps using multiple cores will use \u003e 100%).  Windows Task Manager is measured out of 100%, but that\u0027s by dividing by the number of CPU cores as opposed to active threads.",
      "parentUuid": "3b3e28dc_71c3eea0",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b72c4a2_5ab2ef3f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-08T20:11:28Z",
      "side": 1,
      "message": "Thanks for the explanation. I agree. I had wrongly assumed that there are constant number of threads in each group. What do you think about cores_per_second as the name, then?\n\nI updated the number is the CL description.",
      "parentUuid": "b7c350e2_5b3a79cd",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "298d2814_d2cadbb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-08T20:40:28Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "6b72c4a2_5ab2ef3f",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eab4388_9a65fa8c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "This is a tricky one.\n\nWe normalized to time time-per-frame is it can be somewhat easier to reason about when frame rates change.  For example if there\u0027s an improvement in some code, say some scheduling that increases frame rate (an improvement), then many thread wall % times likely increase with it (a regression).  In such a case to understand if it\u0027s a net win overall we would have to reason about time-per-frame manually.\n\nNormalizing per-frame automatically is desirable IMO, however you\u0027re right that it\u0027s hard to measure with different animation rates.  I\u0027m happy to try how this works in practice.",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7902155_360ded4a",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "I understand that logic. But, isn\u0027t it better that in such changes we look at both frame rate improvement and CPU time regression and make a decision each time weather the improvement worth the regression? CPU time / frame rate seems a little bit arbitrary to me, specially since not all threads are alike. For example, it\u0027s probably not OK to make the browser main thread 100% busy from 50% busy to double the frame rate.",
      "parentUuid": "0eab4388_9a65fa8c",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dca4f5e_af5ea1e3",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T23:01:47Z",
      "side": 1,
      "message": "\u003e I understand that logic. But, isn\u0027t it better that in such changes we look at both frame rate\n\u003e improvement and CPU time regression and make a decision each time weather the improvement\n\u003e worth the regression?\n\nYeah I think we need to do that in practice either way.  IMO we often have to figure out X/frames, we just need to know which frame rate matters.\n\n\u003e CPU time / frame rate seems a little bit arbitrary to me, specially since not all threads are alike.\n\nPreviously we mainly benchmarked render frame rate under constant animation, so it made sense to normalize by that rate.  Actually on Android we use the display frame rates from SurfaceFlinger, but generally they reflect the renderer\u0027s invalidation rate.\n\nThe benchmarks were controlled to minimize other variation, for example avoiding history updates and browser index updates while measuring scrolling or an animation.  Ideally we wanted work that\u0027s not per-frame to be relatively constant, and then run the animation for 100s of frames, so we could get a less noisy result of the work done for each frame.\n\nWould using the display frame rate make it less arbitrary?\n\n\u003e For example, it\u0027s probably not OK to make the browser main thread 100% busy from 50% busy to\n\u003e double the frame rate.\n\nRight, it seems difficult to be perfect here.  I think we would say that\u0027s OK in that sort of example as long as we could reason that the browser increase came from the increased frame rate.",
      "parentUuid": "b7902155_360ded4a",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4be857b8_9c286519",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-08T20:11:28Z",
      "side": 1,
      "message": "\u003e Right, it seems difficult to be perfect here.  I think we would say that\u0027s OK in that sort of example as long as we could reason that the browser increase came from the increased frame rate.\n\nI meant it\u0027s probably not OK to make the browser unresponsive during an animation for a better frame rate.\n\nSince it looks like there is no close-to-perfect metric here, are you OK with experimenting with this version (i.e. cores_per_sec)?",
      "parentUuid": "9dca4f5e_af5ea1e3",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed787a1a_a10e94df",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-08T20:40:28Z",
      "side": 1,
      "message": "For sure, OK with experimenting with this.",
      "parentUuid": "4be857b8_9c286519",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e344e6c_816ff4ef",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "AsyncTransferThread is obsolete (code was removed), so no need to add this.",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e224de5_4a89c4f6",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e344e6c_816ff4ef",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faf67335_2ba478eb",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-07T19:56:22Z",
      "side": 1,
      "message": "Can the animation ranges overlap? For example, can we have a CSS Animation and Video Animation simultaneously?",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a648b61_da42711c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T20:55:41Z",
      "side": 1,
      "message": "Apparently they can :) Thanks.",
      "parentUuid": "faf67335_2ba478eb",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}