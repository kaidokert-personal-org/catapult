{
  "comments": [
    {
      "key": {
        "uuid": "5e326967_2020f283",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "Is this OK, shouldn\u0027t it be the sum of all thread %-s?",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3e28dc_71c3eea0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "Oh, maybe I misunderstood what it is supposed to mean. The way I implemented it, cpu_percent_{group}_thread shows the average CPU usage of threads in the group, not sum. Should it be the sum? Assuming that the number of threads in a group does not change, it\u0027s not a big difference (just a constant factor), but if we show the sum it can potentially get \u003e 100% (if cores \u003e 1); wouldn\u0027t that be weird?",
      "parentUuid": "5e326967_2020f283",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eab4388_9a65fa8c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "This is a tricky one.\n\nWe normalized to time time-per-frame is it can be somewhat easier to reason about when frame rates change.  For example if there\u0027s an improvement in some code, say some scheduling that increases frame rate (an improvement), then many thread wall % times likely increase with it (a regression).  In such a case to understand if it\u0027s a net win overall we would have to reason about time-per-frame manually.\n\nNormalizing per-frame automatically is desirable IMO, however you\u0027re right that it\u0027s hard to measure with different animation rates.  I\u0027m happy to try how this works in practice.",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7902155_360ded4a",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "I understand that logic. But, isn\u0027t it better that in such changes we look at both frame rate improvement and CPU time regression and make a decision each time weather the improvement worth the regression? CPU time / frame rate seems a little bit arbitrary to me, specially since not all threads are alike. For example, it\u0027s probably not OK to make the browser main thread 100% busy from 50% busy to double the frame rate.",
      "parentUuid": "0eab4388_9a65fa8c",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e344e6c_816ff4ef",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1116061
      },
      "writtenOn": "2018-03-07T20:51:33Z",
      "side": 1,
      "message": "AsyncTransferThread is obsolete (code was removed), so no need to add this.",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e224de5_4a89c4f6",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T21:14:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e344e6c_816ff4ef",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faf67335_2ba478eb",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1177266
      },
      "writtenOn": "2018-03-07T19:56:22Z",
      "side": 1,
      "message": "Can the animation ranges overlap? For example, can we have a CSS Animation and Video Animation simultaneously?",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a648b61_da42711c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-07T20:55:41Z",
      "side": 1,
      "message": "Apparently they can :) Thanks.",
      "parentUuid": "faf67335_2ba478eb",
      "revId": "2692022c7683fc90938c6cd783acdb4b261860d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}