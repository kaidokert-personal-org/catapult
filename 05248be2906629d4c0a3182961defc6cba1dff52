{
  "comments": [
    {
      "key": {
        "uuid": "e60d2b03_7c1264fc",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-04-01T10:01:17Z",
      "side": 1,
      "message": "I find this option very confusing. The name makes it sound like if you pass require_rooted_device\u003dTrue and the device is not rooted then you get some kind of error. But that does not seem to be exactly how the flag works. The way it\u0027s used it looks a bit more like \"assume_rooted_device\", but then you could just call device.HasRoot() to check?\n\nI am also a bit confused as to when we actually need this. On crbug.com/699082 we concluded that the SELinux policy has to be made \"permissive\" on N and above for Chrome to be able to read the command line file; and on the description of your CL it states that this works on a \"non-rooted Pixel 2\". Which Android version is there on that Pixel 2?\n\nIt would be great if we can clarify this, and leave these use cases documented in the code.",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b325297f_bc54b039",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-04-01T23:21:59Z",
      "side": 1,
      "message": "If require_rooted_device is True and the device isn\u0027t rooted, then the internal call to _SetPermissive will fail because we won\u0027t be able to set the SELinux sandbox to permissive mode.\n\nFrom http://crbug.com/944262 it\u0027s clear that we need to set the SELinux sandbox to permissive mode for more reasons than just to read the legacy command line file; at least, to avoid some clock skew issue which was tracked down in the perf tests.\n\nThis CL just relands the earlier compatibility mode support for non-rooted devices in the safest way possible; when the compatibility mode is set, then avoid doing the operation which requires root; otherwise, do it, as is done today.",
      "parentUuid": "e60d2b03_7c1264fc",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b690416c_aa1bb148",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-04-02T09:55:20Z",
      "side": 1,
      "message": "The error from crbug.com/944262 was due to \"tracing not started\"; I\u0027m wondering now if setting permissive here not only allows reading the command line file, but also the trace config? Anyway, I filed crbug.com/948578 to follow up on that.\n\nFor your change I would insist on removing this option, and instead skip _SetPermissive if the device doesn\u0027t have root.\n\nBefore landing run a https://pinpoint-dot-chromeperf.appspot.com/ job with your change on android-go-perf to make sure it all works.",
      "parentUuid": "b325297f_bc54b039",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d95fa379_7341e864",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-04-11T17:34:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b690416c_aa1bb148",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6408969f_0a7c76ac",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-04-02T09:55:20Z",
      "side": 1,
      "message": "Just change this to something like:\n\n  if not self._device.HasRoot():\n    return\n\nAnd leave a comment with a TODO pointing to crbug.com/948578 to follow up.",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a9e7a42_34982733",
        "filename": "devil/devil/android/flag_changer.py",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-04-11T17:34:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6408969f_0a7c76ac",
      "revId": "05248be2906629d4c0a3182961defc6cba1dff52",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}