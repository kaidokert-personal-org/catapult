{
  "comments": [
    {
      "key": {
        "uuid": "73182238_2545f563",
        "filename": "devil/devil/android/perf/perf_control.py",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-31T09:12:12Z",
      "side": 1,
      "message": "can we keep the original methods, just add an optional cpu_list\u003dNone, so if the list is not provided we default to self._cpu_file_list ?",
      "revId": "38304013652bc23ecbfff33689882ba8d90080ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca24fe3d_20b213ff",
        "filename": "devil/devil/android/perf/perf_control.py",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-08-31T10:10:22Z",
      "side": 1,
      "message": "Explicitly naming the function to accept another argument is less error-prone than optional parameters - those args could be accidentally forgotten. Sometimes a few optional parameters make the code shorter and more concise, in such cases I\u0027d use them. In this case removing this optional only forwards the call, with only a couple more params to forward - simple.\n\nIn C++ due to complex overloading/casting rules we discourage default arguments, here it is not as bad. Also I don\u0027t know majority of catapult code: if optional args are somewhat consistently more preferred, that\u0027s your call, I can change it to optional.",
      "parentUuid": "73182238_2545f563",
      "revId": "38304013652bc23ecbfff33689882ba8d90080ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a51198b0_5dee768f",
        "filename": "devil/devil/android/perf/perf_control.py",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-31T10:37:25Z",
      "side": 1,
      "message": "Yeah, I don\u0027t think the usual C++ concerns apply here. In this case I do lean more towards having fewer well documented methods, so when using them I can figure out what they do by reading the documentation in one place, rather than having to follow the chain of forwarded calls.",
      "parentUuid": "ca24fe3d_20b213ff",
      "revId": "38304013652bc23ecbfff33689882ba8d90080ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baeb7244_18aac356",
        "filename": "devil/devil/android/perf/perf_control.py",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-09-03T12:25:56Z",
      "side": 1,
      "message": "Done: now we have a single _ForEachCpu with optional |cpu_list|",
      "parentUuid": "a51198b0_5dee768f",
      "revId": "38304013652bc23ecbfff33689882ba8d90080ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}