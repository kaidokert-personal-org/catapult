{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d65f07ed_50ab01d7",
        "filename": "dashboard/dashboard/add_histograms_queue.py",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-03-30T00:52:39Z",
      "side": 1,
      "message": "there\u0027s probably a more efficient way to implement this. Feedback appreciated.",
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e45debe_5bef9c4e",
        "filename": "dashboard/dashboard/add_histograms_queue.py",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-03-30T03:30:57Z",
      "side": 1,
      "message": "I feel like adding all IDs and then popping until less then max length is easier.",
      "parentUuid": "d65f07ed_50ab01d7",
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e747ea12_df94b013",
        "filename": "dashboard/dashboard/add_histograms_queue.py",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-03-30T05:44:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e45debe_5bef9c4e",
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a290d1_563ec7bf",
        "filename": "dashboard/dashboard/add_histograms_queue.py",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-03-30T03:30:57Z",
      "side": 1,
      "message": "Is it a string? If so, you will need to split them to have a list of bot ids.",
      "range": {
        "startLine": 423,
        "startChar": 22,
        "endLine": 423,
        "endChar": 33
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5381ff3_d89d7382",
        "filename": "dashboard/dashboard/add_histograms_queue.py",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-03-30T05:44:39Z",
      "side": 1,
      "message": "I think bot_id_name might be similar to os_detail_vers where it\u0027s a genericSet object and list(bot_id_name) turns it into the list of strings, so I think pop should work.",
      "parentUuid": "64a290d1_563ec7bf",
      "range": {
        "startLine": 423,
        "startChar": 22,
        "endLine": 423,
        "endChar": 33
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7be2e8db_c380ab6c",
        "filename": "dashboard/dashboard/add_point.py",
        "patchSetId": 1
      },
      "lineNbr": 839,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-03-30T03:30:57Z",
      "side": 1,
      "message": "Should we make the change here to upload partial result? It would protect all columns.",
      "range": {
        "startLine": 839,
        "startChar": 6,
        "endLine": 839,
        "endChar": 17
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d1ab8a_51bfff44",
        "filename": "dashboard/dashboard/add_point.py",
        "patchSetId": 1
      },
      "lineNbr": 839,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-03-30T05:44:39Z",
      "side": 1,
      "message": "We could do something like value \u003d str(value)[:_STRING_COLUMN_MAX_LENGTH] but then you might end up with something like [A, B, ... C and it gets cut off without the closing bracket. I don\u0027t know if that creates problems downstream. \n\nAlso all of the conditional statements in this function return None when something is violated so I think it\u0027s worth it to keep everything consistent in this method.",
      "parentUuid": "7be2e8db_c380ab6c",
      "range": {
        "startLine": 839,
        "startChar": 6,
        "endLine": 839,
        "endChar": 17
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75a85b51_3fbe4a9e",
        "filename": "dashboard/dashboard/add_point.py",
        "patchSetId": 1
      },
      "lineNbr": 839,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-03-30T07:22:29Z",
      "side": 1,
      "message": "In the non-error case, this function returns value, not str(value). So if we do value \u003d str(value)[:_STRING_COLUMN_MAX_LENGTH], we are not just truncating, but we are potentially changing the type of value (e.g., from list to str in the case of bot ID). I think that is undesirable.\n\nOn the other hand, there is also merit in handling long column here. Otherwise we\u0027re like to missing case when new columns are added. For example, the a_os_detail_vers columns appears to have the same issue.\n\nIf we do truncation here, we need to at least have different algorithm depending on value type: If value is string, do string truncation. If it\u0027s list, pop values until it\u0027s short enough.",
      "parentUuid": "d1d1ab8a_51bfff44",
      "range": {
        "startLine": 839,
        "startChar": 6,
        "endLine": 839,
        "endChar": 17
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c147709_07ffcb30",
        "filename": "dashboard/dashboard/add_point.py",
        "patchSetId": 1
      },
      "lineNbr": 839,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-03-30T23:26:11Z",
      "side": 1,
      "message": "I\u0027m willing to modify the CL to perform truncation here instead of add_histograms_queue, but why do you think a_os_detail_vers would run into the same max length issue? When I check the logs, only the bot_ids violate the max length.",
      "parentUuid": "75a85b51_3fbe4a9e",
      "range": {
        "startLine": 839,
        "startChar": 6,
        "endLine": 839,
        "endChar": 17
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dc19c53_26561aae",
        "filename": "dashboard/dashboard/add_point.py",
        "patchSetId": 1
      },
      "lineNbr": 839,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-03-30T23:32:09Z",
      "side": 1,
      "message": "Not occurring now doesn\u0027t mean it won\u0027t occur in the future. I suppose we\u0027re less likely to run in to this because all bots are supposed to be running the same version of OS, while they all have different IDs. But still, it\u0027s possible to some configuration error causes many different OS versions to be present, and a_os_detail_vers ends up very long.\n\nI\u0027m OK either way.",
      "parentUuid": "8c147709_07ffcb30",
      "range": {
        "startLine": 839,
        "startChar": 6,
        "endLine": 839,
        "endChar": 17
      },
      "revId": "9ce5ba4ad6d4106d40e67f24d188cda1ed4f6ea5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}