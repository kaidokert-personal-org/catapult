{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5edab2a0_b953c5f7",
        "filename": "telemetry/telemetry/internal/browser/browser_options.py",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-08-23T19:43:28Z",
      "side": 1,
      "message": "this can be a method of the _BrowserPlatforms class.",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 60
      },
      "revId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3fe8ff1_34a43986",
        "filename": "telemetry/telemetry/internal/browser/browser_options.py",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-08-29T09:28:51Z",
      "side": 1,
      "message": "I actually think it\u0027s strange to have these as attributes of the options object. They would make more sense as module level constants in https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/platform/__init__.py",
      "parentUuid": "5edab2a0_b953c5f7",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 60
      },
      "revId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f86b4886_2db172f4",
        "filename": "telemetry/telemetry/internal/browser/browser_options.py",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-08-29T09:28:51Z",
      "side": 1,
      "message": "should there be a \"desktop\" option? Also chromeos is tricky, because it has remote and local modes, but this does not seem to distinguish them?",
      "revId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d1501f_c032038f",
        "filename": "telemetry/telemetry/internal/browser/browser_options.py",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-08-29T09:28:51Z",
      "side": 1,
      "message": "Not sure if that would be easier or harder. But maybe the problem from https://crbug.com/992260 could be solved by allowing to pass something like \"--device host\" to switch off looking for devices?",
      "revId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "371ea634_6a5aedbe",
        "filename": "telemetry/telemetry/story/expectations.py",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2019-08-29T09:28:51Z",
      "side": 1,
      "message": "only import modules, not classes.",
      "revId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cf346cd69c52674da0eac3ed4ecbf041a5d13281",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}