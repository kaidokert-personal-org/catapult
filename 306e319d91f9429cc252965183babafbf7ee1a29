{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2d5932f6_701f85de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-08-23T21:25:29Z",
      "side": 1,
      "message": "Fixing a bug in https://chromium-review.googlesource.com/c/catapult/+/4800531. PTAL.",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "672c1f71_7c9cfc95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-08-23T21:40:40Z",
      "side": 1,
      "message": "Are there no tests that can prove this CL actually fixes the problem, or that this change doesn\u0027t break some other part of the application in the process of fixing this part of the application?",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88cfddd6_1a1a2a3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-08-23T21:50:56Z",
      "side": 1,
      "message": "The function was returning list before the change in:\nhttps://chromium-review.googlesource.com/c/catapult/+/4800531\nNow convert it back to list to avoid the exception in the log complaining about using set():\n\"TypeError: Object of type set is not JSON serializable\"\n\nBut no, i don\u0027t think there is a test for catching it.",
      "parentUuid": "672c1f71_7c9cfc95",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "970a18d6_988c5f46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-08-23T21:59:03Z",
      "side": 1,
      "message": "Then why fix it over here at this one call site, instead of fixing it where the problem was introduced in the `_ComputeBugUpdate` method?  Does changing that `components \u003d set(...)` statement to `components \u003d list(...)` work?\n\nIf so, it would fix any other instances of the problem hiding elsewhere in the codebase if other `_ComputeBugUpdate` callers make the same assumption about the return type.",
      "parentUuid": "88cfddd6_1a1a2a3c",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f4b7ef1_62dda10b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2023-08-23T22:08:28Z",
      "side": 1,
      "message": "Yes, that need to change two statements, on both line 688 and line 690. \nHere I\u0027m aligning the call of list() along with the other calls on cc and labels for readability. So that all of those values are converted before returned from _ComputeBugUpdate.",
      "parentUuid": "970a18d6_988c5f46",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39a0e914_cd791394",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2023-08-23T22:22:30Z",
      "side": 1,
      "message": "oh didn\u0027t read closely enough. this is that method! carry on :)",
      "parentUuid": "3f4b7ef1_62dda10b",
      "revId": "306e319d91f9429cc252965183babafbf7ee1a29",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}