{
  "comments": [
    {
      "key": {
        "uuid": "5ea45887_34e24372",
        "filename": "dashboard/bin/deploy_v2spa",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "style nit: no spaces inside brackets, please",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d8f8b43_7a1b612b",
        "filename": "dashboard/bin/deploy_v2spa",
        "patchSetId": 17
      },
      "lineNbr": 78,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "Remove?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31da6044_a0337e5f",
        "filename": "dashboard/dashboard/spa/chart-pair.js",
        "patchSetId": 17
      },
      "lineNbr": 641,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "The minimap will display fresh data when it receives it, right? So the data might be temporarily stale.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7b9fb2_9d1fc90a",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 257,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "Why not keep the spinner spinning until all lines have loaded?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f1ad6da_ec8aefd2",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 451,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "nit: no blank lines at end of blocks, please",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7edc594_c435fd51",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 505,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "What happens when you remove this?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "241269ed_8b6c72bc",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 514,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "Why do this here?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "376bd467_9a8d114a",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 562,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "Is this not in fetchDescriptor?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201bd7b9_e792b6bc",
        "filename": "dashboard/dashboard/spa/chart-timeseries.js",
        "patchSetId": 17
      },
      "lineNbr": 568,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "The promises.splice() and the while loop below look very similar to parts of batchResponses.\nbatchResponses could take an array of either promises or async generators, and promote simple promises to async generators that only yield once.\nCan you try to refactor this with TimeseriesReader and batchResponses?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f710653_2b2f048a",
        "filename": "dashboard/dashboard/spa/element-base.js",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "I think we\u0027d rather do this in a reducer wrapper and try to keep rootReducer as simple as possible, per my \"things redux forgot\" cl.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 60,
        "endChar": 18
      },
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59315e4e_c8615c7d",
        "filename": "dashboard/dashboard/spa/index.js",
        "patchSetId": 17
      },
      "lineNbr": 21,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "Good point! Maybe move IS_PRODUCTION into this file? Then it can do this:\nif (IS_PRODUCTION) ga(\u0027create\u0027,...)",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af623229_52a5ae41",
        "filename": "dashboard/dashboard/spa/report-section.js",
        "patchSetId": 17
      },
      "lineNbr": 555,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "I think I might have fixed this recently?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0a0e7f_c9ad6c36",
        "filename": "dashboard/dashboard/spa/request-base.js",
        "patchSetId": 17
      },
      "lineNbr": 119,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "This typecheck shouldn\u0027t be necessary.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ad932ce_5e050879",
        "filename": "dashboard/dashboard/spa/request-base.js",
        "patchSetId": 17
      },
      "lineNbr": 184,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "Why catch and rethrow?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595dd5b7_5464fc66",
        "filename": "dashboard/dashboard/spa/service-worker.js",
        "patchSetId": 17
      },
      "lineNbr": 18,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you move this to a function outside of the install event listener, named something like handleMessage?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e93d4d3_d6774e35",
        "filename": "dashboard/dashboard/spa/service-worker.js",
        "patchSetId": 17
      },
      "lineNbr": 24,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Why removeEventListener?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd8a6277_666ba47f",
        "filename": "dashboard/dashboard/spa/service-worker.js",
        "patchSetId": 17
      },
      "lineNbr": 45,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you move the body of this branch to a function named something like handleTimeseriesFetch?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667e5ca1_a65557bf",
        "filename": "dashboard/dashboard/spa/service-worker.js",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Racing is an implementation detail. \"CacheRequest\" is a more common term for what this is.\nIDBRace -\u003e CacheRequestBase\nTimeseriesRace -\u003e TimeseriesCacheRequest\nrace -\u003e cacheRequest\nrace.js -\u003e cache-request.js",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9990f96f_c3f17336",
        "filename": "dashboard/dashboard/spa/service-worker.js",
        "patchSetId": 17
      },
      "lineNbr": 48,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you move this to a getter like nextResult?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44df764c_7ce71624",
        "filename": "dashboard/dashboard/spa/sw-utils/level-of-detail.js",
        "patchSetId": 17
      },
      "lineNbr": 35,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T19:09:31Z",
      "side": 1,
      "message": "The new backend doesn\u0027t support r_commit_pos, and it\u0027s removed here, so I think you can remove this TODO and update the comments above.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54750517_6386d1d2",
        "filename": "dashboard/dashboard/spa/sw-utils/mark.js",
        "patchSetId": 17
      },
      "lineNbr": 48,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:08:17Z",
      "side": 1,
      "message": "It\u0027s possible that another measure with the same name could sneak in, so this would record the latter duration twice. It would be safer to compute the duration by subtracting the timestamps of the start and end marks since they have unique names, as tr.b.Timing\u0027s Mark does.\nhttps://github.com/catapult-project/catapult/blob/master/tracing/tracing/base/timing.html#L58",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9d6c8a1_94b4ad1c",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "s/Private/Final/\ns/overwrite/override/\n\"Private\" refers to whether callers outside this class may call a method. Some of these methods\u0027 names start with underscores, so they\u0027re private, but \"next\" and Symbol.asyncIterator are public and called outside this class.\n\"Final\" refers to whether subclasses may override it.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "506b7c89_036e94b3",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 87,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you move this to a method?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f4014c_976e620c",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 105,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you move this to a method?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4a47f2e_408f215e",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 125,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "It looks like these have no effect.",
      "range": {
        "startLine": 125,
        "startChar": 46,
        "endLine": 125,
        "endChar": 55
      },
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48d0636b_b60e2e18",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 133,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Would it be simpler to handle both promises generally without defining a winner and loser?\nwhile (promises) yield await Promise.race(promises);",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fcece91_8d1b2c0d",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 172,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Forgot mark.end()",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 19
      },
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec72dc16_ec2f9c42",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 191,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "\"Debounce\" refers to a process of ignoring illusionary copies of an event to reveal the true event. This class isn\u0027t ignoring anything, so I think \"DatabaseWriteQueue\" would be a better term for this class.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8977168d_5c514655",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 193,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Any particular reason for this value, or would 1000 work as well?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e924d6b3_91721ca3",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 193,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "nit: please rename \"delayMs\" to indicate unit.",
      "range": {
        "startLine": 193,
        "startChar": 9,
        "endLine": 193,
        "endChar": 14
      },
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a60ca3d_cb3be6c2",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 199,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "style nit: please add a blank line before this method.",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e617e298_65d72766",
        "filename": "dashboard/dashboard/spa/sw-utils/race.js",
        "patchSetId": 17
      },
      "lineNbr": 250,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T20:22:28Z",
      "side": 1,
      "message": "Can you refactor this together with the setTimeout callback into a flush() method on the DebouncedWriter?",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 250,
        "endChar": 28
      },
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9710db65_b12ce983",
        "filename": "dashboard/dashboard/spa/sw-utils/range.js",
        "patchSetId": 17
      },
      "lineNbr": 7,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T22:22:27Z",
      "side": 1,
      "message": "Can you remove the methods that you aren\u0027t using?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32f7cb2d_ddc08233",
        "filename": "dashboard/dashboard/spa/webpack.config.js",
        "patchSetId": 17
      },
      "lineNbr": 31,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-08-01T21:16:49Z",
      "side": 1,
      "message": "Can you define a const for this so you can dedent it?",
      "revId": "7f2435a021d42fed341a0dba2aa3909ca7a51334",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}