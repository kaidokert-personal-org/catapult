{
  "comments": [
    {
      "key": {
        "uuid": "e398c1d6_fa207a83",
        "filename": "tracing/tracing/base/unit.html",
        "patchSetId": 9
      },
      "lineNbr": 429,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Please use unitlessNumber or normalizedPercentage instead of creating a new unit, especially since your metric puts \"cores_per_second\" in the histogram names.\nI understand that it\u0027s nice to have \"cores/s\" in the results table and on the y-axis in charts, but we\u0027re trying to see if we can have fewer semantic units. Maybe in the future we\u0027ll try to address this use case.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02b4e2f9_fc39544a",
        "filename": "tracing/tracing/base/unit.html",
        "patchSetId": 9
      },
      "lineNbr": 429,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-16T16:14:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e398c1d6_fa207a83",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52c60d48_cd22e3a1",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 54,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "One of the two callers collects this iterator into an array, and the other caller could re-use that array, so it looks like this should return an array instead of generating the ranges.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bc03117_a4a7589f",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 54,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52c60d48_cd22e3a1",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "078be767_d1ba9718",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Please use `exp instanceof tr.model.um.AnimationExpectation` instead of parsing the title, which could change.\n\nAlso, note that there are some types of animations that are not yet implemented such as requestAnimationFrame. Let me know if you would be interested in adding them to UserModelBuilder.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d427045_16299216",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done.\n\nAbout RAF animations, we definitely have some stories that need them. However, we can use this metrics for other stories, that use supported animations, like scroll, for now. I\u0027m definitely interested in adding unsupported animations to UserModelBuilder. Please let me know how I should start :)",
      "parentUuid": "078be767_d1ba9718",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5af28c9_46fe2bfe",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-16T05:51:24Z",
      "side": 1,
      "message": "Sent email with subject \"RequestAnimationFrame AnimationExpectations\".",
      "parentUuid": "7d427045_16299216",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b497cd9_75be9625",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 57,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "I would support adding a getter like \"boundsRange\" to TimedEvent (which UserExpectation subclasses) to return a new Range using addBoundsToRange().",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0669888_623a95a9",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 57,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b497cd9_75be9625",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caeb66b8_75723c51",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Why not map.get(key) || 0?",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84b031cb_0e62d88a",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Because my JS coding is getting rusty :) Done.",
      "parentUuid": "caeb66b8_75723c51",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb719eee_b06045ca",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-16T05:51:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "84b031cb_0e62d88a",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02fcebe_4c78cc47",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "If you\u0027re only going to iterate over this Map without really looking up values by key, then maybe it should be straight-line code instead of a Map.\n\nif (threadName.includes(\u0027IOThread\u0027)) yield \u0027io\u0027;\n\nIs it possible for a thread to match \u0027all\u0027 plus more than one other category? If not, then this might not need to be a generator, either.\n\nif (threadName.includes(\u0027IOThread\u0027)) return \u0027io\u0027;\n\nIf you keep it a Map, why not iterate over entries like this?\nfor (const [category, regexes] of CATEGORY_THREAD_MAP) {\n  for (const regex of regexes) {...\n  }\n}",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb31582b_bb9f7a44",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "\u003e If you\u0027re only going to iterate over this Map without really looking up values by key, then maybe it should be straight-line code instead of a Map.\n\nI look up values in the next line. I should iterate over entries, not keys, as you suggested. Fixed.\n\n\u003e Is it possible for a thread to match \u0027all\u0027 plus more than one other category? If not, then this might not need to be a generator, either.\n\nYes; for example, \u0027Chrome_ChildIOThread\u0027 is in \u0027io\u0027, \u0027fast_path\u0027, and \u0027all\u0027.",
      "parentUuid": "f02fcebe_4c78cc47",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76cdcbeb_b83c5291",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-16T05:51:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eb31582b_bb9f7a44",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e6c43d9_0e0080ad",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Alternatively, you could iterate over userModel.segments, and filter out segments whose `expectations` don\u0027t include an AnimationExpectation.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196e0f22_699c2675",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Sorry for the naive questions, but can\u0027t we have expectations like this?\n\n[\u003c--- load expectation ---\u003e]\n                 [\u003c--- animation expectation ---\u003e]\n\nIf we can, doesn\u0027t the UserModelBuilder.findSegments() merge the above two, which is not what we want?",
      "parentUuid": "4e6c43d9_0e0080ad",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b5882e3_16df89b0",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-16T05:51:24Z",
      "side": 1,
      "message": "That situation would produce 3 segments: [ Load ][ Load,Animation ][ Animation ]\nHere\u0027s a test with overlapping expectations: https://github.com/catapult-project/catapult/blob/master/tracing/tracing/importer/user_model_builder_test.html#L143\n\nUserModel.resegment() will filter and merge segments for you. I think your getKeyForSegment callback might look like this:\nconst animationSegments \u003d model.userModel.resegment(segment \u003d\u003e (segment.expectations.find(ue \u003d\u003e ue instanceof tr.model.um.AnimationExpectation) ? \u0027animation\u0027 : \u0027notAnimation\u0027));",
      "parentUuid": "196e0f22_699c2675",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "801b8e71_de7706e3",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-16T16:14:50Z",
      "side": 1,
      "message": "To be clear, model.userModel.resegment() does not filter out anything, it merges consecutive animation segments. I have to filter out non-animations segments myself. So, since I don\u0027t really need the merging part, as long as segments are disjoint, I don\u0027t need to model.userModel.resegment(). I just directly filter out non-animation segments from model.userModel.segments, as per your first suggestion.\n\nDone.",
      "parentUuid": "7b5882e3_16df89b0",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6ffbdb2_349cd581",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 109,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Why not thread.name || UNKNOWN_THREAD_NAME?",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10cb4855_a4153457",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 109,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6ffbdb2_349cd581",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f44f1dbe_d4e37e6d",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Please destructure kv with more descriptive names, and iterating over Maps already yields entries:\nfor (const [category, sample] of threadValues)",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0b200c6_38bfb6bb",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f44f1dbe_d4e37e6d",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce49ea24_646c6495",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 125,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "I would also encourage investigating whether it would be useful to break down by AnimationExpectation.initiatorType. See newCpuTimeMetric.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4599d434_0a28d89c",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 125,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Sure; I added it to the TODO. I suspect that in most traces that are generated by telemetry we probably have only one animation and so breaking down by initiator may not be very informative. But, I should double check.",
      "parentUuid": "ce49ea24_646c6495",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7f887cf_57dc5518",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 131,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "Please destructure kv with more descriptive names, and iterating over Maps already yields entries:\nfor (const [category, sample] of threadValues)",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6b16c19_4d87d96a",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 131,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7f887cf_57dc5518",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d005b6_5fb272b5",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-15T04:34:20Z",
      "side": 1,
      "message": "There should be few enough AnimationExpectations in traces that you can link to them all (or the longest 10) using RelatedEventSet diagnostics, if you want.",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "764eb45f_9e6b15db",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1112474
      },
      "writtenOn": "2018-03-15T17:50:47Z",
      "side": 1,
      "message": "What is the benefit of linking to all animation expectations from all of these metrics? Aren\u0027t the expectations clearly marked in traces?",
      "parentUuid": "79d005b6_5fb272b5",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02685c8f_568ae81b",
        "filename": "tracing/tracing/metrics/rendering_metric.html",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1115874
      },
      "writtenOn": "2018-03-16T05:51:24Z",
      "side": 1,
      "message": "Ah, nevermind, I forgot that you\u0027re doing single-sample Histograms.\n\nIf you were adding one sample per Animation, then users could brush individual bins or groups of bins to see the Animations in those bins. If there\u0027s an outlier sample, for example, users can select the bin to get a link directly to the particular animation that corresponds to that sample.\n\nBut, you\u0027re right, you\u0027re aggregating all Animations together, so the RelatedEventSet would just contain all of the animations in the trace, which would not be useful.",
      "parentUuid": "764eb45f_9e6b15db",
      "revId": "7e9ce0b48f9b683f5580358b4992dee7929d4b39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}