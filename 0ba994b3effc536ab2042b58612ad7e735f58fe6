{
  "comments": [
    {
      "key": {
        "uuid": "86e1a683_06818acd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "nit: generally goes above Change-Id. Also, chrome infra doesn\u0027t like multi-line \"Test:\" footers, and sometimes garbles them with other info. I usually write it as:\n\nTest: line 1...\nTest: line 2...",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 77
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "073b9515_2aaa2f55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "86e1a683_06818acd",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 77
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec1f1984_ea43c03f",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2639,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "This sounds like it\u0027s fetching a WebView update. Maybe \"GetWebViewUpdateServiceInfo\" or \"GetWebViewUpdateServiceDump?\"",
      "range": {
        "startLine": 2639,
        "startChar": 6,
        "endLine": 2639,
        "endChar": 22
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8579404c_0abf99ea",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2639,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "Will change it to GetWebViewUpdateServiceDump",
      "parentUuid": "ec1f1984_ea43c03f",
      "range": {
        "startLine": 2639,
        "startChar": 6,
        "endLine": 2639,
        "endChar": 22
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77864213_240763bb",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2656,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "I would rephrase this as \"Command was implemented starting in Oreo\"",
      "range": {
        "startLine": 2656,
        "startChar": 6,
        "endLine": 2656,
        "endChar": 73
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "331f7d89_61ae4cea",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2656,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77864213_240763bb",
      "range": {
        "startLine": 2656,
        "startChar": 6,
        "endLine": 2656,
        "endChar": 73
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fe5acd1_77d12a54",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2694,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "\"Prior to Nougat, only a single package could be a WebViewProvider for the device, so there\u0027s nothing to do\"\n\nAlternatively, you could just make this invalid to call on \u003c Nougat, since it doesn\u0027t make sense.",
      "range": {
        "startLine": 2694,
        "startChar": 6,
        "endLine": 2694,
        "endChar": 45
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b2869e_c7a8149f",
        "filename": "devil/devil/android/device_utils.py",
        "patchSetId": 2
      },
      "lineNbr": 2694,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "I\u0027ll just remove this whole block then since it will throw an error if the command is not recognized anyways.",
      "parentUuid": "4fe5acd1_77d12a54",
      "range": {
        "startLine": 2694,
        "startChar": 6,
        "endLine": 2694,
        "endChar": 45
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5271ca2_2f541082",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 2
      },
      "lineNbr": 2678,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "Should probably be \u003e\u003d O?",
      "range": {
        "startLine": 2678,
        "startChar": 52,
        "endLine": 2678,
        "endChar": 58
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "142ffe89_c8bfe2af",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 2
      },
      "lineNbr": 2678,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "The disable-redundant-packages command itself works on Nougat.  But the dumpsys webviewupdate command does not, so we can\u0027t tell what the fallback logic state is but can set it.",
      "parentUuid": "a5271ca2_2f541082",
      "range": {
        "startLine": 2678,
        "startChar": 52,
        "endLine": 2678,
        "endChar": 58
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bb04314_f3d1f8e9",
        "filename": "devil/devil/android/device_utils_test.py",
        "patchSetId": 2
      },
      "lineNbr": 2678,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T23:17:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "142ffe89_c8bfe2af",
      "range": {
        "startLine": 2678,
        "startChar": 52,
        "endLine": 2678,
        "endChar": 58
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b46db1f_a1398a76",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "STANDALONE_WEBVIEW_PACKAGES",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 16
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebbd7c3c_da4828b6",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b46db1f_a1398a76",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 16
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b81fc846_dbf767a6",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "Why is this limited to standalone packages?",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6342ff_4aeefee4",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "It\u0027s intended to be used in the upstream builds to install system_webview_apk target as the provider during a test.  Other packages such as com.android.chrome won\u0027t work for pre-monochrome devices and even for N+ devices, it could be a non-monochrome version of chrome.  So have limited the package choices here to prevent these types of errors.",
      "parentUuid": "b81fc846_dbf767a6",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c510b21f_15188889",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T23:17:21Z",
      "side": 1,
      "message": "I think the context manager should allow any package (to be sufficiently general), but throw if the switch fails. Passing the correct package should be a burden on the caller, because only the caller can know if the package is correct or not for their use case.",
      "parentUuid": "1b6342ff_4aeefee4",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aa954bd_afce0b68",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:05:50Z",
      "side": 1,
      "message": "I see your point...what about limiting to the webview packages only for versions below N (since there would be no way to detect the switch failure)?",
      "parentUuid": "c510b21f_15188889",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "143b66ad_91f5a244",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-05T01:21:37Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s a way to differentiate between pre-N devices which use AOSP WebView and those which use Google WebView (but I\u0027d love to know if such a way exists). It also seems weird to assert input values when the expected behavior is NOOP.",
      "parentUuid": "9aa954bd_afce0b68",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b30327bd_8e8095ca",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:34:40Z",
      "side": 1,
      "message": "In a previous iteration, I looked for the gmscore package on the device and assumed it was aosp if gmscore was absent.  Felt a bit hacky so took it out.  But now that we\u0027re talking about the best way to handle this, maybe we can do this:\n  if gms core absent then restrict to com.android.webview\n  if gms core present and below N then restrict to com.google.android.webview\n  else let the the set implementation command decide. \nWDYT?",
      "parentUuid": "143b66ad_91f5a244",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc45544b_f8278b4f",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-05T02:15:31Z",
      "side": 1,
      "message": "I don\u0027t think this is sufficient. I don\u0027t think there\u0027s anything in place to prevent someone from installing GMSCore on AOSP.\n\nI\u0027ve thought of a couple other ideas, but I\u0027m not convinced they\u0027re better:\n\n * Of course, can\u0027t ask PM which WebView is installed, because both could be installed\n * We could `ls` the system folder and see which is a system app. But we have scripts to blast out system apps, so this would fail in that case\n * We *might* be able to guess based on signing keys (AOSP are *usually* test-keys and vendor are *usually* release-keys or dev-keys). But signing keys are really totally orthogonal to this, and this is pretty hacky.\n\nMaybe you could ask android-chatty-eng@ if there\u0027s an adb property which exposes AOSP vs. vendor? If such a prop exists, that\u0027s probably as reliable a signal as we could get.",
      "parentUuid": "b30327bd_8e8095ca",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 89,
        "endChar": 66
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7789d418_bd91fc05",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "nit: I might call this \"original\" instead of \"existing\" (since \"existing\" is no longer a true label when we reach the finally block)",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28fd9ee8_8eeb9b3d",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "sure, will update the name.",
      "parentUuid": "7789d418_bd91fc05",
      "range": {
        "startLine": 96,
        "startChar": 2,
        "endLine": 96,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c086c8f8_2d7758e6",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T23:17:21Z",
      "side": 1,
      "message": "I might add a comment along the lines of \"this is only necessary if the provider is a fallback provider, but we can\u0027t generally determine this, so we set this just in case\"",
      "range": {
        "startLine": 99,
        "startChar": 2,
        "endLine": 99,
        "endChar": 39
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f26a94a_6b13eeb5",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:05:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c086c8f8_2d7758e6",
      "range": {
        "startLine": 99,
        "startChar": 2,
        "endLine": 99,
        "endChar": 39
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3b90a08_8cc34e9c",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "Really? That\u0027s surprising...",
      "range": {
        "startLine": 103,
        "startChar": 6,
        "endLine": 104,
        "endChar": 74
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b9c118_99b430d7",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "I believe it\u0027s because the relocation just moves the apk file to a temp directory.  So pm and webviewupdate services are not aware of this without them restarting.",
      "parentUuid": "f3b90a08_8cc34e9c",
      "range": {
        "startLine": 103,
        "startChar": 6,
        "endLine": 104,
        "endChar": 74
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e5a4f02_75efa15e",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:05:50Z",
      "side": 1,
      "message": "Actually you\u0027re right it\u0027s not needed, it\u0027s possible when I added this my device was acting up due to some other reason, but I don\u0027t see any issues anymore after removing this logic, so have simplified the code to use ReplaceSystemApp context manager.",
      "parentUuid": "10b9c118_99b430d7",
      "range": {
        "startLine": 103,
        "startChar": 6,
        "endLine": 104,
        "endChar": 74
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94974a89_b61e6a9e",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "Can we avoid this work if `new_provider \u003d\u003d existing_provider`?",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 106,
        "endChar": 35
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e22887f_5534e0a2",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "Let me check if that works.",
      "parentUuid": "94974a89_b61e6a9e",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 106,
        "endChar": 35
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90094e77_58ae9fcc",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:05:50Z",
      "side": 1,
      "message": "This block has been deleted, see above.",
      "parentUuid": "1e22887f_5534e0a2",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 106,
        "endChar": 35
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "836bc352_0aa3c0a8",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T02:49:17Z",
      "side": 1,
      "message": "This doesn\u0027t seem generally necessary. Also, you should probably restore the root state in cleanup.",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5b6339b_d67b1661",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-04T19:07:25Z",
      "side": 1,
      "message": "The logic in the EnableSystemAppModification context manager enables root while in context, so wanted to match that behavior.  I\u0027ll add logic to disable root if it was disabled at the beginning.",
      "parentUuid": "836bc352_0aa3c0a8",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1457ecf_cc856088",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1167294
      },
      "writtenOn": "2019-01-04T23:17:21Z",
      "side": 1,
      "message": "IMO we should only request root if generally necessary. But I know we basically require root for most of devil, so maybe this is not a big deal.\n\nMy impression of context managers is that they should do a best effort to restore state. But, I can\u0027t find any docs which insist upon this, so I\u0027ll defer to devil owners for this.",
      "parentUuid": "e5b6339b_d67b1661",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f97306_aa3c0b30",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1266306
      },
      "writtenOn": "2019-01-05T01:05:50Z",
      "side": 1,
      "message": "Actually the EnableSystemAppModification context manager used by _RelocateApp already reboots the device which disables root access upon exit.  So will leave it at that.\n\nAlright, let\u0027s wait for John to chime in on this.",
      "parentUuid": "e5b6339b_d67b1661",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6423bd71_2f0487e2",
        "filename": "devil/devil/android/tools/system_app.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1181690
      },
      "writtenOn": "2019-01-07T17:41:35Z",
      "side": 1,
      "message": "We\u0027re pretty lax about EnableRoot generally.\n\nIf you\u0027d like to mirror EnableSystemAppModification, you could consider rebooting the device when you leave the context, which should undo the rooting.",
      "parentUuid": "f6f97306_aa3c0b30",
      "range": {
        "startLine": 107,
        "startChar": 6,
        "endLine": 107,
        "endChar": 25
      },
      "revId": "0ba994b3effc536ab2042b58612ad7e735f58fe6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}