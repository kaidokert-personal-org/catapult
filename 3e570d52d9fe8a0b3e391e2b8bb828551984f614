{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cac160a1_ca4d26f7",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 95,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-09-13T20:27:09Z",
      "side": 1,
      "message": "Does the BQ logic on 119-225 need anything other than `job` (which is passed in already), or do some of the preceding operations have hidden side-effects needed by the bq logic?  If not, I suggest moving the BQ stuff to its own function. If you\u0027re unfamiliar with this code and just looking at a call site for GenerateResults2, it\u0027s not super obvious that this function writes to BQ unless you manage to track down this definition.",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfc7588b_96b90e60",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 95,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-13T20:48:33Z",
      "side": 1,
      "message": "Discussed in chat - we\u0027ll keep this as-is, so we don\u0027t need to define a separate request handler (and other surrounding stuff)",
      "parentUuid": "cac160a1_ca4d26f7",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac47d0e4_443f647f",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 231,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-09-13T20:27:09Z",
      "side": 1,
      "message": "re: previous comment, you could make this non-private and wrap the insides in that try/catch/log block.",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b10dbe4b_11114084",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 231,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-13T20:48:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ac47d0e4_443f647f",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542bfac8_2e5b8d4b",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 298,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-13T17:29:09Z",
      "side": 1,
      "message": "If I modify the unit test to execute this for real, I get the following error:\n\nNo api proxy found for service \"app_identity_service\"\n\nPoking around message boards, it looks like this will only work if this is executed from AppEngine. Do we have a way to create a fake deployment?",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 298,
        "endChar": 56
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81840d7d_b8d43982",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 298,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2021-09-13T18:30:39Z",
      "side": 1,
      "message": "Right now, we don\u0027t have a way to create a fake deployment. Wenbin has modified AppEngine configurations so that newly deployed versions don\u0027t take any traffic, until manually switched. So it should be relatively safe to deploy and then manually test it.\n\nI wonder if it would make sense to create a new GCP project, say chromeperf-testing, for doing fake deployment and testing. On problem with this approach is the real instance has huge amount of data that would be difficult to duplicate on a test instance.",
      "parentUuid": "542bfac8_2e5b8d4b",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 298,
        "endChar": 56
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90d77362_844e70a1",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 298,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-09-13T18:41:17Z",
      "side": 1,
      "message": "could you modify this to have prod write to a test bq table instead of prod bq? If nothing else depends on this data yet, that might be easier.",
      "parentUuid": "81840d7d_b8d43982",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 298,
        "endChar": 56
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2ffc74e_c849f412",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 298,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-13T19:37:33Z",
      "side": 1,
      "message": "Yeah, that sounds easier. I\u0027ll update the todo consts once I figure out how to do that. In the meantime - how does the rest of this CL look?",
      "parentUuid": "90d77362_844e70a1",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 298,
        "endChar": 56
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e220e9a9_09fea4ee",
        "filename": "dashboard/dashboard/pinpoint/models/results2.py",
        "patchSetId": 42
      },
      "lineNbr": 298,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-13T20:48:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2ffc74e_c849f412",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 298,
        "endChar": 56
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf337a33_eff8b6cc",
        "filename": "dashboard/dashboard/proto/results.proto",
        "patchSetId": 42
      },
      "lineNbr": 1,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-09-13T20:27:09Z",
      "side": 1,
      "message": "2021",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e55b1a56_0d540de4",
        "filename": "dashboard/dashboard/proto/results.proto",
        "patchSetId": 42
      },
      "lineNbr": 1,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-14T01:40:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf337a33_eff8b6cc",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94cd7259_ea59f74f",
        "filename": "dashboard/dashboard/proto/results.proto",
        "patchSetId": 42
      },
      "lineNbr": 89,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2021-09-13T20:27:09Z",
      "side": 1,
      "message": "I think it\u0027s safe to exclude this :)",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d995b8e2_13318bcd",
        "filename": "dashboard/dashboard/proto/results.proto",
        "patchSetId": 42
      },
      "lineNbr": 89,
      "author": {
        "id": 1451876
      },
      "writtenOn": "2021-09-14T01:40:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94cd7259_ea59f74f",
      "revId": "3e570d52d9fe8a0b3e391e2b8bb828551984f614",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}