{
  "comments": [
    {
      "key": {
        "uuid": "066c77c1_2d983042",
        "filename": "telemetry/telemetry/internal/platform/android_platform_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-02T18:01:34Z",
      "side": 1,
      "message": "It seems problematic that we need to install the clear_system_cache binary any time this is invoked. I think it\u0027s better to change _InstallCacheClearingTool to _InstallCacheClearingToolIfNeeded() and add some check if the tool exist there?",
      "revId": "3a2960d64edb3ee86f7ce7f015e810001c54dd34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccfce39c_520c7e8f",
        "filename": "telemetry/telemetry/internal/platform/android_platform_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-02T18:29:11Z",
      "side": 1,
      "message": "I thought this mitigation is enough to avoid excessive pushing:\n1. device.PushChangedFiles() would md5sum both sides and would only push if there is mismatch\n2. _InstallCacheClearingTool() has @decorators.Cache which means once the tool is pushed, subsequent calls of _InstallCacheClearingTool() on the same AndroidPlatformBackend instance would assume everything is installed and would skip even the md5sum step.\n\nIs this not enough or my reading is incorrect?\n\nRenaming to _InstallCacheClearingToolIfNeeded() is a good idea, will do.",
      "parentUuid": "066c77c1_2d983042",
      "revId": "3a2960d64edb3ee86f7ce7f015e810001c54dd34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df944f05_2d6df632",
        "filename": "telemetry/telemetry/internal/platform/android_platform_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-01-02T18:38:54Z",
      "side": 1,
      "message": "\u003e I thought this mitigation is enough to avoid excessive pushing:\n\u003e 1. device.PushChangedFiles() would md5sum both sides and would only push if there is mismatch\n\nAh, I wasn\u0027t aware of this :-)\n\n\u003e 2. _InstallCacheClearingTool() has @decorators.Cache which means once the tool is pushed, subsequent calls of _InstallCacheClearingTool() on the same AndroidPlatformBackend instance would assume everything is installed and would skip even the md5sum step.\n\nActually this step is pretty cheap. I would rather avoid the @decorators.Cache. It has quite a history of a bad API:\nhttps://groups.google.com/a/chromium.org/d/msg/telemetry/uhuyYqvlrHc/bPfsiQGfyakJ\nhttps://groups.google.com/a/chromium.org/d/msg/telemetry/yW9Ve9_CnX8/uZZ2PFhabmcJ\n\nA bit late but I guess it\u0027s  time to file a bug to kill this :)\n\n\u003e \n\u003e Is this not enough or my reading is incorrect?\n\u003e \n\u003e Renaming to _InstallCacheClearingToolIfNeeded() is a good idea, will do.",
      "parentUuid": "ccfce39c_520c7e8f",
      "revId": "3a2960d64edb3ee86f7ce7f015e810001c54dd34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "782ed377_0412565f",
        "filename": "telemetry/telemetry/internal/platform/android_platform_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1000429
      },
      "writtenOn": "2018-01-02T19:01:48Z",
      "side": 1,
      "message": "FWIW, I also find @decorators.Cache to be pretty surprising, numerous times it slowed down my understanding of the code. +1 to remove it. Will change this one tomorrow to make something like self._cache_clearing_tool_pushed if you don\u0027t mind.",
      "parentUuid": "df944f05_2d6df632",
      "revId": "3a2960d64edb3ee86f7ce7f015e810001c54dd34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ceaebdb_073fb63c",
        "filename": "telemetry/telemetry/internal/platform/android_platform_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-01-03T12:09:01Z",
      "side": 1,
      "message": "It looks like every time we need to do something like this we end up duplicating some bit of code, and not even in a very consistent sort of way.\n\nAt least as a start, could this use android_prebuilt_profiler_helper [1], similar to how we install the memtrack_helper [2]?\n\nIn the longer term, maybe we need a more unified way to track/identify which helper apps may need installing, and make sure they are installed before actually trying to run tests?\n\n[1]: https://github.com/catapult-project/catapult/blob/7365f02611830723d60963f0619d5bab45060849/telemetry/telemetry/internal/platform/profiler/android_prebuilt_profiler_helper.py\n[2]: https://github.com/catapult-project/catapult/blob/7365f02611830723d60963f0619d5bab45060849/telemetry/telemetry/internal/platform/android_platform_backend.py#L247",
      "parentUuid": "782ed377_0412565f",
      "revId": "3a2960d64edb3ee86f7ce7f015e810001c54dd34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}