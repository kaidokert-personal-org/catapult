#!/usr/bin/env python
#
# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import optparse
import os
import sys

_SYSTRACE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.append(_SYSTRACE_DIR)

from profile_chrome import adb_profile_chrome_startup
from profile_chrome import chrome_startup_tracing_agent
from profile_chrome import flags
from systrace import util
from systrace.tracing_agents import atrace_agent

_DEFAULT_CHROME_CATEGORIES = '_DEFAULT_CHROME_CATEGORIES'


def _CreateOptionParser():
  parser = optparse.OptionParser(description='Record about://tracing profiles '
                                 'from Android browsers startup, combined with '
                                 'Android systrace. See http://dev.chromium.org'
                                 '/developers/how-tos/trace-event-profiling-'
                                 'tool for detailed instructions for '
                                 'profiling.', conflict_handler='resolve')
  parser = util.get_main_options(parser)

  browsers = sorted(util.get_supported_browsers().keys())
  parser.add_option('-b', '--browser', help='Select among installed browsers. '
                    'One of ' + ', '.join(browsers) + ', "stable" is used by '
                    'default.', type='choice', choices=browsers,
                    default='stable')
  parser.add_option('-v', '--verbose', help='Verbose logging.',
                    action='store_true')
  parser.add_option('-z', '--compress', help='Compress the resulting trace '
                    'with gzip. ', action='store_true')
  parser.add_option('-t', '--time', help='Stops tracing after N seconds, 0 to '
                    'manually stop (startup trace ends after at most 5s).',
                    default=5, metavar='N', type='int', dest='trace_time')
  parser.add_option('-c', '--chrome_categories', help='Chrome tracing '
                    'categories to record.', default=_DEFAULT_CHROME_CATEGORIES,
                    type='string')
  parser.add_option('-u', '--atrace-buffer-size', help='Number of bytes to'
                    ' be used for capturing atrace data', type='int',
                    default=None, dest='trace_buf_size')

  parser.add_option_group(chrome_startup_tracing_agent.add_options(parser))
  parser.add_option_group(atrace_agent.add_options(parser))
  parser.add_option_group(flags.OutputOptions(parser))

  return parser


def main():
  parser = _CreateOptionParser()
  options, _ = parser.parse_args()
  adb_profile_chrome_startup.ProfileChrome(options)


if __name__ == '__main__':
  sys.exit(main())
