{
  "comments": [
    {
      "key": {
        "uuid": "56106594_7beadd34",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Does it make sense to pull the minidump logic into a separate class/file. This file is already quite large.",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87fc642d_522e1503",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "I was thinking of moving the minidump logic from both here and DesktopBrowserBackend into a separate file since they\u0027re largely the same. However, I\u0027d prefer to not make this CL any larger, so I\u0027d prefer to file a bug tracking that work clean it up in a follow-up CL. WDYT?",
      "parentUuid": "56106594_7beadd34",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08e77bba_9582630f",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Perhaps cros_interface might be a better place to put this, since that file deals more directly with the device:\nhttps://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/core/cros_interface.py",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "030a78f1_7d90c385",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Moved this and _PullDumps to cros_interface.",
      "parentUuid": "08e77bba_9582630f",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6d34de4_baafcc2d",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "This comment feels like an implementation note. Is it necessary?",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5977e43e_62a8e6fa",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Not necessary, but it otherwise might be confusing to see a \"Desktop*\" class (which is normally only ever used for tests on Linux/Mac/Windows) being used in a ChromeOS test.",
      "parentUuid": "f6d34de4_baafcc2d",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33df94ad_468009de",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "This should probably go here:\nhttps://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py?l\u003d114",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c07b43_190e40ae",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33df94ad_468009de",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99404920_53c7f935",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Add fn comment",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1a36ed_7e1e60ac",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "This is overridden from BrowserBackend. Convention within Telemetry seems to be to not add docstrings for overridden methods, instead deferring to whatever docstring is available in the base class. However, it looks like docstrings for this and other methods were never added to BrowserBackend, so I\u0027ve gone ahead and added them there.\n\nNote that the reason GetStackTrace() had one to begin with is that GetStackTrace() had it in DesktopBrowserBackend when I copied it - I\u0027ve moved it to BrowserBackend.",
      "parentUuid": "99404920_53c7f935",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "599698ae_2b4826f3",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Add fn comment",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ff12ac4_b55ccabe",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "599698ae_2b4826f3",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96af6f5e_b9072dbd",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Do we need two asserts or can we combine them?",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4aa38e5_aae2ec6c",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Could be combined, but on the off-chance either of these gets hit, having them be separate makes it a bit easier for the user since they\u0027ll know exactly what went wrong instead of having to figure out which part of the assert failed.",
      "parentUuid": "96af6f5e_b9072dbd",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0e8eb64_54fbac5c",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 216,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Why not combine these:\nif not dump_path or os.path.getmtime(dump_path) \u003c oldest_ts:",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804b7425_47f342c1",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 216,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0e8eb64_54fbac5c",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d56d35c_bcf670bf",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Add fn comment",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "247d3870_b5df3b03",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "9d56d35c_bcf670bf",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24313813_ddf4e6ca",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Add fn comment",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f74e733d_f6c7e0d7",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "24313813_ddf4e6ca",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7c7f539_2260406b",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Add fn comment",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f779e399_21a8cffc",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7c7f539_2260406b",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24cf899c_db2a543c",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T18:32:52Z",
      "side": 1,
      "message": "Do you think it\u0027s worth doing this?",
      "range": {
        "startLine": 335,
        "startChar": 4,
        "endLine": 335,
        "endChar": 52
      },
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0dcc1a_5b88a277",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Another option is to store the dump in a file on the device. The bot running the telemetry test extracts various log files from the device and makes them viewable.",
      "parentUuid": "24cf899c_db2a543c",
      "range": {
        "startLine": 335,
        "startChar": 4,
        "endLine": 335,
        "endChar": 52
      },
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1f24de_54296335",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T18:32:52Z",
      "side": 1,
      "message": "Any idea if the names returned by platform.machine() play nice with the binary manager?",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 364,
        "endChar": 54
      },
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85e4ae13_f62570fc",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "We may be missing binaries. You should run this against an ARM device (like kevin) to verify.",
      "parentUuid": "cb1f24de_54296335",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 364,
        "endChar": 54
      },
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "365ff78d_f6408a76",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_backend.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Will run the tests on Kevin and report back.",
      "parentUuid": "85e4ae13_f62570fc",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 364,
        "endChar": 54
      },
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bfc34eb_048a1329",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "You should add --enable-crash-reporter-for-testing here instead?",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9428a35_60ef516e",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bfc34eb_048a1329",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72c005fc_d5ca8776",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "Why are you doing this?",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5480e4fb_cef2fa84",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "We need to set CHROME_HEADLESS and BREAKPAD_DUMP_LOCATION via environment variables, as for whatever reason that\u0027s what Chrome uses for those instead of command line flags.\n\nhttps://chromium.googlesource.com/chromiumos/docs/+/master/simple_chrome_workflow.md#command_line-flags-and-environment-variables says that the way to do that is by setting them in that file.",
      "parentUuid": "72c005fc_d5ca8776",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f1217f_4783d572",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-08-14T19:45:44Z",
      "side": 1,
      "message": "You shouldn\u0027t need this",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "626a0dad_facfe2b2",
        "filename": "telemetry/telemetry/internal/backends/chrome/cros_browser_finder.py",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2019-08-14T21:17:17Z",
      "side": 1,
      "message": "It\u0027s not strictly necessary, but we want to leave the device in the same state as we found it. AFAIK if we don\u0027t do this, we\u0027ll leave those environment variables that are set above permanently set.",
      "parentUuid": "99f1217f_4783d572",
      "revId": "a755841ec624d8c9ecbba6904e1b2919b77d4229",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}