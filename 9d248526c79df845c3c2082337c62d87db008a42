{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99675469_2993c4ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-10-15T16:40:14Z",
      "side": 1,
      "message": "lgtm with nit.",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce2e3c4_4278ee2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2022-10-17T17:00:42Z",
      "side": 1,
      "message": "It\u0027s great that you found the root cause and made this change!\n\nI think the ideal long term fix is to merge multiple executions of FindIsolate for the same change to one FindIsolate execution. Since all of those executions are waiting for the same build. keep multiple FindIsolate execution is redundant, not efficient, and hard to keep consistent.\nBut it would be a big change, we may handle it as a separate tech optimization task, you don\u0027t have to do it in this CL.",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb7e6c56_844498ba",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2022-10-14T00:08:56Z",
      "side": 1,
      "message": "Does `index` have to be a required parameter to this now? Do all callers of `ScheduleWork` have a value to pass for `index` that makes sense?",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bddab29_bc59724b",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-14T00:44:58Z",
      "side": 1,
      "message": "Yes. I don\u0027t think there is a generic index value that makes sense because every iteration would write to the same index. \n\nFortunately, AFAIK, job_state is the only caller of attempt.py\u0027s scheduleWork(), but I\u0027ll run a bisection on staging tomorrow just to make sure nothing goes wrong.",
      "parentUuid": "cb7e6c56_844498ba",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e09d027_137ce4aa",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-14T20:13:36Z",
      "side": 1,
      "message": "Just confirmed that a bisection also works on staging - https://pinpoint-dot-chromeperf-stage.uc.r.appspot.com/job/143cdef3000000\n\nI think this should be fine, but we can also wait for John to return to office to ask for his opinion.",
      "parentUuid": "8bddab29_bc59724b",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34100aee_f378cb6e",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1121710
      },
      "writtenOn": "2022-10-14T22:36:29Z",
      "side": 1,
      "message": "If it\u0027s urgent to land this please LMK, otherwise I\u0027d rather wait for John\u0027s feedback when he gets back next week.  Also, I\u0027m a little concerned about what would happen to pinpoint jobs that were already running (and have some pickled state from the previous version squirreled away in ndb) when this change is deployed. Would they still run as expected?",
      "parentUuid": "4e09d027_137ce4aa",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04043ef2_6bd1bf9f",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-14T22:38:58Z",
      "side": 1,
      "message": "It\u0027s not urgent. I\u0027ll add him to the reviewers to get his feedback.",
      "parentUuid": "34100aee_f378cb6e",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c4ede65_e934e5bc",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-10-17T17:38:14Z",
      "side": 1,
      "message": "There is a small chance that an already-running job can hang when this change is deployed. If we want to be safe, we can make the _Start method in run_test.py more robust. (See comments in that file.)",
      "parentUuid": "04043ef2_6bd1bf9f",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6019bb9_b03894eb",
        "filename": "dashboard/dashboard/pinpoint/models/attempt.py",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-18T18:13:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3c4ede65_e934e5bc",
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ea034c_368d1f22",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 152,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2022-10-17T16:45:36Z",
      "side": 1,
      "message": "Maybe you need to change it to \u0027\u003c\u0027\n\nfor example, for the first execution, the index is 0, the  len(self._started_executions[change]) is 0 too. so it will append a \u0027None\u0027 self._started_executions[change], which is not necessary.",
      "range": {
        "startLine": 152,
        "startChar": 48,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1598946_23e5e8a8",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 152,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-10-17T17:38:14Z",
      "side": 1,
      "message": "\u0027\u003c\u003d\u0027 is correct, if a little wasteful. The code appends a None, and then immediately overwrites it with the actual value. This is necessary, because otherwise you can get index out of range error.",
      "parentUuid": "c1ea034c_368d1f22",
      "range": {
        "startLine": 152,
        "startChar": 48,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dafbfaba_a044c719",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 152,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-17T23:20:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c1598946_23e5e8a8",
      "range": {
        "startLine": 152,
        "startChar": 48,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83b012d7_89296430",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1556122
      },
      "writtenOn": "2022-10-17T16:55:44Z",
      "side": 1,
      "message": "also change this line to:\nself._started_executions[change].append(test_execution).\n\nIt\u0027s more efficient for the code, but you may keep your code if you like.",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 60
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4098756_02c76a75",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-10-17T17:38:14Z",
      "side": 1,
      "message": "This method isn\u0027t always called in order, i.e., it could first get called for indexes 5 through 9, and then 0 through 4, so it\u0027s not always an append.\n\nProbably the better thing to do is this:\n\nNear beginning of this method, use:\n\n    if change not in self._started_executions:\n      self._started_executions[change] \u003d [None] * self._attempt_count\n      \nThen here we can do:\n\n    if len(self._started_executions[change]) \u003c self._attempt_count:\n      # This must have been created by an old version of the code,\n      # continue to do the old way.\n      self._started_executions[change].append(test_execution)\n    else:\n      # The new way\n      self._started_executions[change][index] \u003d test_execution",
      "parentUuid": "83b012d7_89296430",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 60
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "261950b1_c4f12325",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-17T23:20:20Z",
      "side": 1,
      "message": "I made the adjustments recommended, but I\u0027m not sure how these changes address potential Pinpoint jobs that are running when the traffic change takes place.\n\nWould there have to be additional edits on line 137 to specify an index: `dimensions \u003d self._GetDimensions(index)` ?",
      "parentUuid": "b4098756_02c76a75",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 60
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "283298c5_52e8358f",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1181219
      },
      "writtenOn": "2022-10-18T00:22:07Z",
      "side": 1,
      "message": "Here is an example of why Patch Set #6 wasn\u0027t safe. Let\u0027s say self._attempt_count is 10, and we are running the old version of this file (without this CL). Let\u0027s further assume that while processing the first 2 attempts, the isolate wasn\u0027t ready, but the isolate becomes ready for the final 8 attempts. This causes _Start to be called 8 times. Since the old code always append to self._started_executions[change], at the end this list will have 8 elements, all of them are not None.\n\nThen one minute later, the job will run again, and let\u0027s assume that within this minute, this CL has been deployed. Since the first 2 attempts haven\u0027t been started yet, _Start will be called twice, with index of 0 and 1, respectively. Code in patch set #6 would overwrite the first two elements of self._started_executions[change], so at the end the list will still have only 8 elements. This means we\u0027ll always have len(a_list) !\u003d self._attempt_count, and the job will not be able to run the tests.\n\nPatch Set #8 can detect that the list was created by a previous version of the code, and continue to use the old method (i.e., append to the list), to avoid the problem mentioned above.\n\nThinking more about this, we would still have problem if self._started_executions[change] is partially filled by the new version of the code, but then the deployed code is rolled back to the old version before the job is run again. This is harder to handle, as we can\u0027t change the behavior of old code. I think we just have to ignore that case.\n\nAbout line 137, to be strictly correct, we should overwrite index with len(self._started_executions[change]) if we detect the old case. I\u0027ll leave it up to you to decide whether to make that change. We would already be having bad pairing in that case anyway.",
      "parentUuid": "261950b1_c4f12325",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 60
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b99d3ae_e98753a8",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 154,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-18T18:13:49Z",
      "side": 1,
      "message": "Thanks for this explanation. I didn\u0027t make a revision to line 137. I did add one more log statement to track if any pinpoint jobs switched from older code to newer code mid-run",
      "parentUuid": "283298c5_52e8358f",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 60
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c0d126c_2b5a2a6e",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2022-10-15T16:40:14Z",
      "side": 1,
      "message": "nit: Let\u0027s have a different logging for this.",
      "range": {
        "startLine": 166,
        "startChar": 42,
        "endLine": 166,
        "endChar": 74
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09573b83_ef4d737f",
        "filename": "dashboard/dashboard/pinpoint/models/quest/run_test.py",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1521022
      },
      "writtenOn": "2022-10-17T23:20:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c0d126c_2b5a2a6e",
      "range": {
        "startLine": 166,
        "startChar": 42,
        "endLine": 166,
        "endChar": 74
      },
      "revId": "9d248526c79df845c3c2082337c62d87db008a42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}