{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "349a9d3d_2041566b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-11-05T17:47:18Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1092db52_1572cd4d",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 3603693
      },
      "writtenOn": "2024-11-05T19:44:33Z",
      "side": 1,
      "message": "Does this mean that if the sheriff_name is empty, then it will throw an bad_error response? We should handle the case when the shriff_name is empty, it still get a list of anomalies and return, correct?",
      "fixSuggestions": [
        {
          "fixId": "c0218278_e5a05575",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 93,
                "startChar": 0,
                "endLine": 94,
                "endChar": 0
              },
              "replacement": "  if sheriff_name and not _SheriffIsFound(sheriff_name, skia):\n"
            },
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 143,
                "startChar": 0,
                "endLine": 144,
                "endChar": 0
              },
              "replacement": "def _SheriffIsFound(sheriff_name, skia):\n"
            },
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 146,
                "startChar": 0,
                "endLine": 147,
                "endChar": 0
              },
              "replacement": "  subscriptions \u003d _GetSheriffList(skia)\n"
            },
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 150,
                "startChar": 0,
                "endLine": 151,
                "endChar": 0
              },
              "replacement": "def _GetSheriffList(skia):\n"
            },
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 156,
                "startChar": 0,
                "endLine": 157,
                "endChar": 0
              },
              "replacement": "  subscriptions, _ \u003d client.List(check\u003dTrue, skia\u003dskia)\n"
            },
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 266,
                "startChar": 0,
                "endLine": 267,
                "endChar": 0
              },
              "replacement": "    sheriff_config_names \u003d _GetSheriffList(skia\u003dTrue)\n"
            }
          ]
        }
      ],
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b77dcc_0b221698",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-11-05T19:47:08Z",
      "side": 1,
      "message": "This means if the sheriff name exists (is not None) but the name is not found in the datastore, we will throw and bad_request response.\n\nIf the sheriff_name is empty, we will ignore and continue.",
      "parentUuid": "1092db52_1572cd4d",
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f5af536_b47aa342",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 3603693
      },
      "writtenOn": "2024-11-05T21:44:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53b77dcc_0b221698",
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929f4a9b_34dfb3ae",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 3603693
      },
      "writtenOn": "2024-11-05T19:32:31Z",
      "side": 1,
      "message": "I think we need both start_revision and display_start, as display_start for revision-range calculation and start_revision for bug-info section",
      "fixSuggestions": [
        {
          "fixId": "d689611c_8fc3c049",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "dashboard/dashboard/alerts.py",
              "range": {
                "startLine": 204,
                "startChar": 0,
                "endLine": 206,
                "endChar": 0
              },
              "replacement": "    dct[\u0027start_revision\u0027] \u003d anomaly_entity.start_revision\n    dct[\u0027end_revision\u0027] \u003d anomaly_entity.end_revision\n    dct[\u0027display_start\u0027] \u003d anomaly_entity.display_start\n    dct[\u0027display_end\u0027] \u003d anomaly_entity.display_end\n"
            }
          ]
        }
      ],
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e29a953_b5542221",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1373330
      },
      "writtenOn": "2024-11-05T19:39:51Z",
      "side": 1,
      "message": "Actually this is a good catch. The bug-info section shows up only when we open the group_report with bug id. It looks like this:\nhttps://screenshot.googleplex.com/AQ9SGRibKwKtEa5\n\nI\u0027m not convinced that we need this immediately (or it is really helpful). That is the reason I didn\u0027t add those start/end_revision for now.",
      "parentUuid": "929f4a9b_34dfb3ae",
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bd9a43e_6466a05c",
        "filename": "dashboard/dashboard/alerts.py",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 3603693
      },
      "writtenOn": "2024-11-05T21:46:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5e29a953_b5542221",
      "revId": "4f29712edc7a43b701f1d9f179385da707a3cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}