{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46981610_6d7146dd",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1170419
      },
      "writtenOn": "2023-05-16T18:15:01Z",
      "side": 1,
      "message": "Will this also work below jammy?",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88f09f2a_411e85c4",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1338159
      },
      "writtenOn": "2023-05-16T18:30:04Z",
      "side": 1,
      "message": "`list_devices` is also updated to read this file as a proof of concept, according to the description in https://crbug.com/1424867. And this works fine on hosts with bionic. Would this be sufficient?",
      "parentUuid": "46981610_6d7146dd",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b7707ed_d1b81930",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1170419
      },
      "writtenOn": "2023-05-16T21:17:19Z",
      "side": 1,
      "message": "IDK what `list_devices` is. Is this script going to be able to handle the new source of info on both bionic and jammy?",
      "parentUuid": "88f09f2a_411e85c4",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38752b4c_bab9f84b",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1338159
      },
      "writtenOn": "2023-05-16T21:30:58Z",
      "side": 1,
      "message": "Oh, `list_devices` is a script to show all the android devices connected to the host. It works fine on both bionic and jammy after switching the info source from `usb-devices` to `/sys/kernel/debug/usb/devices`.",
      "parentUuid": "0b7707ed_d1b81930",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b05e5728_7495d611",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1170419
      },
      "writtenOn": "2023-05-16T21:38:49Z",
      "side": 1,
      "message": "`list_devices` and devil/devil/utils/find_usb_devices.py are presumably different codebases. So one could handle the switch while the other does not.\n\nWhat I\u0027m asking is: will _this_ script handle the switch?",
      "parentUuid": "38752b4c_bab9f84b",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7315e0ec_61422283",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1338159
      },
      "writtenOn": "2023-05-17T22:03:00Z",
      "side": 1,
      "message": "\u003e What I\u0027m asking is: will this script handle the switch?\n\nI tested the change on bionic (build248-m4) and jammy (build244-m4) in dev env. Both are working fine, i.e. phones are recognized correctly.",
      "parentUuid": "b05e5728_7495d611",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25a20639_f08a61f5",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1170419
      },
      "writtenOn": "2023-05-17T22:37:32Z",
      "side": 1,
      "message": "Thanks, lgtm",
      "parentUuid": "7315e0ec_61422283",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1349863b_7f7b497a",
        "filename": "devil/devil/utils/find_usb_devices.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1338159
      },
      "writtenOn": "2023-05-17T22:51:02Z",
      "side": 1,
      "message": "Thanks Ben!",
      "parentUuid": "25a20639_f08a61f5",
      "revId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1aa3c729e7da14b923b17b78b6f34b4862edd225",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}