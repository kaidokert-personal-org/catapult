{
  "comments": [
    {
      "key": {
        "uuid": "a2d33807_d9080a71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-01-25T19:28:37Z",
      "side": 1,
      "message": "This is still remote invocation. You need to ssh into the VM/device and run:\n/usr/local/telemetry/src/third_party/catapult/telemetry/bin/run_tests CrOSInterfaceTest.testStartCmdOnDevice\n\nYou will of course need to update local files on the device in \nusr/local/telemetry/src/third_party/catapult/telemetry/",
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12ca5c49_0de31477",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1182869
      },
      "writtenOn": "2019-01-25T21:19:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2d33807_d9080a71",
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd807552_c7804394",
        "filename": "telemetry/telemetry/core/cros_interface.py",
        "patchSetId": 6
      },
      "lineNbr": 258,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-01-25T19:40:42Z",
      "side": 1,
      "message": "I think this is a bit scary since the return code may or may not work correctly over SSH. Could you please add some tests to make sure that the return code of the subprocess is the same over ssh as it is locally both for failure return codes and for successful return codes?",
      "range": {
        "startLine": 257,
        "startChar": 6,
        "endLine": 258,
        "endChar": 20
      },
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b1be285_cff8d74b",
        "filename": "telemetry/telemetry/core/cros_interface.py",
        "patchSetId": 6
      },
      "lineNbr": 258,
      "author": {
        "id": 1182869
      },
      "writtenOn": "2019-01-25T21:19:21Z",
      "side": 1,
      "message": "This just returns the subprocess handler. The user has to verify whether or not the command executed with this API has succeeded or failed. I added examples in the testcase.\n\nPlease mark this comment as resolved if there is nothing more to do for this.",
      "parentUuid": "fd807552_c7804394",
      "range": {
        "startLine": 257,
        "startChar": 6,
        "endLine": 258,
        "endChar": 20
      },
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0175e1be_29e43d21",
        "filename": "telemetry/telemetry/core/cros_interface.py",
        "patchSetId": 6
      },
      "lineNbr": 258,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-01-25T22:21:29Z",
      "side": 1,
      "message": "That\u0027s what I was worried about. This type of API is asking to be misused. I can\u0027t approve this implementation. I suspect there are a couple of ways to fix this:\n\n1. See if there\u0027s some way you can make ssh command return returncode of the command that it runs. Maybe some option to the ssh binary?\n\n2. Instead of returning a subprocess handler, return your own wrapper around that handle that provides a returncode attribute that is from the command itself, not the ssh run.",
      "parentUuid": "6b1be285_cff8d74b",
      "range": {
        "startLine": 257,
        "startChar": 6,
        "endLine": 258,
        "endChar": 20
      },
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05a6d139_d61d8a14",
        "filename": "telemetry/telemetry/core/cros_interface_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 168,
      "author": {
        "id": 1000623
      },
      "writtenOn": "2019-01-25T19:28:37Z",
      "side": 1,
      "message": "Should you check for p.returncode before calling wait?",
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943cea65_66445595",
        "filename": "telemetry/telemetry/core/cros_interface_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 168,
      "author": {
        "id": 1182869
      },
      "writtenOn": "2019-01-25T21:19:21Z",
      "side": 1,
      "message": "wait/communicate sets the p.returncode value so checking before wait/communicate isn\u0027t useful.",
      "parentUuid": "05a6d139_d61d8a14",
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83c8c4d2_0b087655",
        "filename": "telemetry/telemetry/core/cros_interface_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 170,
      "author": {
        "id": 1149061
      },
      "writtenOn": "2019-01-25T19:40:42Z",
      "side": 1,
      "message": "This should be \n\nself.assertGreaterEqual(p.returncode, 0)\n\nor something like that. I know that some of the code in here uses \"assert\" instead of self.assertX, but that\u0027s not good practice when you are extending unittest.TestCase",
      "range": {
        "startLine": 170,
        "startChar": 6,
        "endLine": 170,
        "endChar": 30
      },
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f71fed99_bafaee46",
        "filename": "telemetry/telemetry/core/cros_interface_unittest.py",
        "patchSetId": 6
      },
      "lineNbr": 170,
      "author": {
        "id": 1182869
      },
      "writtenOn": "2019-01-25T21:19:21Z",
      "side": 1,
      "message": "Ah. I didn\u0027t know.\n\nDone.",
      "parentUuid": "83c8c4d2_0b087655",
      "range": {
        "startLine": 170,
        "startChar": 6,
        "endLine": 170,
        "endChar": 30
      },
      "revId": "6ace8e448c626283d9755163204cd92c88a684a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}