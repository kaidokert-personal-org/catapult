{
  "comments": [
    {
      "key": {
        "uuid": "f0bcafba_1a2d2992",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 318,
      "author": {
        "id": 1128435
      },
      "writtenOn": "2018-12-17T16:06:57Z",
      "side": 1,
      "message": "You are passing the possible_browser object to GenerateTags, not the browser. I think there are two ways moving forward here:\n\n1) Renaming the \"browser\" parameter in GenerateTags method to \"possible_browser\". Users are responsible for creating the actual browser, generating the tags by querying it, and close the browser themselves.\nPros: For users who don\u0027t need browser to create tags, they don\u0027t have to pay the cost of creating one.\nCons: Users are responsible for making sure to close the browser object themselves\n\n2) Update this code to s.t like:\n\nwith possible_browser.Create() as browser:\n   runner.args.tags \u003d test_class.GenerateTags(options, browser)",
      "range": {
        "startLine": 318,
        "startChar": 54,
        "endLine": 318,
        "endChar": 70
      },
      "revId": "f6bb04dae80ed3af1b371098ec37305ab990a110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "646fe06c_42e103af",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 318,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2018-12-17T19:51:28Z",
      "side": 1,
      "message": "Thanks Ned for identifying this issue. Either way sounds fine. Since some users might not need to query the browser to identify the tags, (1) sounds good to me as long as it\u0027s documented somewhere how to use the possible_browser object. (Finding the types and APIs for various objects in Telemetry, like \"backends\", etc., is difficult.)",
      "parentUuid": "f0bcafba_1a2d2992",
      "range": {
        "startLine": 318,
        "startChar": 54,
        "endLine": 318,
        "endChar": 70
      },
      "revId": "f6bb04dae80ed3af1b371098ec37305ab990a110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f534123f_347912d5",
        "filename": "telemetry/telemetry/testing/run_browser_tests.py",
        "patchSetId": 3
      },
      "lineNbr": 318,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2018-12-17T23:22:31Z",
      "side": 1,
      "message": "Option 1 sounds good to me.",
      "parentUuid": "646fe06c_42e103af",
      "range": {
        "startLine": 318,
        "startChar": 54,
        "endLine": 318,
        "endChar": 70
      },
      "revId": "f6bb04dae80ed3af1b371098ec37305ab990a110",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}