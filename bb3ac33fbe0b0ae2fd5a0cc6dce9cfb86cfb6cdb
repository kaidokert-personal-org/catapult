{
  "comments": [
    {
      "key": {
        "uuid": "960b68d6_1f21ee67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-08-08T21:58:20Z",
      "side": 1,
      "message": "Something like the following would be a better CL description:\n\"\"\"\nAdd FuchsiaDevice and FuchsiaForwarder class.\n\nThe new classes will be used in the future to run catapult tests\non Fuchsia.\n\"\"\"",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 11
      },
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44744920_8cb47381",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-08-08T21:58:20Z",
      "side": 1,
      "message": "nit: add an empty line here please",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 6
      },
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5491b05e_b0c6c14e",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "We have a way to pass a --chrome-root [1] from the test runner scripts which could be used for this.\nBut maybe it\u0027s too late after parsing args since we should have already imported all these modules?\n\nThere is also a GetChromiumSrcDir(), although that has been scheduled for deprecation for a long time [2].\n\nAlternatively, maybe just try to import the modules and attempt to \"degrade gracefully\" if they can\u0027t be imported (it could be as simple as making sure the \"fuchsia browser finder\" never finds anything).\n\nThen on your test runner (presumably living in chromium/src) you can add the fuchsia modules to sys.path so they are found when we try to import them here.\n\nNed, what do you think?\n\n[1]: https://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/browser/browser_options.py?rcl\u003d3cb00fbd56816b13ff51170a811a5a2938b32750\u0026l\u003d80\n[2]: https://github.com/catapult-project/catapult/issues/1978",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfeb59ca_5df28f52",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "whatever the solution is settled on above, let\u0027s start the imports one level up so these become:\n\n  from fuchsia import device_target\n  from fuchsia import net_test_server\n  from fuchsia import run_package\n\nAlso note we import modules, but not functions or classes, see:\nhttps://github.com/google/styleguide/blob/gh-pages/pyguide.md#22-imports",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e40fdd1_055766cc",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "can this be private?",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49b44bdd_26da2fd9",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "can we avoid reaching into the private attribute _auto?",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "098dc84e_20f09578",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "What happens if we create an interface for an \"already started\" device? Is such a thing possible? (Or: why do we need to \"Start\" here?)",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae96f6b_1f2185af",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "I don\u0027t think this should happen here. Instead it should expose an \"InstallApplication\" method for clients to call, e.g. like:\nhttps://cs.chromium.org/chromium/src/third_party/catapult/telemetry/telemetry/internal/platform/android_platform_backend.py?rcl\u003d3cb00fbd56816b13ff51170a811a5a2938b32750\u0026l\u003d377",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dc4a4d6_5f88f272",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "to reduce the API surface, can we remove this and keep only PutFiles?",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df0705f1_9183da1c",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "I think this method is not needed. This logic should belong to the FuchsiaForwarder.",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9499dfe_a5e17e18",
        "filename": "telemetry/telemetry/core/fuchsia_interface.py",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "nit: should this be \"is_local\" (because it returns a bool)?",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f000121_44d9b295",
        "filename": "telemetry/telemetry/internal/forwarders/fuchsia_forwarder.py",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1123010
      },
      "writtenOn": "2018-08-07T15:33:31Z",
      "side": 1,
      "message": "I\u0027m still unsure about the exact logic of the forwarder. Note this will be called twice by Telemetry.\n\n- The first time, Telemetry will start a server on the host for web page replay. This will\n  be serving content at some given local port (determined by the WPR server). The it will call\n  forwarder_factory.Create(local_port\u003dlocal_port, remote_port\u003dNone, reverse\u003dFalse) to get\n  a corresponding \"remote_port\". The remote_port is then given to Chrome so it reads web pages\n  from it.\n\n- The second time, *after* Chrome has started, it will publicize a port where devtools will\n  be listening to connections. This is a \"remote_port\" (on the device) which we want to\n  connect back to a \"local_port\" for Telemetry to talk to devtools, so we run:\n  forwarder_factory.Create(local_port\u003dNone, remote_port\u003dremote_port, reverse\u003dTrue)\n\n(setting either local or remote port to None means we let the forwarder pick any available port)\n\nSo your forwarder needs to support both of these usages. So far, do you also need to create this port forwardning for some other additional reason?",
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dede4b2d_3fa4eb31",
        "filename": "telemetry/telemetry/internal/platform/fuchsia_device.py",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-08-08T21:58:20Z",
      "side": 1,
      "message": "nit: empty line here please",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 14
      },
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d836a855_2cac0849",
        "filename": "telemetry/telemetry/internal/platform/fuchsia_device.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-08-08T21:58:20Z",
      "side": 1,
      "message": "this will wait forever if the process decides to write more data than can fit into the pipe buffer.\nit\u0027s better to call communicate() and then get the result out of the returned stdoutdata",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 13
      },
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6995fd2_14b2ed50",
        "filename": "telemetry/telemetry/internal/platform/fuchsia_device.py",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1116023
      },
      "writtenOn": "2018-08-08T21:58:20Z",
      "side": 1,
      "message": "FindAllAvailableDevices() already knows about _DEFAULT_FUCHSIA_IP, so you don\u0027t need to duplicate this logic here.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "bb3ac33fbe0b0ae2fd5a0cc6dce9cfb86cfb6cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}