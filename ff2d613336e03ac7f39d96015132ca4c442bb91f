{
  "comments": [
    {
      "key": {
        "uuid": "c2616920_c8f0099f",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 386,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-07-18T21:41:20Z",
      "side": 1,
      "message": "Is this method needed?",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b9d91f5_5f4b9f81",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 386,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-18T23:45:17Z",
      "side": 1,
      "message": "No, I will remove it.",
      "parentUuid": "c2616920_c8f0099f",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f42672d7_d988eb01",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 391,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-07-18T21:41:20Z",
      "side": 1,
      "message": "This is a really nice definition / property, and it probably wouldn\u0027t have occurred to me. Nice job! \n\nWe should make sure we include this when we document this in the file format.",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f8f1baf_3ee87099",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 391,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-18T23:45:17Z",
      "side": 1,
      "message": "ty, I will.",
      "parentUuid": "f42672d7_d988eb01",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "449d04dc_63392f1a",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 392,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-07-18T21:41:20Z",
      "side": 1,
      "message": "What do you mean by \"This function may be overridden\"?",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c8b12ed_ad6b36dd",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 392,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-18T23:45:17Z",
      "side": 1,
      "message": "Some test runners may have have some other conditions for conflicts between test expectation tag sets. One example are gpu tags in gpu tests. There are vendor tags like nvidia, and device tags like nvidia-0x1cb3. These tags would be considered as equal to each other because in a system configuration that has the nvidia gpu with 0x1cb3 device id, both the nvidia tag and nvidia-0x1cb3 would be in the tag list describing a system and therefore both expectations would apply to a test run. I was planning on overriding this method in the gpu tests presubmit to catch these conflicts.",
      "parentUuid": "449d04dc_63392f1a",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8fcb605_b80a2e5b",
        "filename": "third_party/typ/typ/expectations_parser.py",
        "patchSetId": 19
      },
      "lineNbr": 392,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-18T23:52:37Z",
      "side": 1,
      "message": "Instead of overriding the method, maybe I can add a dictionary that maps specific tags like gpu devices tags to generic tags like vendor tags. And use that in the logic in this function to find conflicts. During the presubmit checks I can populate the dictionary before checking for conflicts.",
      "parentUuid": "0c8b12ed_ad6b36dd",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "739913f5_31f6e429",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 19
      },
      "lineNbr": 387,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-07-18T21:41:20Z",
      "side": 1,
      "message": "You can shorten this example to just line 383, right? Or maybe lines 381-383?",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b55b5c19_ebe10fcf",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 19
      },
      "lineNbr": 387,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-18T23:52:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "739913f5_31f6e429",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec971a86_b44f46e8",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 19
      },
      "lineNbr": 427,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2019-07-18T21:41:20Z",
      "side": 1,
      "message": "We should probably add an explicit test for the \u0027conflicts_allowed: true\u0027 case, rather than relying on implicit coverage via other test cases.",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a7a4f7_86c0e9d6",
        "filename": "third_party/typ/typ/tests/expectations_parser_test.py",
        "patchSetId": 19
      },
      "lineNbr": 427,
      "author": {
        "id": 1311766
      },
      "writtenOn": "2019-07-19T00:00:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec971a86_b44f46e8",
      "revId": "ff2d613336e03ac7f39d96015132ca4c442bb91f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}